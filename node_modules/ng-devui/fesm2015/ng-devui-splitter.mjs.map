{"version":3,"file":"ng-devui-splitter.mjs","sources":["../../devui/splitter/resize.directive.ts","../../devui/splitter/splitter.service.ts","../../devui/splitter/splitter-bar.component.ts","../../devui/splitter/splitter-bar.component.html","../../devui/splitter/splitter-pane.component.ts","../../devui/splitter/splitter-pane.component.html","../../devui/splitter/splitter.component.ts","../../devui/splitter/splitter.component.html","../../devui/splitter/splitter.module.ts","../../devui/splitter/ng-devui-splitter.ts"],"sourcesContent":["import { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\n\n@Directive({\n  selector: '[dResize]'\n})\nexport class ResizeDirective implements OnInit, OnDestroy {\n  // 是否允许拖动\n  @Input() enableResize = true;\n  // 按下事件，mousedown，touchstart等\n  @Output() pressEvent = new EventEmitter<any>();\n  // 拖动中事件，mousemove，touchmove等\n  @Output() dragEvent = new EventEmitter<any>();\n  // 释放事件，mouseup，touchend等\n  @Output() releaseEvent = new EventEmitter<any>();\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this.enableResize) {\n      this.ngZone.runOutsideAngular(() => {\n        this.bindEvent();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.enableResize) {\n      this.unbind(this.el.nativeElement, 'mousedown', this.mousedown);\n      this.unbind(this.el.nativeElement, 'touchstart', this.touchstart);\n    }\n  }\n\n  bind = (el, event, callback) => el.addEventListener && el.addEventListener(event, callback);\n\n  unbind = (el, event, callback) => el && el.removeEventListener && el.removeEventListener(event, callback);\n\n  bindEvent() {\n    const element = this.el.nativeElement;\n    // 绑定mousedown事件\n    this.bind(element, 'mousedown', this.mousedown);\n    // 绑定触屏事件\n    this.bind(element, 'touchstart', this.touchstart);\n  }\n\n  mousedown = (e) => {\n    this.bind(document, 'mousemove', this.mousemove);\n    this.bind(document, 'mouseup', this.mouseup);\n    this.pressEvent.emit(this.normalizeEvent(e));\n  };\n\n  mousemove = (e) => {\n    this.dragEvent.emit(this.normalizeEvent(e));\n  };\n\n  mouseup = (e) => {\n    this.unbind(document, 'mousemove', this.mousemove);\n    this.unbind(document, 'mouseup', this.mouseup);\n    this.releaseEvent.emit(this.normalizeEvent(e));\n  };\n\n  touchstart = (e) => {\n    this.bind(document, 'touchmove', this.touchmove);\n    this.bind(document, 'touchend', this.touchend);\n    if (e.touches.length === 1) {\n      this.pressEvent.emit(this.normalizeEvent(e));\n    }\n  };\n\n  touchmove = (e) => {\n    if (e.touches.length === 1) {\n      this.dragEvent.emit(this.normalizeEvent(e));\n    }\n  };\n\n  touchend = (e) => {\n    this.unbind(document, 'touchmove', this.touchmove);\n    this.unbind(document, 'touchend', this.touchend);\n    if (e.touches.length === 0) {\n      this.releaseEvent.emit(this.normalizeEvent(e));\n    }\n  };\n\n  // 返回常用位置信息\n  normalizeEvent(e) {\n    // 判断事件类型，用于计算位置坐标\n    if (e.type.match(/touch/)) {\n      return {\n        pageX: e.changedTouches[0].pageX,\n        pageY: e.changedTouches[0].pageY,\n        clientX: e.changedTouches[0].clientX,\n        clientY: e.changedTouches[0].clientY,\n        type: e.type,\n        originalEvent: e,\n        isTouch: true\n      };\n    }\n    return {\n      pageX: e.pageX,\n      pageY: e.pageY,\n      clientX: e.clientX,\n      clientY: e.clientY,\n      offsetX: e.offsetX,\n      offsetY: e.offsetY,\n      type: e.type,\n      originalEvent: e\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { SplitterPaneComponent } from './splitter-pane.component';\n\n@Injectable()\nexport class SplitterService {\n  panes: Array<SplitterPaneComponent>;\n  private containerSize: Function;\n  paneCount = 0;\n  paneChangeSubject = new Subject();\n  // 配置pane信息，panes列表，方向，容器大小，方便后续计算使用\n  configPane({panes, orientation, containerSize}) {\n    this.panes = panes;\n    this.panes.forEach((pane, index) => {\n      pane.order = index * 2;\n      pane.orientation = orientation;\n    });\n    this.paneCount = this.panes.length;\n    this.containerSize = containerSize;\n  }\n\n  // 按下的时候计算pane的size信息\n  dragState(splitbarIndex) {\n    const prev = this.getPane(splitbarIndex);\n    const next = this.getPane(splitbarIndex + 1);\n    const total = prev.computedSize + next.computedSize;\n    return {\n      prev: {\n        index: splitbarIndex,\n        initialSize: prev.computedSize,\n        // 设置有最小值，直接取值，如果没有设置就用两个pane总和减去相邻pane的最大值，都没设置（NAN）在取0\n        minSize: this.toPixels(prev.minSize) || total - this.toPixels(next.maxSize) || 0,\n        // 设置有最大值，直接取值，如果没有设置就用两个pane总和减去相邻pane的最小值，都没设置（NAN）在取两个pane总和\n        maxSize: this.toPixels(prev.maxSize) || total - this.toPixels(next.minSize) || total\n      },\n      next: {\n        index: splitbarIndex + 1,\n        initialSize: next.computedSize,\n        minSize: this.toPixels(next.minSize) || total - this.toPixels(prev.maxSize) || 0,\n        maxSize: this.toPixels(next.maxSize) || total - this.toPixels(prev.minSize) || total\n      }\n    };\n  }\n\n  // 设置pane大小\n  setSize(state, distance) {\n    const prev = this.getPane(state.prev.index);\n    const next = this.getPane(state.next.index);\n    if (prev.size && next.size) {\n      // 相邻的两个pane都指定了size，需要同时修改size\n      this.resize(state.prev, distance);\n      this.resize(state.next, -distance);\n    } else if (next.size) {\n      // 如果 next pane，指定了size就修改next pane\n      this.resize(state.next, -distance);\n    } else {\n      // 最后不管pre pane，有没有指定，都修改 pre pane\n      this.resize(state.prev, distance);\n    }\n  }\n\n  // 大小限制函数，（max）小于最小值时取最小值， （min）大于最大值时取最大值\n  clamp(minSize, maxSize, initialSize) {\n    return Math.min(maxSize, Math.max(minSize, initialSize));\n  }\n\n  // resize pane的大小\n  resize(paneState, moveSize) {\n    const pane = this.getPane(paneState.index);\n    const splitterSize = this.containerSize();\n    const newSize = this.clamp(paneState.minSize, paneState.maxSize, paneState.initialSize + moveSize);\n    let size = '';\n    if (this.isPercent(pane.size)) {\n      size = (100 * newSize / splitterSize) + '%';\n    } else {\n      size = newSize + 'px';\n    }\n    pane.size = size;\n    pane.sizeChange.emit(size);\n  }\n\n  // 判断pane是否可以调整大小，只要有一边设置了不可调整或者收起，相邻pane调整就失效\n  isResizable(splitBarIndex) {\n    const prevPane = this.getPane(splitBarIndex);\n    const nextPane = this.getPane(splitBarIndex + 1);\n    const paneCollapsed = prevPane.collapsed || nextPane.collapsed;\n    return prevPane.resizable && nextPane.resizable && !paneCollapsed;\n  }\n\n  // 判断分割条是否是固定的，只要有一边不能调整, 就是禁用状态固定bar\n  isStaticBar(splitBarIndex) {\n    const prevPane = this.getPane(splitBarIndex);\n    const nextPane = this.getPane(splitBarIndex + 1);\n    return !(prevPane.resizable && nextPane.resizable);\n  }\n\n  // 获取pane，防止没有初始化的时候调用内部方法取值\n  getPane(index) {\n    if (!this.panes || index < 0 || index >= this.panes.length) {\n      throw new Error('no pane can return.');\n    }\n    return this.panes[index];\n  }\n\n  // 判断是不是百分比设置宽度\n  isPercent(size) {\n    return /%$/.test(size);\n  }\n\n  // 计算时把百分比转换为像素\n  toPixels(size) {\n    // 值不满足转换时，result为NAN，方便计算最小、最大宽度判断\n    let result = parseFloat(size);\n    if (this.isPercent(size)) {\n      result = (this.containerSize() * result / 100);\n    }\n    return result;\n  }\n\n  // 切换pane展开，收起\n  togglePane(paneIndex, nearPaneIndex, lockStatus?) {\n    const pane = this.getPane(paneIndex);\n    const nearPane = this.getPane(nearPaneIndex);\n    if (pane.collapsible) {\n      pane._collapsed = lockStatus ? pane._collapsed : !pane._collapsed;\n      pane.toggleCollapseClass();\n      nearPane.toggleNearPaneFlexGrow(pane._collapsed);\n      pane.collapsedChange.emit(pane._collapsed);\n    }\n  }\n}\n","import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component,\n  ElementRef, Host, HostBinding, Input, OnDestroy, OnInit, Renderer2, SkipSelf\n} from '@angular/core';\nimport { I18nService } from 'ng-devui/i18n';\nimport { Subscription } from 'rxjs';\nimport { filter, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { ResizeDirective } from './resize.directive';\nimport { SplitterService } from './splitter.service';\nimport { SplitterOrientation } from './splitter.types';\n\n@Component({\n  selector: 'd-splitter-bar',\n  templateUrl: './splitter-bar.component.html',\n  styleUrls: ['./splitter-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class SplitterBarComponent implements OnInit, AfterViewInit, OnDestroy {\n  // 当前pane索引\n  @Input() index: number;\n  // 窗格排列方向\n  @Input() orientation: SplitterOrientation;\n  // 是否显示展开/收缩按钮\n  @Input() showCollapseButton;\n  @Input() collapsePosLeft: string;\n  @Input() collapsePosTop: string;\n  // 分隔条大小\n  _splitBarSize;\n  @Input()\n  set splitBarSize(size) {\n    this._splitBarSize = size;\n    this.renderer.setStyle(this.el.nativeElement, 'flex-basis', size);\n  }\n  get splitBarSize() {\n    return this._splitBarSize;\n  }\n  @Input() disabledBarSize;\n\n  @HostBinding('class') get class() {\n    let bindClass = 'devui-splitter-bar devui-splitter-bar-' + this.orientation;\n    if (!this.splitter.isStaticBar(this.index)) {\n      bindClass += ' resizable';\n    } else {\n      this.renderer.setStyle(this.el.nativeElement, 'flex-basis', this.disabledBarSize);\n    }\n    return bindClass;\n  }\n  // 国际化文案\n  splitterText;\n  // 提示内容\n  preTip;\n  nextTip;\n  subscriptions = new Subscription();\n  // 移动的时候，阻止事件冒泡\n  private stopPropagation = ({ originalEvent: event }) => {\n    event.stopPropagation();\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  };\n\n  // 处理移动过程中的数据流, 合并到pressEvent事件流中\n  private moveStream = resize => mouseDown =>\n    resize.dragEvent.pipe(\n      takeUntil(resize.releaseEvent),\n      map(({ pageX, pageY }) => ({\n        originalX: mouseDown.pageX,\n        originalY: mouseDown.pageY,\n        pageX,\n        pageY\n      }))\n    );\n\n  constructor(private el: ElementRef,\n              private splitter: SplitterService,\n              private renderer: Renderer2,\n              @Host() private resize: ResizeDirective,\n              @SkipSelf() private cdr: ChangeDetectorRef,\n              private cdrSelf: ChangeDetectorRef,\n              private i18n: I18nService\n  ) {\n    this.splitter.paneChangeSubject.subscribe(() => {\n      this.initialCollapseStatus();\n      this.cdr.detectChanges();\n      this.cdrSelf.detectChanges();\n    });\n    this.splitterText = this.i18n.getI18nText().splitter;\n    this.subscriptions.add(this.i18n.langChange().subscribe(data => {\n      this.splitterText = data.splitter;\n    }));\n  }\n\n  ngOnInit(): void {\n    let state;\n    const resizeListener = this.resize.pressEvent\n      .pipe(\n        tap(this.stopPropagation),\n        filter(() => this.splitter.isResizable(this.index)),\n        tap(() => {state = this.splitter.dragState(this.index);}),\n        switchMap(this.moveStream(this.resize))\n      )\n      .subscribe(({ pageX, pageY, originalX, originalY }) => {\n        let distance;\n        if (this.orientation === 'vertical') {\n          distance = pageY - originalY;\n        } else {\n          distance = pageX - originalX;\n        }\n        this.splitter.setSize(state, distance);\n      });\n    this.subscriptions.add(resizeListener);\n  }\n\n  ngAfterViewInit(): void {\n    this.initialCollapseStatus();\n  }\n\n  initialCollapseStatus() {\n    this.collapsePrePane(true);\n    this.collapseNextPane(true);\n  }\n\n  collapsePrePane(lockStatus?) {\n    this.splitter.togglePane(this.index, this.index + 1, lockStatus);\n    this.toggleResize();\n  }\n\n  collapseNextPane(lockStatus?) {\n    this.splitter.togglePane(this.index + 1, this.index, lockStatus);\n    this.toggleResize();\n  }\n\n  queryPanes(index, nearIndex) {\n    const pane = this.splitter.getPane(index);\n    const nearPane = this.splitter.getPane(nearIndex);\n    return { pane, nearPane };\n  }\n\n  // 切换是否允许拖拽，收起时不能拖拽\n  toggleResize() {\n    const { pane, nearPane } = this.queryPanes(this.index, this.index + 1);\n    const isCollapsed = pane.collapsed || nearPane.collapsed;\n    if (isCollapsed) {\n      this.renderer.addClass(this.el.nativeElement, 'none-resizable');\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, 'none-resizable');\n    }\n  }\n\n  // 计算前面板收起操作样式\n  get prevClass() {\n    const { pane, nearPane } = this.queryPanes(this.index, this.index + 1);\n    this.preTip = pane.collapsed ? this.splitterText.expand : this.splitterText.collapse;\n    // 第一个面板或者其它面板折叠方向不是向后的显示操作按钮\n    const showIcon = (pane.collapseDirection !== 'after' || this.index === 0);\n    return this.generateCollapseClass(pane, nearPane, showIcon);\n  }\n\n  // 计算相邻面板收起操作样式\n  get nextClass() {\n    const { pane, nearPane } = this.queryPanes(this.index + 1, this.index);\n    this.nextTip = pane.collapsed ? this.splitterText.expand : this.splitterText.collapse;\n    // 最后一个面板或者其它面板折叠方向不是向前的显示操作按钮\n    const showIcon = (pane.collapseDirection !== 'before' || this.index + 1 === this.splitter.paneCount - 1);\n    return this.generateCollapseClass(pane, nearPane, showIcon);\n  }\n\n  // 生成拼接样式\n  generateClass(classes) {\n    return Object.keys(classes).filter(c => classes[c]).join(' ');\n  }\n\n  // 根据当前状态生成收起按钮样式\n  generateCollapseClass(pane, nearPane, showIcon) {\n    // 是否允许收起\n    const isCollapsible = pane.collapsible && showIcon;\n    // 当前收起状态\n    const isCollapsed = pane.collapsed;\n    // 一个pane收起的时候，隐藏相邻pane的收起按钮\n    const isNearPaneCollapsed = nearPane.collapsed;\n    return this.generateClass({\n      'devui-collapse': isCollapsible,\n      'collapsed': isCollapsed,\n      'hidden': isNearPaneCollapsed\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    this.splitter.paneChangeSubject.unsubscribe();\n  }\n}\n","<div\n  class=\"prev\"\n  *ngIf=\"showCollapseButton\"\n  dPopover\n  [style.left]=\"collapsePosLeft\"\n  [style.top]=\"collapsePosTop\"\n  [trigger]=\"'hover'\"\n  [controlled]=\"true\"\n  [ngClass]=\"prevClass\"\n  [content]=\"preTip\"\n  [showAnimation]=\"false\"\n  [mouseEnterDelay]=\"100\"\n  [mouseLeaveDelay]=\"0\"\n  (click)=\"collapsePrePane()\"\n  (touchstart)=\"collapsePrePane()\"\n></div>\n<div class=\"devui-resize-handle\"></div>\n<div\n  class=\"next\"\n  *ngIf=\"showCollapseButton\"\n  dPopover\n  [trigger]=\"'hover'\"\n  [controlled]=\"true\"\n  [ngClass]=\"nextClass\"\n  [content]=\"nextTip\"\n  (click)=\"collapseNextPane()\"\n  (touchstart)=\"collapseNextPane()\"\n></div>\n","import {\n  AfterViewChecked, ChangeDetectionStrategy, Component, ElementRef, EventEmitter,\n  HostBinding, Input, OnChanges, Output, Renderer2, SimpleChanges\n} from '@angular/core';\nimport { SplitterService } from './splitter.service';\nimport { CollapseDirection, SplitterOrientation } from './splitter.types';\n@Component({\n  selector: 'd-splitter-pane',\n  templateUrl: './splitter-pane.component.html',\n  styleUrls: ['./splitter-pane.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\n\nexport class SplitterPaneComponent implements OnChanges, AfterViewChecked {\n  // pane的最小值\n  @Input() minSize: string;\n  // pane的最大值\n  @Input() maxSize: string;\n  // 当前panel是否可调整大小\n  @Input() resizable = true;\n  // 面板是否可折叠\n  @Input() collapsible = false;\n  // 是否折叠收缩\n  @Input() shrink = false;\n  // 折叠收缩后宽度\n  @Input() shrinkWidth = 36;\n  // 面板初始化是否折叠，默认不折叠\n  _collapsed = false;\n  @Input()\n  set collapsed(newCollapsed) {\n    if (this._collapsed !== newCollapsed) {\n      this._collapsed = newCollapsed;\n      this.splitter.paneChangeSubject.next(true);\n    }\n  }\n  get collapsed() {\n    return this._collapsed;\n  }\n  // 非边缘面板折叠方向，before只生成向前折叠的按钮，after生成向后折叠按钮，both生成两个\n  @Input() collapseDirection: CollapseDirection = 'both';\n  widthBeforeShrink;\n  // pane初始化大小\n  _size;\n  @Input()\n  set size(newSize) {\n    this._size = newSize;\n    this.widthBeforeShrink = newSize;\n    this.renderer.setStyle(this.element, 'flex-basis', newSize);\n    const paneFixedClass = 'devui-splitter-pane-fixed';\n    if (this.size) {\n      // 设置 flex-grow 和 flex-shrink\n      this.renderer.addClass(this.element, paneFixedClass);\n    } else {\n      this.renderer.removeClass(this.element, paneFixedClass);\n    }\n  }\n  get size() {\n    return this._size;\n  }\n  // 大小改变事件\n  @Output() sizeChange = new EventEmitter<any>();\n\n  // 收起和展开事件\n  @Output() collapsedChange = new EventEmitter<any>();\n\n  // 收缩和展开事件\n  @Output() shrinkStatusChange = new EventEmitter<boolean>();\n\n  @HostBinding('class.devui-splitter-pane') paneClass = true;\n\n  orientation: SplitterOrientation; // 分割条方向\n  _order = 0; // flex布局下pane位置\n  element; // nativeElement句柄\n\n  set order(paneOrder) {\n    this._order = paneOrder;\n    this.setOrderStyles();\n  }\n  get order() {\n    return this._order;\n  }\n\n  constructor(private splitter: SplitterService, private el: ElementRef, private renderer: Renderer2) {\n    this.element = this.el.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ((changes.collapsible && !changes.collapsible.isFirstChange()) || (changes.resizable && !changes.resizable.isFirstChange())) {\n      this.splitter.paneChangeSubject.next(true);\n    }\n  }\n\n  // 设置order\n  setOrderStyles() {\n    this.renderer.setStyle(this.element, 'order', this.order);\n  }\n\n  // 获取当前pane大小\n  get computedSize() {\n    if (this.orientation === 'vertical') {\n      return this.element.offsetHeight;\n    } else {\n      return this.element.offsetWidth;\n    }\n  }\n\n  // 收起时隐藏当前pane\n  toggleCollapseClass() {\n    const paneHiddenClass = 'devui-splitter-pane-hidden';\n\n    if (!this._collapsed) {\n      this.renderer.removeClass(this.element, paneHiddenClass);\n    } else {\n      this.renderer.addClass(this.element, paneHiddenClass);\n    }\n\n    if (this._collapsed && this.shrink) {\n      this.renderer.removeClass(this.element, paneHiddenClass);\n      this.renderer.setStyle(this.element, 'flex-basis', `${this.shrinkWidth}px`);\n      this.shrinkStatusChange.emit(true);\n    } else {\n      this.renderer.setStyle(this.element, 'flex-basis', this.widthBeforeShrink);\n      this.shrinkStatusChange.emit(false);\n    }\n  }\n\n  // 收起时用于改变相邻pane的flex-grow属性来改变非自适应pane的size\n  toggleNearPaneFlexGrow(collapsed) {\n    const flexGrowClass = 'devui-splitter-pane-grow';\n    const hasFlexGrowClass = this.element.classList.contains(flexGrowClass);\n    if (hasFlexGrowClass) {\n      this.renderer.removeClass(this.element, flexGrowClass);\n    } else if (collapsed) {\n      this.renderer.addClass(this.element, flexGrowClass);\n    }\n  }\n\n  ngAfterViewChecked() {\n    // 视图检查完对resizeable pane设置flex属性\n    if (!this.size && !this.resizable) {\n      this.renderer.addClass(this.element, 'devui-splitter-pane-fixed');\n    }\n  }\n}\n","<ng-content></ng-content>\n","import {\n  AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, ElementRef,\n  HostBinding, Input, OnChanges, OnDestroy, QueryList, SimpleChanges\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SplitterPaneComponent } from './splitter-pane.component';\nimport { SplitterService } from './splitter.service';\nimport { SplitterOrientation } from './splitter.types';\n@Component({\n  selector: 'd-splitter',\n  exportAs: 'dSplitter',\n  templateUrl: './splitter.component.html',\n  styleUrls: ['./splitter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    SplitterService\n  ],\n  preserveWhitespaces: false,\n})\n\nexport class SplitterComponent implements OnChanges, AfterContentInit, OnDestroy {\n  // 指定Splitter中窗格的方向，默认水平分割。\n  @Input() orientation: SplitterOrientation = 'horizontal';\n  // 分隔条大小\n  @Input() splitBarSize = '2px';\n  // pane设置为不可调整大小时，生效\n  @Input() disabledBarSize = '1px';\n  // 是否显示展开/收缩按钮\n  @Input() showCollapseButton = true;\n  @Input() collapsePosLeft: string;\n  @Input() collapsePosTop: string;\n\n  @HostBinding('class') get class() {\n    return 'devui-splitter devui-splitter-' + this.orientation;\n  }\n  // 内嵌面板\n  @ContentChildren(SplitterPaneComponent) panes: QueryList<SplitterPaneComponent>;\n  paneChangesSubscription: Subscription;\n\n  constructor(private el: ElementRef, private splitter: SplitterService, private cdr: ChangeDetectorRef) {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.orientation && !changes.orientation.isFirstChange()) {\n      this.reconfigure();\n    }\n  }\n\n  ngAfterContentInit() {\n    this.reconfigure();\n    // contentChildren 变化时，触发重新设置pane\n    this.paneChangesSubscription = this.panes.changes.subscribe((panes) => {\n      this.reconfigure();\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.paneChangesSubscription) {\n      this.paneChangesSubscription.unsubscribe();\n    }\n  }\n\n  // 配置pane\n  reconfigure() {\n    this.splitter.configPane({\n      panes: this.panes.toArray(),\n      orientation: this.orientation,\n      // 内容投影进组件之后，组件还没有渲染出dom，此时获取不到宽度，此处设置一个回调函数\n      containerSize: () => {\n        if (this.orientation === 'vertical') {\n          return this.el.nativeElement.clientHeight;\n        } else {\n          return this.el.nativeElement.clientWidth;\n        }\n      }\n    });\n  }\n}\n","<ng-content select=\"d-splitter-pane\"></ng-content>\n<ng-container *ngFor=\"let pane of panes; let index = index; let last = last\">\n  <d-splitter-bar\n    dResize\n    [style.order]=\"index * 2 + 1\"\n    *ngIf=\"!last\"\n    [index]=\"index\"\n    [splitBarSize]=\"splitBarSize\"\n    [disabledBarSize]=\"disabledBarSize\"\n    [orientation]=\"orientation\"\n    [showCollapseButton]=\"showCollapseButton\"\n    [collapsePosLeft]=\"collapsePosLeft\"\n    [collapsePosTop]=\"collapsePosTop\"\n  >\n  </d-splitter-bar>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { PopoverModule } from 'ng-devui/popover';\nimport { ResizeDirective } from './resize.directive';\nimport { SplitterBarComponent } from './splitter-bar.component';\nimport { SplitterPaneComponent } from './splitter-pane.component';\nimport { SplitterComponent } from './splitter.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    PopoverModule\n  ],\n  exports: [\n    SplitterComponent,\n    SplitterPaneComponent,\n    SplitterBarComponent,\n    ResizeDirective\n  ],\n  declarations: [\n    SplitterComponent,\n    SplitterPaneComponent,\n    SplitterBarComponent,\n    ResizeDirective\n  ],\n  providers: []\n})\nexport class SplitterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}