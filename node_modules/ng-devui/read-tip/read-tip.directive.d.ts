import { ComponentFactoryResolver, ComponentRef, ElementRef, Injector, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';
import { OverlayContainerRef } from 'ng-devui/overlay-container';
import { ReadTipComponent } from './read-tip.component';
import { ReadTipOptions, ReadTipRule } from './read-tip.types';
import * as i0 from "@angular/core";
export declare class ReadTipDirective implements OnInit, OnDestroy {
    private el;
    private componentFactoryResolver;
    private overlayContainerRef;
    private inject;
    private viewContainerRef;
    private doc;
    readTipComponentRef: ComponentRef<ReadTipComponent>;
    _prevTarget: any;
    document: Document;
    defaultOptions: ReadTipOptions;
    set prevTarget(target: any);
    readTipOptions: ReadTipOptions;
    contentTemplate: TemplateRef<any>;
    onMouseOver(event: MouseEvent): void;
    onMouseOut(event: MouseEvent): void;
    onClick(event: MouseEvent): void;
    constructor(el: ElementRef, componentFactoryResolver: ComponentFactoryResolver, overlayContainerRef: OverlayContainerRef, inject: Injector, viewContainerRef: ViewContainerRef, doc: any);
    ngOnInit(): void;
    ngOnDestroy(): void;
    show(target: any, rule?: ReadTipRule): void;
    createReadTip(target: any, rule?: ReadTipRule): void;
    hide(): void;
    destroy(): void;
    onDocumentClick: (event: any) => void;
    findElementIndex(element: any, rules: any, trigger: any): import("rxjs").Observable<{
        shouldTrigger: boolean;
        rule: any;
    }>;
    isCorrectElement(selector: string, element: any): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<ReadTipDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ReadTipDirective, "[dReadTip]", ["dReadTip"], { "readTipOptions": "readTipOptions"; "contentTemplate": "contentTemplate"; }, {}, never>;
}
