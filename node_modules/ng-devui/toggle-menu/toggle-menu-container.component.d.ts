import { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectedPosition, VerticalConnectionPos } from '@angular/cdk/overlay';
import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { AppendToBodyDirection, DevConfigService } from 'ng-devui/utils';
import { WindowRef } from 'ng-devui/window-ref';
import { ToggleMenuListComponent } from './toggle-menu-list.component';
import * as i0 from "@angular/core";
export declare class ToggleMenuContainerComponent implements OnInit, OnChanges {
    element: ElementRef;
    private windowRef;
    private ngZone;
    private renderer;
    private changeDetectorRef;
    private devConfigService;
    private doc;
    set isOpen(value: boolean);
    get isOpen(): boolean;
    /**
     * 【可选】是否appendToBody
     */
    appendToBody: boolean;
    appendToBodyDirections: Array<AppendToBodyDirection | ConnectedPosition>;
    /**
     * 【可选】cdk模式origin width
     */
    width: number;
    size: '' | 'sm' | 'lg';
    /**
     * auto-complete 参数
     */
    overview: string;
    position: any;
    /**
     * 【可选】是否禁用下拉框
     */
    disabled: boolean;
    /**
     * 【可选】是否展示动效
     */
    showAnimation: boolean;
    /**
     * 【可选】是否支持聚焦自动展开下拉
     */
    toggleOnFocus: boolean;
    closeScope: 'all' | 'blank' | 'none';
    direction: 'up' | 'down' | 'auto';
    selectWrapper: ElementRef;
    /**
     * select下拉toggle事件，值为true或false
     */
    toggleChange: EventEmitter<any>;
    passEvent: EventEmitter<any>;
    selectBoxElement: ElementRef;
    selectMenuElement: ElementRef;
    connectedOverlay: CdkConnectedOverlay;
    listInstance: ToggleMenuListComponent;
    _isOpen: boolean;
    isInit: boolean;
    isMouseEvent: boolean;
    startAnimation: boolean;
    labelMinHeight: number;
    popDirection: 'top' | 'bottom';
    menuPosition: VerticalConnectionPos;
    cdkConnectedOverlayOrigin: CdkOverlayOrigin;
    overlayPositions: Array<ConnectedPosition>;
    dropDownWidth: number;
    document: Document;
    constructor(element: ElementRef, windowRef: WindowRef, ngZone: NgZone, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef, devConfigService: DevConfigService, doc: any);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    animationEnd(): void;
    setPositions(): void;
    updatePosition(): void;
    setPassEvent(event: any, type: any): void;
    onPositionChange(position: ConnectedOverlayPositionChange): void;
    setDocumentClickListener(): void;
    onDocumentClick: (event: Event) => void;
    setMouseEventTrue(event: any): void;
    setMouseEventFalse(event: any): void;
    autoToggle(event: any): void;
    toggle(event?: Event): void;
    isBottomRectEnough(): boolean;
    updateCdkConnectedOverlayOrigin(): void;
    toggleChangeFn(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ToggleMenuContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ToggleMenuContainerComponent, "d-toggle-menu-container", never, { "isOpen": "isOpen"; "appendToBody": "appendToBody"; "appendToBodyDirections": "appendToBodyDirections"; "width": "width"; "size": "size"; "overview": "overview"; "position": "position"; "disabled": "disabled"; "showAnimation": "showAnimation"; "toggleOnFocus": "toggleOnFocus"; "closeScope": "closeScope"; "direction": "direction"; "selectWrapper": "selectWrapper"; }, { "toggleChange": "toggleChange"; "passEvent": "passEvent"; }, ["listInstance"], ["*", "d-toggle-menu-list"]>;
}
