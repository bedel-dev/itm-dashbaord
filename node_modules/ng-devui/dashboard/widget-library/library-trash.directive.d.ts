import { AfterViewInit, ElementRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { DashboardComponent } from '../dashboard.component';
import { GridStackService } from '../grid-stack.service';
import * as i0 from "@angular/core";
export declare class DashboardLibraryTrashDirective implements OnChanges, OnDestroy, AfterViewInit {
    private el;
    targetDashboard: DashboardComponent;
    trashData: any;
    dropDisabled: boolean;
    hostBinding: boolean;
    isSetup: boolean;
    get gridStackService(): GridStackService;
    constructor(el: ElementRef);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    setup(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DashboardLibraryTrashDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DashboardLibraryTrashDirective, "[dDashboardLibraryTrash]", never, { "targetDashboard": "targetDashboard"; "trashData": "trashData"; "dropDisabled": "dropDisabled"; }, {}, never>;
}
