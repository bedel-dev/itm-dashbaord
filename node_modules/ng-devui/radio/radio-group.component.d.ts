import { AfterViewInit, EventEmitter, OnChanges, QueryList, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { Observable } from 'rxjs';
import { RadioComponent } from './radio.component';
import * as i0 from "@angular/core";
export declare class RadioGroupComponent implements ControlValueAccessor, OnChanges, AfterViewInit {
    constructor();
    name: string;
    values: any[];
    /**
     * @deprecated Use direction to replace.
     */
    set cssStyle(direction: any);
    direction: 'row' | 'column';
    disabled: boolean;
    beforeChange: (value: any) => boolean | Promise<boolean> | Observable<boolean>;
    change: EventEmitter<any>;
    radios: QueryList<RadioComponent>;
    _value: any;
    onChange: (_: any) => null;
    onTouched: () => null;
    onRadioChange(event: any): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    registerRadio(radio: RadioComponent): void;
    canChange(): Promise<boolean>;
    handleChange($event: any, value: any): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RadioGroupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RadioGroupComponent, "d-radio-group", never, { "name": "name"; "values": "values"; "cssStyle": "cssStyle"; "direction": "direction"; "disabled": "disabled"; "beforeChange": "beforeChange"; }, { "change": "change"; }, ["radios"], ["d-radio"]>;
}
