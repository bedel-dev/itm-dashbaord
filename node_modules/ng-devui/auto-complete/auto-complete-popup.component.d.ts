import { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectedPosition, VerticalConnectionPos } from '@angular/cdk/overlay';
import { ElementRef, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { AutoCompleteConfig } from './auto-complete-config';
import * as i0 from "@angular/core";
export declare class AutoCompletePopupComponent implements ControlValueAccessor {
    private autoCompleteConfig;
    elementRef: ElementRef;
    width: number;
    cssClass: string;
    maxHeight: number;
    disabled: boolean;
    disabledKey: string;
    source: any[];
    position: any;
    isOpen: boolean;
    term: string;
    popTipsText: string;
    /**
     * @deprecated
     */
    overview: string;
    itemTemplate: TemplateRef<any>;
    noResultItemTemplate: TemplateRef<any>;
    searchingTemplate: TemplateRef<any>;
    isSearching: boolean;
    formatter: (item: any) => string;
    dropdown: boolean;
    selectWidth: any;
    enableLazyLoad: boolean;
    appendToBody: boolean;
    cdkOverlayOffsetY: number;
    origin: CdkOverlayOrigin | undefined;
    showAnimation: boolean;
    selectMenuElement: ElementRef;
    dropdownUl: ElementRef;
    connectedOverlay: CdkConnectedOverlay;
    activeIndex: number;
    hoverIndex: number;
    labelMinHeight: number;
    showLoading: boolean;
    overlayPositions: Array<ConnectedPosition>;
    popPosition: VerticalConnectionPos;
    popDirection: 'top' | 'bottom';
    private value;
    private onChange;
    private onTouched;
    constructor(autoCompleteConfig: AutoCompleteConfig, elementRef: ElementRef);
    writeValue(obj: any): void;
    setDisabledState(isDisabled: boolean): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    onSelect(event: any, item: any): void;
    selectCurrentItem(event: any): void;
    onActiveIndexChange(index: any): void;
    reset(): void;
    scrollToActive(index?: any): void;
    next(): void;
    prev(): void;
    trackByFn(index: any, item: any): any;
    animationEnd($event: any): void;
    loadMoreEvent($event: any): void;
    loadFinish($event: any): void;
    onPositionChange(position: ConnectedOverlayPositionChange): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AutoCompletePopupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AutoCompletePopupComponent, "d-auto-complete-popup", never, { "width": "width"; "cssClass": "cssClass"; "maxHeight": "maxHeight"; "disabled": "disabled"; "disabledKey": "disabledKey"; "source": "source"; "position": "position"; "isOpen": "isOpen"; "term": "term"; "popTipsText": "popTipsText"; "overview": "overview"; "itemTemplate": "itemTemplate"; "noResultItemTemplate": "noResultItemTemplate"; "searchingTemplate": "searchingTemplate"; "isSearching": "isSearching"; "formatter": "formatter"; "dropdown": "dropdown"; "selectWidth": "selectWidth"; "enableLazyLoad": "enableLazyLoad"; "appendToBody": "appendToBody"; "cdkOverlayOffsetY": "cdkOverlayOffsetY"; "origin": "origin"; "showAnimation": "showAnimation"; }, {}, never, never>;
}
