import { Directive, ElementRef, HostBinding, HostListener, Input } from '@angular/core';
import { ModalService } from 'ng-devui/modal';
import { Subject } from 'rxjs';
import { DImagePreviewComponent } from './image-preview.component';
import * as i0 from "@angular/core";
import * as i1 from "ng-devui/modal";
export class ImagePreviewDirective {
    constructor(elementRef, modalService) {
        this.elementRef = elementRef;
        this.modalService = modalService;
        this.disableDefault = false;
    }
    get defaultClasses() {
        return !this.disableDefault;
    }
    onClick($event) {
        if (this.disableDefault) {
            return;
        }
        const target = $event.target;
        if (target && target.nodeName.toLowerCase() === 'img') {
            this.imagePreView(target);
        }
    }
    ngOnInit() {
        if (this.customSub) {
            this.customSub.subscribe((target) => {
                this.imagePreView(target);
            });
        }
    }
    ngOnDestroy() {
        if (this.customSub) {
            this.customSub.unsubscribe();
        }
    }
    imagePreView(imageHTMLElement) {
        const modalRef = this.modalService.open({
            id: 'devui-image-preview-modal',
            component: DImagePreviewComponent,
            zIndex: this.zIndex,
            backDropZIndex: this.backDropZIndex,
            showAnimation: false,
            data: {
                targetImage: imageHTMLElement,
                images: Array.from(this.elementRef.nativeElement.querySelectorAll('img')),
                onClose: () => {
                    modalRef.modalInstance.hide();
                },
            },
        });
    }
}
ImagePreviewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ImagePreviewDirective, deps: [{ token: i0.ElementRef }, { token: i1.ModalService }], target: i0.ɵɵFactoryTarget.Directive });
ImagePreviewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.3", type: ImagePreviewDirective, selector: "[dImagePreview]", inputs: { customSub: "customSub", disableDefault: "disableDefault", zIndex: "zIndex", backDropZIndex: "backDropZIndex" }, host: { listeners: { "click": "onClick($event)" }, properties: { "class.devui-image-preview-container": "this.defaultClasses" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ImagePreviewDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[dImagePreview]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.ModalService }]; }, propDecorators: { customSub: [{
                type: Input
            }], disableDefault: [{
                type: Input
            }], zIndex: [{
                type: Input
            }], backDropZIndex: [{
                type: Input
            }], defaultClasses: [{
                type: HostBinding,
                args: ['class.devui-image-preview-container']
            }], onClick: [{
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2UtcHJldmlldy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kZXZ1aS9pbWFnZS1wcmV2aWV3L2ltYWdlLXByZXZpZXcuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUMzRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMvQixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7O0FBSW5FLE1BQU0sT0FBTyxxQkFBcUI7SUFFaEMsWUFDVSxVQUFzQixFQUN0QixZQUEwQjtRQUQxQixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3RCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBSTNCLG1CQUFjLEdBQUcsS0FBSyxDQUFDO0lBSDVCLENBQUM7SUFRTCxJQUNJLGNBQWM7UUFDaEIsT0FBTyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDOUIsQ0FBQztJQUVELE9BQU8sQ0FBQyxNQUFNO1FBQ1osSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ3ZCLE9BQU87U0FDUjtRQUNELE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDN0IsSUFBSSxNQUFNLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsS0FBSyxLQUFLLEVBQUU7WUFDckQsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFxQixDQUFDLENBQUM7U0FDMUM7SUFDSCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNsQixJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO2dCQUNsQyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzVCLENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNsQixJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzlCO0lBQ0gsQ0FBQztJQUVELFlBQVksQ0FBQyxnQkFBNkI7UUFDeEMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7WUFDdEMsRUFBRSxFQUFFLDJCQUEyQjtZQUMvQixTQUFTLEVBQUUsc0JBQXNCO1lBQ2pDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtZQUNuQixjQUFjLEVBQUUsSUFBSSxDQUFDLGNBQWM7WUFDbkMsYUFBYSxFQUFFLEtBQUs7WUFDcEIsSUFBSSxFQUFFO2dCQUNKLFdBQVcsRUFBRSxnQkFBZ0I7Z0JBQzdCLE1BQU0sRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUN6RSxPQUFPLEVBQUUsR0FBRyxFQUFFO29CQUNaLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQ2hDLENBQUM7YUFDRjtTQUNGLENBQUMsQ0FBQztJQUNMLENBQUM7O2tIQXpEVSxxQkFBcUI7c0dBQXJCLHFCQUFxQjsyRkFBckIscUJBQXFCO2tCQUhqQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7aUJBQzVCOzRIQVFVLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0csY0FBYztzQkFBdEIsS0FBSztnQkFFRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0csY0FBYztzQkFBdEIsS0FBSztnQkFHRixjQUFjO3NCQURqQixXQUFXO3VCQUFDLHFDQUFxQztnQkFLbEQsT0FBTztzQkFETixZQUFZO3VCQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSG9zdEJpbmRpbmcsIEhvc3RMaXN0ZW5lciwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNb2RhbFNlcnZpY2UgfSBmcm9tICduZy1kZXZ1aS9tb2RhbCc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBESW1hZ2VQcmV2aWV3Q29tcG9uZW50IH0gZnJvbSAnLi9pbWFnZS1wcmV2aWV3LmNvbXBvbmVudCc7XG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbZEltYWdlUHJldmlld10nLFxufSlcbmV4cG9ydCBjbGFzcyBJbWFnZVByZXZpZXdEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgIHByaXZhdGUgbW9kYWxTZXJ2aWNlOiBNb2RhbFNlcnZpY2VcbiAgKSB7IH1cblxuICBASW5wdXQoKSBjdXN0b21TdWI6IFN1YmplY3Q8SFRNTEVsZW1lbnQ+O1xuICBASW5wdXQoKSBkaXNhYmxlRGVmYXVsdCA9IGZhbHNlO1xuICAvLyBUT0RPOiDmj5DkvpvnlKjmiLflj6/lrprliLbpgInmi6nlmahcbiAgQElucHV0KCkgekluZGV4OiBudW1iZXI7XG4gIEBJbnB1dCgpIGJhY2tEcm9wWkluZGV4OiBudW1iZXI7XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5kZXZ1aS1pbWFnZS1wcmV2aWV3LWNvbnRhaW5lcicpXG4gIGdldCBkZWZhdWx0Q2xhc3NlcygpIHtcbiAgICByZXR1cm4gIXRoaXMuZGlzYWJsZURlZmF1bHQ7XG4gIH1cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKVxuICBvbkNsaWNrKCRldmVudCkge1xuICAgIGlmICh0aGlzLmRpc2FibGVEZWZhdWx0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHRhcmdldCA9ICRldmVudC50YXJnZXQ7XG4gICAgaWYgKHRhcmdldCAmJiB0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2ltZycpIHtcbiAgICAgIHRoaXMuaW1hZ2VQcmVWaWV3KHRhcmdldCBhcyBIVE1MRWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuY3VzdG9tU3ViKSB7XG4gICAgICB0aGlzLmN1c3RvbVN1Yi5zdWJzY3JpYmUoKHRhcmdldCkgPT4ge1xuICAgICAgICB0aGlzLmltYWdlUHJlVmlldyh0YXJnZXQpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuY3VzdG9tU3ViKSB7XG4gICAgICB0aGlzLmN1c3RvbVN1Yi51bnN1YnNjcmliZSgpO1xuICAgIH1cbiAgfVxuXG4gIGltYWdlUHJlVmlldyhpbWFnZUhUTUxFbGVtZW50OiBIVE1MRWxlbWVudCkge1xuICAgIGNvbnN0IG1vZGFsUmVmID0gdGhpcy5tb2RhbFNlcnZpY2Uub3Blbih7XG4gICAgICBpZDogJ2RldnVpLWltYWdlLXByZXZpZXctbW9kYWwnLFxuICAgICAgY29tcG9uZW50OiBESW1hZ2VQcmV2aWV3Q29tcG9uZW50LFxuICAgICAgekluZGV4OiB0aGlzLnpJbmRleCxcbiAgICAgIGJhY2tEcm9wWkluZGV4OiB0aGlzLmJhY2tEcm9wWkluZGV4LFxuICAgICAgc2hvd0FuaW1hdGlvbjogZmFsc2UsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIHRhcmdldEltYWdlOiBpbWFnZUhUTUxFbGVtZW50LFxuICAgICAgICBpbWFnZXM6IEFycmF5LmZyb20odGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW1nJykpLFxuICAgICAgICBvbkNsb3NlOiAoKSA9PiB7XG4gICAgICAgICAgbW9kYWxSZWYubW9kYWxJbnN0YW5jZS5oaWRlKCk7XG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pO1xuICB9XG5cbn1cbiJdfQ==