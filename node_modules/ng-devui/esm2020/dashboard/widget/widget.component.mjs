import { Component, ElementRef, Input, ChangeDetectionStrategy, HostBinding, EventEmitter, Output, Optional, } from '@angular/core';
import { GridStackService } from '../grid-stack.service';
import * as i0 from "@angular/core";
import * as i1 from "../grid-stack.service";
export class DashboardWidgetComponent {
    constructor(elem, gridStackService) {
        this.elem = elem;
        this.gridStackService = gridStackService;
        this.xChange = new EventEmitter();
        this.yChange = new EventEmitter();
        this.widthChange = new EventEmitter();
        this.heightChange = new EventEmitter();
        this.widgetInit = new EventEmitter(true);
        this.widgetResize = new EventEmitter(true);
        this.widgetDestroy = new EventEmitter();
        this.hostBinding = true;
        this.generatedId = (DashboardWidgetComponent.autoNumberedId++).toString();
    }
    ngOnChanges(changes) {
        if (this.gridStackService && this.gridStackService.gridStack) {
            if (changes.x || changes.y || changes.width || changes.height) {
                this.gridStackService.gridStack.update(this.elem.nativeElement, { x: this.x, y: this.y, w: this.width, h: this.height });
            }
            if (changes.noResize) {
                this.gridStackService.gridStack.resizable(this.elem.nativeElement, !this.noResize);
            }
            if (changes.noMove) {
                this.gridStackService.gridStack.movable(this.elem.nativeElement, !this.noMove);
            }
            if (changes.locked) {
                this.gridStackService.gridStack.update(this.elem.nativeElement, { locked: !!this.locked });
            }
            if (changes.maxWidth) {
                this.gridStackService.gridStack.update(this.elem.nativeElement, { maxW: this.maxWidth });
            }
            if (changes.maxHeight) {
                this.gridStackService.gridStack.update(this.elem.nativeElement, { maxH: this.maxHeight });
            }
            if (changes.minWidth) {
                this.gridStackService.gridStack.update(this.elem.nativeElement, { minW: this.minWidth });
            }
            if (changes.minHeight) {
                this.gridStackService.gridStack.update(this.elem.nativeElement, { minH: this.minHeight });
            }
        }
    }
    ngAfterViewInit() {
        this.widgetInit.emit();
    }
    ngOnDestroy() {
        this.widgetDestroy.emit();
    }
    handleChange({ x, y, width, height }) {
        const change = { x, y, width, height };
        const beforeChange = { width: this.width, height: this.height };
        Object.keys(change).forEach((key) => {
            if (change[key] !== this[key]) {
                this[key] = change[key];
                const eventEmitter = this[key + 'Change'];
                if (eventEmitter) {
                    eventEmitter.emit(change[key]);
                }
            }
        });
        if (change.width !== beforeChange.width || change.height !== beforeChange.height) {
            this.widgetResize.emit({ width, height });
        }
    }
}
DashboardWidgetComponent.autoNumberedId = 0;
DashboardWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DashboardWidgetComponent, deps: [{ token: i0.ElementRef }, { token: i1.GridStackService, optional: true }], target: i0.ɵɵFactoryTarget.Component });
DashboardWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: DashboardWidgetComponent, selector: "d-dashboard-widget", inputs: { x: "x", y: "y", width: "width", height: "height", id: "id", maxWidth: "maxWidth", maxHeight: "maxHeight", minWidth: "minWidth", minHeight: "minHeight", noResize: "noResize", noMove: "noMove", autoPosition: "autoPosition", locked: "locked", widgetData: "widgetData" }, outputs: { xChange: "xChange", yChange: "yChange", widthChange: "widthChange", heightChange: "heightChange", widgetInit: "widgetInit", widgetResize: "widgetResize", widgetDestroy: "widgetDestroy" }, host: { properties: { "attr.gs-x": "this.x", "attr.gs-y": "this.y", "attr.gs-w": "this.width", "attr.gs-h": "this.height", "attr.gs-id": "this.id", "attr.gs-max-w": "this.maxWidth", "attr.gs-max-h": "this.maxHeight", "attr.gs-min-w": "this.minWidth", "attr.gs-min-h": "this.minHeight", "attr.gs-no-resize": "this.noResize", "attr.gs-no-move": "this.noMove", "attr.gs-auto-position": "this.autoPosition", "attr.gs-locked": "this.locked", "class.grid-stack-item": "this.hostBinding" } }, exportAs: ["dDashboardWidget"], usesOnChanges: true, ngImport: i0, template: "<div class=\"grid-stack-item-content d-dashboard-widget\">\n  <ng-content></ng-content>\n</div>\n", styles: [":host{display:block;background-color:transparent;position:absolute!important;pointer-events:none}:host ::ng-deep>*{pointer-events:auto}.ui-draggable-dragging :host>*{pointer-events:none!important}.d-dashboard-widget{border:1px solid transparent;box-shadow:0 2px 8px rgba(37,43,58,.1);box-shadow:0 2px 8px 0 var(--devui-light-shadow, rgba(37, 43, 58, .1));background:#ffffff;background:var(--devui-base-bg, #ffffff);border-radius:2px;border-radius:var(--devui-border-radius, 2px);transition:box-shadow .3s cubic-bezier(.645,.045,.355,1),transform .3s cubic-bezier(.645,.045,.355,1);transition:box-shadow var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1)),transform var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1))}:host.ui-resizable-resizing .d-dashboard-widget,:host.ui-draggable-dragging .d-dashboard-widget{opacity:1}:host.ui-draggable-dragging .d-dashboard-widget,.grid-stack:not(.grid-stack-static) :host.ui-draggable:not(.ui-draggable-disabled) .d-dashboard-widget{cursor:pointer}.ui-draggable-dragging :host .d-dashboard-widget,:host.ui-draggable-dragging .d-dashboard-widget,.grid-stack:not(.grid-stack-static) :host:hover .d-dashboard-widget{transform:translateY(-4px);box-shadow:0 4px 8px rgba(37,43,58,.2);box-shadow:0 4px 8px 0 var(--devui-shadow, rgba(37, 43, 58, .2))}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DashboardWidgetComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-dashboard-widget', changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'dDashboardWidget', preserveWhitespaces: false, template: "<div class=\"grid-stack-item-content d-dashboard-widget\">\n  <ng-content></ng-content>\n</div>\n", styles: [":host{display:block;background-color:transparent;position:absolute!important;pointer-events:none}:host ::ng-deep>*{pointer-events:auto}.ui-draggable-dragging :host>*{pointer-events:none!important}.d-dashboard-widget{border:1px solid transparent;box-shadow:0 2px 8px rgba(37,43,58,.1);box-shadow:0 2px 8px 0 var(--devui-light-shadow, rgba(37, 43, 58, .1));background:#ffffff;background:var(--devui-base-bg, #ffffff);border-radius:2px;border-radius:var(--devui-border-radius, 2px);transition:box-shadow .3s cubic-bezier(.645,.045,.355,1),transform .3s cubic-bezier(.645,.045,.355,1);transition:box-shadow var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1)),transform var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1))}:host.ui-resizable-resizing .d-dashboard-widget,:host.ui-draggable-dragging .d-dashboard-widget{opacity:1}:host.ui-draggable-dragging .d-dashboard-widget,.grid-stack:not(.grid-stack-static) :host.ui-draggable:not(.ui-draggable-disabled) .d-dashboard-widget{cursor:pointer}.ui-draggable-dragging :host .d-dashboard-widget,:host.ui-draggable-dragging .d-dashboard-widget,.grid-stack:not(.grid-stack-static) :host:hover .d-dashboard-widget{transform:translateY(-4px);box-shadow:0 4px 8px rgba(37,43,58,.2);box-shadow:0 4px 8px 0 var(--devui-shadow, rgba(37, 43, 58, .2))}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.GridStackService, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { x: [{
                type: HostBinding,
                args: ['attr.gs-x']
            }, {
                type: Input
            }], xChange: [{
                type: Output
            }], y: [{
                type: HostBinding,
                args: ['attr.gs-y']
            }, {
                type: Input
            }], yChange: [{
                type: Output
            }], width: [{
                type: HostBinding,
                args: ['attr.gs-w']
            }, {
                type: Input
            }], widthChange: [{
                type: Output
            }], height: [{
                type: HostBinding,
                args: ['attr.gs-h']
            }, {
                type: Input
            }], heightChange: [{
                type: Output
            }], id: [{
                type: HostBinding,
                args: ['attr.gs-id']
            }, {
                type: Input
            }], maxWidth: [{
                type: HostBinding,
                args: ['attr.gs-max-w']
            }, {
                type: Input
            }], maxHeight: [{
                type: HostBinding,
                args: ['attr.gs-max-h']
            }, {
                type: Input
            }], minWidth: [{
                type: HostBinding,
                args: ['attr.gs-min-w']
            }, {
                type: Input
            }], minHeight: [{
                type: HostBinding,
                args: ['attr.gs-min-h']
            }, {
                type: Input
            }], noResize: [{
                type: HostBinding,
                args: ['attr.gs-no-resize']
            }, {
                type: Input
            }], noMove: [{
                type: HostBinding,
                args: ['attr.gs-no-move']
            }, {
                type: Input
            }], autoPosition: [{
                type: HostBinding,
                args: ['attr.gs-auto-position']
            }, {
                type: Input
            }], locked: [{
                type: HostBinding,
                args: ['attr.gs-locked']
            }, {
                type: Input
            }], widgetData: [{
                type: Input
            }], widgetInit: [{
                type: Output
            }], widgetResize: [{
                type: Output
            }], widgetDestroy: [{
                type: Output
            }], hostBinding: [{
                type: HostBinding,
                args: ['class.grid-stack-item']
            }] } });
//# sourceMappingURL=data:application/json;base64,