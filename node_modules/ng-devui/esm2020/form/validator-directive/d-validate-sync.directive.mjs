import { Directive, Input, Self } from '@angular/core';
import { NgControl } from '@angular/forms';
import { DValidateSyncService } from '../services/d-validate-sync.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "../services/d-validate-sync.service";
export class DValidateSyncDirective {
    constructor(_cd, syncService) {
        this._cd = _cd;
        this.syncService = syncService;
        this._added = false;
    }
    ngOnChanges() {
        if (this.key && this._cd.control && !this._added) {
            this.syncService.addControl(this.key, this._cd.control);
            this._added = true;
        }
    }
    ngOnDestroy() {
        if (this.key && this._cd.control) {
            this.syncService.removeControl(this.key, this._cd.control);
        }
    }
}
DValidateSyncDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DValidateSyncDirective, deps: [{ token: i1.NgControl, self: true }, { token: i2.DValidateSyncService }], target: i0.ɵɵFactoryTarget.Directive });
DValidateSyncDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.3", type: DValidateSyncDirective, selector: "[dValidateSyncKey][formControlName],[dValidateSyncKey][ngModel],[dValidateSyncKey][formControl],\n    [dValidateSyncKey][formGroupName],[dValidateSyncKey][formArrayName],[dValidateSyncKey][ngModelGroup],\n    [dValidateSyncKey][formGroup],[dValidateSyncKey]form:not([ngNoForm]),[dValidateSyncKey][ngForm]\n  ", inputs: { key: ["dValidateSyncKey", "key"] }, exportAs: ["dValidateSync"], usesOnChanges: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DValidateSyncDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: `[dValidateSyncKey][formControlName],[dValidateSyncKey][ngModel],[dValidateSyncKey][formControl],
    [dValidateSyncKey][formGroupName],[dValidateSyncKey][formArrayName],[dValidateSyncKey][ngModelGroup],
    [dValidateSyncKey][formGroup],[dValidateSyncKey]form:not([ngNoForm]),[dValidateSyncKey][ngForm]
  `,
                    exportAs: 'dValidateSync'
                }]
        }], ctorParameters: function () { return [{ type: i1.NgControl, decorators: [{
                    type: Self
                }] }, { type: i2.DValidateSyncService }]; }, propDecorators: { key: [{
                type: Input,
                args: ['dValidateSyncKey']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZC12YWxpZGF0ZS1zeW5jLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2RldnVpL2Zvcm0vdmFsaWRhdG9yLWRpcmVjdGl2ZS9kLXZhbGlkYXRlLXN5bmMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUF3QixJQUFJLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0UsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDOzs7O0FBVTNFLE1BQU0sT0FBTyxzQkFBc0I7SUFNakMsWUFBNEIsR0FBYyxFQUFVLFdBQWlDO1FBQXpELFFBQUcsR0FBSCxHQUFHLENBQVc7UUFBVSxnQkFBVyxHQUFYLFdBQVcsQ0FBc0I7UUFKN0UsV0FBTSxHQUFHLEtBQUssQ0FBQztJQUlpRSxDQUFDO0lBRXpGLFdBQVc7UUFDVCxJQUFJLElBQUksQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2hELElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN4RCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztTQUNwQjtJQUNILENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFO1lBQ2hDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM1RDtJQUNILENBQUM7O21IQW5CVSxzQkFBc0I7dUdBQXRCLHNCQUFzQjsyRkFBdEIsc0JBQXNCO2tCQVJsQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRTs7O0dBR1Q7b0JBQ0QsUUFBUSxFQUFFLGVBQWU7aUJBQzFCOzswQkFRYyxJQUFJOytFQUZVLEdBQUc7c0JBQTdCLEtBQUs7dUJBQUMsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFNlbGYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IERWYWxpZGF0ZVN5bmNTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvZC12YWxpZGF0ZS1zeW5jLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6IGBbZFZhbGlkYXRlU3luY0tleV1bZm9ybUNvbnRyb2xOYW1lXSxbZFZhbGlkYXRlU3luY0tleV1bbmdNb2RlbF0sW2RWYWxpZGF0ZVN5bmNLZXldW2Zvcm1Db250cm9sXSxcbiAgICBbZFZhbGlkYXRlU3luY0tleV1bZm9ybUdyb3VwTmFtZV0sW2RWYWxpZGF0ZVN5bmNLZXldW2Zvcm1BcnJheU5hbWVdLFtkVmFsaWRhdGVTeW5jS2V5XVtuZ01vZGVsR3JvdXBdLFxuICAgIFtkVmFsaWRhdGVTeW5jS2V5XVtmb3JtR3JvdXBdLFtkVmFsaWRhdGVTeW5jS2V5XWZvcm06bm90KFtuZ05vRm9ybV0pLFtkVmFsaWRhdGVTeW5jS2V5XVtuZ0Zvcm1dXG4gIGAsXG4gIGV4cG9ydEFzOiAnZFZhbGlkYXRlU3luYydcbn0pXG5cbmV4cG9ydCBjbGFzcyBEVmFsaWRhdGVTeW5jRGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuXG4gIHByaXZhdGUgX2FkZGVkID0gZmFsc2U7XG5cbiAgQElucHV0KCdkVmFsaWRhdGVTeW5jS2V5Jykga2V5OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoQFNlbGYoKSBwcml2YXRlIF9jZDogTmdDb250cm9sLCBwcml2YXRlIHN5bmNTZXJ2aWNlOiBEVmFsaWRhdGVTeW5jU2VydmljZSkge31cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICBpZiAodGhpcy5rZXkgJiYgdGhpcy5fY2QuY29udHJvbCAmJiAhdGhpcy5fYWRkZWQpIHtcbiAgICAgIHRoaXMuc3luY1NlcnZpY2UuYWRkQ29udHJvbCh0aGlzLmtleSwgdGhpcy5fY2QuY29udHJvbCk7XG4gICAgICB0aGlzLl9hZGRlZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgaWYgKHRoaXMua2V5ICYmIHRoaXMuX2NkLmNvbnRyb2wpIHtcbiAgICAgIHRoaXMuc3luY1NlcnZpY2UucmVtb3ZlQ29udHJvbCh0aGlzLmtleSwgdGhpcy5fY2QuY29udHJvbCk7XG4gICAgfVxuICB9XG59XG4iXX0=