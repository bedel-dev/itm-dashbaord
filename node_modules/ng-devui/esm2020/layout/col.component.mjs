import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, Renderer2 } from '@angular/core';
import { updateClassList } from './layout-utils';
import * as i0 from "@angular/core";
export class DColComponent {
    constructor(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        /* TODO: d-hide如何对外提供 */
        this.dCol = true;
        this.dSpan = 'auto';
    }
    ngOnInit() {
        updateClassList(this, this.elementRef, this.renderer);
    }
    ngOnChanges() {
        updateClassList(this, this.elementRef, this.renderer);
    }
}
DColComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DColComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
DColComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: DColComponent, selector: "d-col", inputs: { dSpan: "dSpan", dOffset: "dOffset", dPush: "dPush", dPull: "dPull" }, host: { properties: { "class.d-col": "this.dCol" } }, usesOnChanges: true, ngImport: i0, template: `
    <ng-content></ng-content>
  `, isInline: true, styles: [":host.d-col{padding:0}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DColComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'd-col',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: `
    <ng-content></ng-content>
  `,
                    styles: [`
    :host.d-col {
      padding: 0;
    }
  `]
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { dCol: [{
                type: HostBinding,
                args: ['class.d-col']
            }], dSpan: [{
                type: Input
            }], dOffset: [{
                type: Input
            }], dPush: [{
                type: Input
            }], dPull: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RldnVpL2xheW91dC9jb2wuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQXFCLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqSSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBZWpELE1BQU0sT0FBTyxhQUFhO0lBV3hCLFlBQ1UsVUFBc0IsRUFDdEIsUUFBbUI7UUFEbkIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUN0QixhQUFRLEdBQVIsUUFBUSxDQUFXO1FBWDdCLHdCQUF3QjtRQUVJLFNBQUksR0FBRyxJQUFJLENBQUM7UUFFL0IsVUFBSyxHQUF3QyxNQUFNLENBQUM7SUFRekQsQ0FBQztJQUVMLFFBQVE7UUFDTixlQUFlLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFRCxXQUFXO1FBQ1QsZUFBZSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN4RCxDQUFDOzswR0F0QlUsYUFBYTs4RkFBYixhQUFhLHdNQVRkOztHQUVUOzJGQU9VLGFBQWE7a0JBWnpCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLE9BQU87b0JBQ2pCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxRQUFRLEVBQUU7O0dBRVQ7b0JBQ0QsTUFBTSxFQUFFLENBQUM7Ozs7R0FJUixDQUFDO2lCQUNIO3lIQUs2QixJQUFJO3NCQUEvQixXQUFXO3VCQUFDLGFBQWE7Z0JBRWpCLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgdXBkYXRlQ2xhc3NMaXN0IH0gZnJvbSAnLi9sYXlvdXQtdXRpbHMnO1xuaW1wb3J0IHsgRFJlc3BvbnNlUGFyYW1ldGVyIH0gZnJvbSAnLi9sYXlvdXQudHlwZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkLWNvbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgc3R5bGVzOiBbYFxuICAgIDpob3N0LmQtY29sIHtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuICBgXVxufSlcbmV4cG9ydCBjbGFzcyBEQ29sQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuXG4gIC8qIFRPRE86IGQtaGlkZeWmguS9leWvueWkluaPkOS+myAqL1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuZC1jb2wnKSBkQ29sID0gdHJ1ZTtcblxuICBASW5wdXQoKSBkU3BhbjogRFJlc3BvbnNlUGFyYW1ldGVyPG51bWJlciB8ICdhdXRvJz4gPSAnYXV0byc7XG4gIEBJbnB1dCgpIGRPZmZzZXQ6IERSZXNwb25zZVBhcmFtZXRlcjxudW1iZXI+O1xuICBASW5wdXQoKSBkUHVzaDogRFJlc3BvbnNlUGFyYW1ldGVyPG51bWJlcj47XG4gIEBJbnB1dCgpIGRQdWxsOiBEUmVzcG9uc2VQYXJhbWV0ZXI8bnVtYmVyPjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLFxuICApIHsgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHVwZGF0ZUNsYXNzTGlzdCh0aGlzLCB0aGlzLmVsZW1lbnRSZWYsIHRoaXMucmVuZGVyZXIpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoKTogdm9pZCB7XG4gICAgdXBkYXRlQ2xhc3NMaXN0KHRoaXMsIHRoaXMuZWxlbWVudFJlZiwgdGhpcy5yZW5kZXJlcik7XG4gIH1cbn1cbiJdfQ==