import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ToggleMenuPlaceholderComponent {
    get isTemplate() {
        return this.placeholder && typeof this.placeholder !== 'string';
    }
}
ToggleMenuPlaceholderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ToggleMenuPlaceholderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ToggleMenuPlaceholderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: ToggleMenuPlaceholderComponent, selector: "d-toggle-menu-placeholder", inputs: { placeholder: "placeholder" }, ngImport: i0, template: `
    <ng-container *ngIf="isTemplate; else defaultTemplate"></ng-container>
    <ng-template #defaultTemplate
      ><span class="devui-placeholder">{{ placeholder }}</span></ng-template
    >
  `, isInline: true, styles: [":host{display:flex;align-items:center}:host .devui-placeholder{color:#babbc0;color:var(--devui-placeholder, #babbc0);line-height:inherit;padding:0 10px}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ToggleMenuPlaceholderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-toggle-menu-placeholder', template: `
    <ng-container *ngIf="isTemplate; else defaultTemplate"></ng-container>
    <ng-template #defaultTemplate
      ><span class="devui-placeholder">{{ placeholder }}</span></ng-template
    >
  `, styles: [":host{display:flex;align-items:center}:host .devui-placeholder{color:#babbc0;color:var(--devui-placeholder, #babbc0);line-height:inherit;padding:0 10px}\n"] }]
        }], propDecorators: { placeholder: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLW1lbnUtcGxhY2Vob2xkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGV2dWkvdG9nZ2xlLW1lbnUvdG9nZ2xlLW1lbnUtcGxhY2Vob2xkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFlLE1BQU0sZUFBZSxDQUFDOzs7QUFZOUQsTUFBTSxPQUFPLDhCQUE4QjtJQUV6QyxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxXQUFXLElBQUksT0FBTyxJQUFJLENBQUMsV0FBVyxLQUFLLFFBQVEsQ0FBQztJQUNsRSxDQUFDOzsySEFKVSw4QkFBOEI7K0dBQTlCLDhCQUE4Qix5R0FSL0I7Ozs7O0dBS1Q7MkZBR1UsOEJBQThCO2tCQVYxQyxTQUFTOytCQUNFLDJCQUEyQixZQUMzQjs7Ozs7R0FLVDs4QkFJUSxXQUFXO3NCQUFuQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZC10b2dnbGUtbWVudS1wbGFjZWhvbGRlcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImlzVGVtcGxhdGU7IGVsc2UgZGVmYXVsdFRlbXBsYXRlXCI+PC9uZy1jb250YWluZXI+XG4gICAgPG5nLXRlbXBsYXRlICNkZWZhdWx0VGVtcGxhdGVcbiAgICAgID48c3BhbiBjbGFzcz1cImRldnVpLXBsYWNlaG9sZGVyXCI+e3sgcGxhY2Vob2xkZXIgfX08L3NwYW4+PC9uZy10ZW1wbGF0ZVxuICAgID5cbiAgYCxcbiAgc3R5bGVVcmxzOiBbYC4vdG9nZ2xlLW1lbnUtcGxhY2Vob2xkZXIuY29tcG9uZW50LnNjc3NgXSxcbn0pXG5leHBvcnQgY2xhc3MgVG9nZ2xlTWVudVBsYWNlaG9sZGVyQ29tcG9uZW50IHtcbiAgQElucHV0KCkgcGxhY2Vob2xkZXI6IFRlbXBsYXRlUmVmPGFueT4gfCBzdHJpbmc7XG4gIGdldCBpc1RlbXBsYXRlKCkge1xuICAgIHJldHVybiB0aGlzLnBsYWNlaG9sZGVyICYmIHR5cGVvZiB0aGlzLnBsYWNlaG9sZGVyICE9PSAnc3RyaW5nJztcbiAgfVxufVxuIl19