import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "ng-devui/tags";
import * as i2 from "@angular/common";
export class ToggleMenuLabelComponent {
    constructor() {
        this.multiItems = [];
        this.disabled = false;
        this.optionDisabledKey = '';
        this.removeChange = new EventEmitter();
    }
    trackByOptionPointer(index, item) {
        return item.option;
    }
    removeItem(item, event, index) {
        this.removeChange.emit({ ...item, event, index });
    }
}
ToggleMenuLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ToggleMenuLabelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ToggleMenuLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: ToggleMenuLabelComponent, selector: "d-toggle-menu-label", inputs: { mode: "mode", multiItems: "multiItems", disabled: "disabled", maxWidth: "maxWidth", maxHeight: "maxHeight", optionDisabledKey: "optionDisabledKey", valueParser: "valueParser" }, outputs: { removeChange: "removeChange" }, ngImport: i0, template: "<ul class=\"devui-select-tag-list {{ mode }}\" [style.maxHeight]=\"maxHeight\" *ngIf=\"multiItems.length > 0\">\n  <li\n    class=\"devui-select-tag-item\"\n    *ngFor=\"let item of multiItems; let index = index; trackBy: trackByOptionPointer\"\n    [style.maxWidth]=\"maxWidth\"\n    [ngClass]=\"{\n      disabled: disabled || (optionDisabledKey && item.option[optionDisabledKey])\n    }\"\n  >\n    <d-tag\n      [deletable]=\"!(disabled || (optionDisabledKey && item.option[optionDisabledKey]))\"\n      [tag]=\"valueParser(item.option)\"\n      (tagDelete)=\"removeItem(item, $event?.event, index)\"\n    ></d-tag>\n  </li>\n</ul>\n", styles: [".devui-select-tag-list{height:26px;margin:0;padding:0;list-style-type:none;overflow:hidden}.devui-select-tag-list.normal{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.devui-select-tag-list.scroll-y{overflow-y:auto;overflow-x:hidden}.devui-select-tag-list.multiple-line{height:auto;overflow-y:auto;overflow-x:hidden;line-height:1;max-height:48px;min-height:24px}.devui-select-tag-item{display:inline-block;margin:2px 0 0 2px}:host ::ng-deep .devui-select-tag-item d-tag{width:100%}:host ::ng-deep .devui-select-tag-item d-tag .devui-tag-item>span{vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:inline-block;width:100%}:host ::ng-deep .devui-select-tag-item.disabled{line-height:18px}:host ::ng-deep .devui-select-tag-item.disabled d-tag .devui-tag-item{border:solid 1px #dfe1e6;border:solid 1px var(--devui-disabled-line, #dfe1e6);line-height:18px;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3);cursor:not-allowed}\n"], components: [{ type: i1.TagComponent, selector: "d-tag", inputs: ["tag", "labelStyle", "customColor", "deletable", "titleContent", "mode", "checked", "maxWidth", "customViewTemplate"], outputs: ["tagDelete", "checkedChange"], exportAs: ["Tag"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ToggleMenuLabelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-toggle-menu-label', template: "<ul class=\"devui-select-tag-list {{ mode }}\" [style.maxHeight]=\"maxHeight\" *ngIf=\"multiItems.length > 0\">\n  <li\n    class=\"devui-select-tag-item\"\n    *ngFor=\"let item of multiItems; let index = index; trackBy: trackByOptionPointer\"\n    [style.maxWidth]=\"maxWidth\"\n    [ngClass]=\"{\n      disabled: disabled || (optionDisabledKey && item.option[optionDisabledKey])\n    }\"\n  >\n    <d-tag\n      [deletable]=\"!(disabled || (optionDisabledKey && item.option[optionDisabledKey]))\"\n      [tag]=\"valueParser(item.option)\"\n      (tagDelete)=\"removeItem(item, $event?.event, index)\"\n    ></d-tag>\n  </li>\n</ul>\n", styles: [".devui-select-tag-list{height:26px;margin:0;padding:0;list-style-type:none;overflow:hidden}.devui-select-tag-list.normal{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.devui-select-tag-list.scroll-y{overflow-y:auto;overflow-x:hidden}.devui-select-tag-list.multiple-line{height:auto;overflow-y:auto;overflow-x:hidden;line-height:1;max-height:48px;min-height:24px}.devui-select-tag-item{display:inline-block;margin:2px 0 0 2px}:host ::ng-deep .devui-select-tag-item d-tag{width:100%}:host ::ng-deep .devui-select-tag-item d-tag .devui-tag-item>span{vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:inline-block;width:100%}:host ::ng-deep .devui-select-tag-item.disabled{line-height:18px}:host ::ng-deep .devui-select-tag-item.disabled d-tag .devui-tag-item{border:solid 1px #dfe1e6;border:solid 1px var(--devui-disabled-line, #dfe1e6);line-height:18px;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3);cursor:not-allowed}\n"] }]
        }], propDecorators: { mode: [{
                type: Input
            }], multiItems: [{
                type: Input
            }], disabled: [{
                type: Input
            }], maxWidth: [{
                type: Input
            }], maxHeight: [{
                type: Input
            }], optionDisabledKey: [{
                type: Input
            }], valueParser: [{
                type: Input
            }], removeChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLW1lbnUtbGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGV2dWkvdG9nZ2xlLW1lbnUvdG9nZ2xlLW1lbnUtbGFiZWwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vZGV2dWkvdG9nZ2xlLW1lbnUvdG9nZ2xlLW1lbnUtbGFiZWwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQVF2RSxNQUFNLE9BQU8sd0JBQXdCO0lBTHJDO1FBT1csZUFBVSxHQUE4QixFQUFFLENBQUM7UUFDM0MsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUdqQixzQkFBaUIsR0FBRyxFQUFFLENBQUM7UUFFdEIsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0tBU2xEO0lBUEMsb0JBQW9CLENBQUMsS0FBSyxFQUFFLElBQUk7UUFDOUIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxVQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLO1FBQzNCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDcEQsQ0FBQzs7cUhBaEJVLHdCQUF3Qjt5R0FBeEIsd0JBQXdCLGtTQ1JyQyw4bkJBZ0JBOzJGRFJhLHdCQUF3QjtrQkFMcEMsU0FBUzsrQkFDRSxxQkFBcUI7OEJBS3RCLElBQUk7c0JBQVosS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLGlCQUFpQjtzQkFBekIsS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLO2dCQUNJLFlBQVk7c0JBQXJCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVG9nZ2xlTWVudUxpc3RJdGVtIH0gZnJvbSAnLi90b2dnbGUtbWVudS50eXBlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZC10b2dnbGUtbWVudS1sYWJlbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90b2dnbGUtbWVudS1sYWJlbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogW2AuL3RvZ2dsZS1tZW51LWxhYmVsLmNvbXBvbmVudC5zY3NzYF0sXG59KVxuZXhwb3J0IGNsYXNzIFRvZ2dsZU1lbnVMYWJlbENvbXBvbmVudCB7XG4gIEBJbnB1dCgpIG1vZGU6ICdub3JtYWwnIHwgJ3Njcm9sbC15JyB8ICdtdWx0aXBsZS1saW5lJyB8IHN0cmluZztcbiAgQElucHV0KCkgbXVsdGlJdGVtczogQXJyYXk8VG9nZ2xlTWVudUxpc3RJdGVtPiA9IFtdO1xuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBtYXhXaWR0aDogc3RyaW5nO1xuICBASW5wdXQoKSBtYXhIZWlnaHQ6IHN0cmluZztcbiAgQElucHV0KCkgb3B0aW9uRGlzYWJsZWRLZXkgPSAnJztcbiAgQElucHV0KCkgdmFsdWVQYXJzZXI6IChpdGVtOiBhbnkpID0+IGFueTtcbiAgQE91dHB1dCgpIHJlbW92ZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIHRyYWNrQnlPcHRpb25Qb2ludGVyKGluZGV4LCBpdGVtKSB7XG4gICAgcmV0dXJuIGl0ZW0ub3B0aW9uO1xuICB9XG5cbiAgcmVtb3ZlSXRlbShpdGVtLCBldmVudCwgaW5kZXgpIHtcbiAgICB0aGlzLnJlbW92ZUNoYW5nZS5lbWl0KHsgLi4uaXRlbSwgZXZlbnQsIGluZGV4IH0pO1xuICB9XG59XG4iLCI8dWwgY2xhc3M9XCJkZXZ1aS1zZWxlY3QtdGFnLWxpc3Qge3sgbW9kZSB9fVwiIFtzdHlsZS5tYXhIZWlnaHRdPVwibWF4SGVpZ2h0XCIgKm5nSWY9XCJtdWx0aUl0ZW1zLmxlbmd0aCA+IDBcIj5cbiAgPGxpXG4gICAgY2xhc3M9XCJkZXZ1aS1zZWxlY3QtdGFnLWl0ZW1cIlxuICAgICpuZ0Zvcj1cImxldCBpdGVtIG9mIG11bHRpSXRlbXM7IGxldCBpbmRleCA9IGluZGV4OyB0cmFja0J5OiB0cmFja0J5T3B0aW9uUG9pbnRlclwiXG4gICAgW3N0eWxlLm1heFdpZHRoXT1cIm1heFdpZHRoXCJcbiAgICBbbmdDbGFzc109XCJ7XG4gICAgICBkaXNhYmxlZDogZGlzYWJsZWQgfHwgKG9wdGlvbkRpc2FibGVkS2V5ICYmIGl0ZW0ub3B0aW9uW29wdGlvbkRpc2FibGVkS2V5XSlcbiAgICB9XCJcbiAgPlxuICAgIDxkLXRhZ1xuICAgICAgW2RlbGV0YWJsZV09XCIhKGRpc2FibGVkIHx8IChvcHRpb25EaXNhYmxlZEtleSAmJiBpdGVtLm9wdGlvbltvcHRpb25EaXNhYmxlZEtleV0pKVwiXG4gICAgICBbdGFnXT1cInZhbHVlUGFyc2VyKGl0ZW0ub3B0aW9uKVwiXG4gICAgICAodGFnRGVsZXRlKT1cInJlbW92ZUl0ZW0oaXRlbSwgJGV2ZW50Py5ldmVudCwgaW5kZXgpXCJcbiAgICA+PC9kLXRhZz5cbiAgPC9saT5cbjwvdWw+XG4iXX0=