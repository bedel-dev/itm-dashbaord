import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "ng-devui/utils";
import * as i2 from "ng-devui/checkbox";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
export class ToggleMenuListItemComponent {
    constructor() {
        /**
         * 【当传入资源（options）类型为Array<{key: value}，必选】针对传入资源options的每项对应字段做禁用操作的key
         */
        this.optionDisabledKey = '';
        /**
         * 【当传入资源（options）类型为Array<{key: value}，可选】如使用分组需设置
         */
        this.optionGroupKey = '';
        /**
         * 【可选】是否允许高亮选项
         */
        this.highlightToggle = true;
        /**
         * 【可选】下拉高亮css
         */
        this.highlightItemClass = 'active';
        this.chooseItem = new EventEmitter();
        this.formatter = (item) => (item ? item[this.filterKey] || item.label || item.toString() : '');
    }
    choose(option, index, event) {
        this.chooseItem.emit({ option, index, event });
    }
}
ToggleMenuListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ToggleMenuListItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ToggleMenuListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: ToggleMenuListItemComponent, selector: "d-toggle-menu-list-item", inputs: { item: "item", index: "index", selectIndex: "selectIndex", activeIndex: "activeIndex", formatter: "formatter", filterKey: "filterKey", optionDisabledKey: "optionDisabledKey", optionGroupKey: "optionGroupKey", highlightToggle: "highlightToggle", highlightItemClass: "highlightItemClass", multiple: "multiple", isShowKeyword: "isShowKeyword", keyword: "keyword", customTemplate: "customTemplate", color: "color" }, outputs: { chooseItem: "chooseItem" }, ngImport: i0, template: "<li\n  title=\"{{ formatter(item.option) }}\"\n  class=\"devui-dropdown-item devui-toggle-menu{{ multiple ? '-multiple-' : '-' }}item {{\n    highlightToggle && item.isChecked ? highlightItemClass : ''\n  }}\"\n  [class.selected]=\"selectIndex === index && item.id !== activeIndex\"\n  [class.disabled]=\"optionDisabledKey && item.option[optionDisabledKey]\"\n  [class.group]=\"optionGroupKey && item.option[optionGroupKey]\"\n  (click)=\"choose(item.option, item.id, $event)\"\n>\n  <ng-template\n    [ngTemplateOutlet]=\"customTemplate || (multiple ? checkBoxItem : isShowKeyword ? defaultHighlight : defaultItem)\"\n    [ngTemplateOutletContext]=\"\n      isShowKeyword\n        ? {\n            item: item.option,\n            formatter: formatter,\n            keyword: keyword,\n            $index: index\n          }\n        : multiple\n        ? {\n            option: item.option,\n            checked: item.isChecked,\n            filterKey: filterKey,\n            position: 'list',\n            template: checkBoxItem,\n            $index: index\n          }\n        : {\n            option: item.option,\n            filterKey: filterKey,\n            position: 'list',\n            template: defaultItem,\n            $index: index\n          }\n    \"\n  >\n  </ng-template>\n</li>\n\n<ng-template #defaultItem let-option=\"option\">\n  {{ formatter(option) }}\n</ng-template>\n\n<ng-template #defaultHighlight let-item=\"item\" let-keyword=\"keyword\">\n  <d-highlight [value]=\"formatter(item)\" [term]=\"keyword\"></d-highlight>\n</ng-template>\n\n<ng-template #checkBoxItem let-option=\"option\" let-checked=\"checked\">\n  <d-checkbox\n    [color]=\"color\"\n    [cssClass]=\"'devui-select-checkbox'\"\n    [disabled]=\"option[optionDisabledKey]\"\n    [label]=\"formatter(option)\"\n    [ngModel]=\"checked\"\n  >\n  </d-checkbox>\n</ng-template>\n", styles: [".devui-font-size-base{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-font-base{font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400;line-height:1.5}.devui-font-size-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px)}.devui-font-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px);font-weight:700;line-height:1.5}.devui-font-size-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px)}.devui-font-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px);font-weight:700;line-height:1.5}.devui-font-size-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px)}.devui-font-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px);font-weight:700;line-height:1.5}:host:first-of-type>li{margin-top:0}:host>li{margin-top:4px;font-size:inherit;min-height:inherit}\n"], components: [{ type: i1.HighlightComponent, selector: "d-highlight", inputs: ["value", "term", "highlightClass"] }, { type: i2.CheckBoxComponent, selector: "d-checkbox", inputs: ["name", "label", "cssClass", "color", "disabled", "isShowTitle", "title", "labelTemplate", "halfchecked", "showAnimation", "beforeChange"], outputs: ["change"] }], directives: [{ type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ToggleMenuListItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-toggle-menu-list-item', changeDetection: ChangeDetectionStrategy.OnPush, template: "<li\n  title=\"{{ formatter(item.option) }}\"\n  class=\"devui-dropdown-item devui-toggle-menu{{ multiple ? '-multiple-' : '-' }}item {{\n    highlightToggle && item.isChecked ? highlightItemClass : ''\n  }}\"\n  [class.selected]=\"selectIndex === index && item.id !== activeIndex\"\n  [class.disabled]=\"optionDisabledKey && item.option[optionDisabledKey]\"\n  [class.group]=\"optionGroupKey && item.option[optionGroupKey]\"\n  (click)=\"choose(item.option, item.id, $event)\"\n>\n  <ng-template\n    [ngTemplateOutlet]=\"customTemplate || (multiple ? checkBoxItem : isShowKeyword ? defaultHighlight : defaultItem)\"\n    [ngTemplateOutletContext]=\"\n      isShowKeyword\n        ? {\n            item: item.option,\n            formatter: formatter,\n            keyword: keyword,\n            $index: index\n          }\n        : multiple\n        ? {\n            option: item.option,\n            checked: item.isChecked,\n            filterKey: filterKey,\n            position: 'list',\n            template: checkBoxItem,\n            $index: index\n          }\n        : {\n            option: item.option,\n            filterKey: filterKey,\n            position: 'list',\n            template: defaultItem,\n            $index: index\n          }\n    \"\n  >\n  </ng-template>\n</li>\n\n<ng-template #defaultItem let-option=\"option\">\n  {{ formatter(option) }}\n</ng-template>\n\n<ng-template #defaultHighlight let-item=\"item\" let-keyword=\"keyword\">\n  <d-highlight [value]=\"formatter(item)\" [term]=\"keyword\"></d-highlight>\n</ng-template>\n\n<ng-template #checkBoxItem let-option=\"option\" let-checked=\"checked\">\n  <d-checkbox\n    [color]=\"color\"\n    [cssClass]=\"'devui-select-checkbox'\"\n    [disabled]=\"option[optionDisabledKey]\"\n    [label]=\"formatter(option)\"\n    [ngModel]=\"checked\"\n  >\n  </d-checkbox>\n</ng-template>\n", styles: [".devui-font-size-base{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-font-base{font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400;line-height:1.5}.devui-font-size-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px)}.devui-font-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px);font-weight:700;line-height:1.5}.devui-font-size-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px)}.devui-font-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px);font-weight:700;line-height:1.5}.devui-font-size-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px)}.devui-font-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px);font-weight:700;line-height:1.5}:host:first-of-type>li{margin-top:0}:host>li{margin-top:4px;font-size:inherit;min-height:inherit}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { item: [{
                type: Input
            }], index: [{
                type: Input
            }], selectIndex: [{
                type: Input
            }], activeIndex: [{
                type: Input
            }], formatter: [{
                type: Input
            }], filterKey: [{
                type: Input
            }], optionDisabledKey: [{
                type: Input
            }], optionGroupKey: [{
                type: Input
            }], highlightToggle: [{
                type: Input
            }], highlightItemClass: [{
                type: Input
            }], multiple: [{
                type: Input
            }], isShowKeyword: [{
                type: Input
            }], keyword: [{
                type: Input
            }], customTemplate: [{
                type: Input
            }], color: [{
                type: Input
            }], chooseItem: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLW1lbnUtbGlzdC1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RldnVpL3RvZ2dsZS1tZW51L3RvZ2dsZS1tZW51LWxpc3QtaXRlbS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9kZXZ1aS90b2dnbGUtbWVudS90b2dnbGUtbWVudS1saXN0LWl0ZW0uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7OztBQVM3RyxNQUFNLE9BQU8sMkJBQTJCO0lBZ0R0QztRQWxDQTs7V0FFRztRQUNNLHNCQUFpQixHQUFHLEVBQUUsQ0FBQztRQUNoQzs7V0FFRztRQUNNLG1CQUFjLEdBQUcsRUFBRSxDQUFDO1FBQzdCOztXQUVHO1FBQ00sb0JBQWUsR0FBRyxJQUFJLENBQUM7UUFDaEM7O1dBRUc7UUFDTSx1QkFBa0IsR0FBRyxRQUFRLENBQUM7UUFpQjdCLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBRzdDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNqRyxDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsS0FBYTtRQUNqQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUNqRCxDQUFDOzt3SEF0RFUsMkJBQTJCOzRHQUEzQiwyQkFBMkIsNGdCQ1R4QyxpMURBMkRBOzJGRGxEYSwyQkFBMkI7a0JBTnZDLFNBQVM7K0JBQ0UseUJBQXlCLG1CQUdsQix1QkFBdUIsQ0FBQyxNQUFNOzBFQUd0QyxJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUNHLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0csV0FBVztzQkFBbkIsS0FBSztnQkFLRyxTQUFTO3NCQUFqQixLQUFLO2dCQUlHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBSUcsaUJBQWlCO3NCQUF6QixLQUFLO2dCQUlHLGNBQWM7c0JBQXRCLEtBQUs7Z0JBSUcsZUFBZTtzQkFBdkIsS0FBSztnQkFJRyxrQkFBa0I7c0JBQTFCLEtBQUs7Z0JBSUcsUUFBUTtzQkFBaEIsS0FBSztnQkFJRyxhQUFhO3NCQUFyQixLQUFLO2dCQUlHLE9BQU87c0JBQWYsS0FBSztnQkFDRyxjQUFjO3NCQUF0QixLQUFLO2dCQUdHLEtBQUs7c0JBQWIsS0FBSztnQkFDSSxVQUFVO3NCQUFuQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVG9nZ2xlTWVudUxpc3RJdGVtIH0gZnJvbSAnLi90b2dnbGUtbWVudS50eXBlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZC10b2dnbGUtbWVudS1saXN0LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vdG9nZ2xlLW1lbnUtbGlzdC1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdG9nZ2xlLW1lbnUtbGlzdC1pdGVtLmNvbXBvbmVudC5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUb2dnbGVNZW51TGlzdEl0ZW1Db21wb25lbnQge1xuICBASW5wdXQoKSBpdGVtOiBUb2dnbGVNZW51TGlzdEl0ZW07XG4gIEBJbnB1dCgpIGluZGV4OiBudW1iZXI7XG4gIEBJbnB1dCgpIHNlbGVjdEluZGV4OiBudW1iZXI7XG4gIEBJbnB1dCgpIGFjdGl2ZUluZGV4OiBudW1iZXI7XG4gIC8qKlxuICAgKiDjgJDlj6/pgInjgJHlhrPlrprkuIvmi4nmoYbmr4/pobnmloflrZflpoLkvZXmmL7npLrvvIzpu5jorqTmmL7npLpmaWx0ZXJLZXnlrZfmrrXmiJbogIXmnKzouqvnmoTlgLxcbiAgICovXG4gIC8vIEBkZXByZWNhdGVkXG4gIEBJbnB1dCgpIGZvcm1hdHRlcjogKGl0ZW06IGFueSkgPT4gc3RyaW5nO1xuICAvKipcbiAgICog44CQ5b2T5Lyg5YWl6LWE5rqQ77yIb3B0aW9uc++8ieexu+Wei+S4ukFycmF5PHtrZXk6IHZhbHVlfe+8jOW/hemAieOAkemSiOWvueS8oOWFpei1hOa6kG9wdGlvbnPnmoTmr4/pobnlr7nlupTlrZfmrrXlgZrov4fmu6Tmk43kvZxcbiAgICovXG4gIEBJbnB1dCgpIGZpbHRlcktleTogc3RyaW5nO1xuICAvKipcbiAgICog44CQ5b2T5Lyg5YWl6LWE5rqQ77yIb3B0aW9uc++8ieexu+Wei+S4ukFycmF5PHtrZXk6IHZhbHVlfe+8jOW/hemAieOAkemSiOWvueS8oOWFpei1hOa6kG9wdGlvbnPnmoTmr4/pobnlr7nlupTlrZfmrrXlgZrnpoHnlKjmk43kvZznmoRrZXlcbiAgICovXG4gIEBJbnB1dCgpIG9wdGlvbkRpc2FibGVkS2V5ID0gJyc7XG4gIC8qKlxuICAgKiDjgJDlvZPkvKDlhaXotYTmupDvvIhvcHRpb25z77yJ57G75Z6L5Li6QXJyYXk8e2tleTogdmFsdWV977yM5Y+v6YCJ44CR5aaC5L2/55So5YiG57uE6ZyA6K6+572uXG4gICAqL1xuICBASW5wdXQoKSBvcHRpb25Hcm91cEtleSA9ICcnO1xuICAvKipcbiAgICog44CQ5Y+v6YCJ44CR5piv5ZCm5YWB6K646auY5Lqu6YCJ6aG5XG4gICAqL1xuICBASW5wdXQoKSBoaWdobGlnaHRUb2dnbGUgPSB0cnVlO1xuICAvKipcbiAgICog44CQ5Y+v6YCJ44CR5LiL5ouJ6auY5LquY3NzXG4gICAqL1xuICBASW5wdXQoKSBoaWdobGlnaHRJdGVtQ2xhc3MgPSAnYWN0aXZlJztcbiAgLyoqXG4gICAqIOOAkOWPr+mAieOAkeaYr+WQpuaUr+aMgeWkmumAiVxuICAgKi9cbiAgQElucHV0KCkgbXVsdGlwbGU6IGJvb2xlYW47XG4gIC8qKlxuICAgKiDjgJDlj6/pgInjgJHmmK/lkKbpnIDopoHlhbPplK7lrZfpq5jkuq7mmL7npLpcbiAgICovXG4gIEBJbnB1dCgpIGlzU2hvd0tleXdvcmQ6IGJvb2xlYW47XG4gIC8qKlxuICAgKiDjgJDlj6/pgInjgJFhdXRvLWNvbXBsZXRlIOS4remcgOimgemrmOS6ruaYvuekuueahOWFs+mUruWtl1xuICAgKi9cbiAgQElucHV0KCkga2V5d29yZDogc3RyaW5nO1xuICBASW5wdXQoKSBjdXN0b21UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICAvLyBAZGVwcmVjYXRlZFxuICBASW5wdXQoKSBjb2xvcjogc3RyaW5nO1xuICBAT3V0cHV0KCkgY2hvb3NlSXRlbSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZm9ybWF0dGVyID0gKGl0ZW0pID0+IChpdGVtID8gaXRlbVt0aGlzLmZpbHRlcktleV0gfHwgaXRlbS5sYWJlbCB8fCBpdGVtLnRvU3RyaW5nKCkgOiAnJyk7XG4gIH1cblxuICBjaG9vc2Uob3B0aW9uLCBpbmRleCwgZXZlbnQ/OiBFdmVudCkge1xuICAgIHRoaXMuY2hvb3NlSXRlbS5lbWl0KHsgb3B0aW9uLCBpbmRleCwgZXZlbnQgfSk7XG4gIH1cbn1cbiIsIjxsaVxuICB0aXRsZT1cInt7IGZvcm1hdHRlcihpdGVtLm9wdGlvbikgfX1cIlxuICBjbGFzcz1cImRldnVpLWRyb3Bkb3duLWl0ZW0gZGV2dWktdG9nZ2xlLW1lbnV7eyBtdWx0aXBsZSA/ICctbXVsdGlwbGUtJyA6ICctJyB9fWl0ZW0ge3tcbiAgICBoaWdobGlnaHRUb2dnbGUgJiYgaXRlbS5pc0NoZWNrZWQgPyBoaWdobGlnaHRJdGVtQ2xhc3MgOiAnJ1xuICB9fVwiXG4gIFtjbGFzcy5zZWxlY3RlZF09XCJzZWxlY3RJbmRleCA9PT0gaW5kZXggJiYgaXRlbS5pZCAhPT0gYWN0aXZlSW5kZXhcIlxuICBbY2xhc3MuZGlzYWJsZWRdPVwib3B0aW9uRGlzYWJsZWRLZXkgJiYgaXRlbS5vcHRpb25bb3B0aW9uRGlzYWJsZWRLZXldXCJcbiAgW2NsYXNzLmdyb3VwXT1cIm9wdGlvbkdyb3VwS2V5ICYmIGl0ZW0ub3B0aW9uW29wdGlvbkdyb3VwS2V5XVwiXG4gIChjbGljayk9XCJjaG9vc2UoaXRlbS5vcHRpb24sIGl0ZW0uaWQsICRldmVudClcIlxuPlxuICA8bmctdGVtcGxhdGVcbiAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJjdXN0b21UZW1wbGF0ZSB8fCAobXVsdGlwbGUgPyBjaGVja0JveEl0ZW0gOiBpc1Nob3dLZXl3b3JkID8gZGVmYXVsdEhpZ2hsaWdodCA6IGRlZmF1bHRJdGVtKVwiXG4gICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIlxuICAgICAgaXNTaG93S2V5d29yZFxuICAgICAgICA/IHtcbiAgICAgICAgICAgIGl0ZW06IGl0ZW0ub3B0aW9uLFxuICAgICAgICAgICAgZm9ybWF0dGVyOiBmb3JtYXR0ZXIsXG4gICAgICAgICAgICBrZXl3b3JkOiBrZXl3b3JkLFxuICAgICAgICAgICAgJGluZGV4OiBpbmRleFxuICAgICAgICAgIH1cbiAgICAgICAgOiBtdWx0aXBsZVxuICAgICAgICA/IHtcbiAgICAgICAgICAgIG9wdGlvbjogaXRlbS5vcHRpb24sXG4gICAgICAgICAgICBjaGVja2VkOiBpdGVtLmlzQ2hlY2tlZCxcbiAgICAgICAgICAgIGZpbHRlcktleTogZmlsdGVyS2V5LFxuICAgICAgICAgICAgcG9zaXRpb246ICdsaXN0JyxcbiAgICAgICAgICAgIHRlbXBsYXRlOiBjaGVja0JveEl0ZW0sXG4gICAgICAgICAgICAkaW5kZXg6IGluZGV4XG4gICAgICAgICAgfVxuICAgICAgICA6IHtcbiAgICAgICAgICAgIG9wdGlvbjogaXRlbS5vcHRpb24sXG4gICAgICAgICAgICBmaWx0ZXJLZXk6IGZpbHRlcktleSxcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnbGlzdCcsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogZGVmYXVsdEl0ZW0sXG4gICAgICAgICAgICAkaW5kZXg6IGluZGV4XG4gICAgICAgICAgfVxuICAgIFwiXG4gID5cbiAgPC9uZy10ZW1wbGF0ZT5cbjwvbGk+XG5cbjxuZy10ZW1wbGF0ZSAjZGVmYXVsdEl0ZW0gbGV0LW9wdGlvbj1cIm9wdGlvblwiPlxuICB7eyBmb3JtYXR0ZXIob3B0aW9uKSB9fVxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlICNkZWZhdWx0SGlnaGxpZ2h0IGxldC1pdGVtPVwiaXRlbVwiIGxldC1rZXl3b3JkPVwia2V5d29yZFwiPlxuICA8ZC1oaWdobGlnaHQgW3ZhbHVlXT1cImZvcm1hdHRlcihpdGVtKVwiIFt0ZXJtXT1cImtleXdvcmRcIj48L2QtaGlnaGxpZ2h0PlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlICNjaGVja0JveEl0ZW0gbGV0LW9wdGlvbj1cIm9wdGlvblwiIGxldC1jaGVja2VkPVwiY2hlY2tlZFwiPlxuICA8ZC1jaGVja2JveFxuICAgIFtjb2xvcl09XCJjb2xvclwiXG4gICAgW2Nzc0NsYXNzXT1cIidkZXZ1aS1zZWxlY3QtY2hlY2tib3gnXCJcbiAgICBbZGlzYWJsZWRdPVwib3B0aW9uW29wdGlvbkRpc2FibGVkS2V5XVwiXG4gICAgW2xhYmVsXT1cImZvcm1hdHRlcihvcHRpb24pXCJcbiAgICBbbmdNb2RlbF09XCJjaGVja2VkXCJcbiAgPlxuICA8L2QtY2hlY2tib3g+XG48L25nLXRlbXBsYXRlPlxuIl19