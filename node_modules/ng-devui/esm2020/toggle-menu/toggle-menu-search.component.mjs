import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, Input, Output } from '@angular/core';
import { fromEvent, of } from 'rxjs';
import { debounceTime, filter, map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ToggleMenuSearchComponent {
    constructor(el) {
        this.el = el;
        this.isShowSearchIcon = true;
        this.disabled = false;
        this.spellcheck = false;
        this.options = [];
        this.delay = 300;
        this.searchInputValueChange = new EventEmitter();
        this.formatter = (item) => (typeof item === 'object' ? item[this.filterKey] || '' : String(item) ? item.toString() : '');
    }
    get width() {
        return this.inputWidth || 'inherit';
    }
    ngOnInit() {
        if (!this.searchFn) {
            this.searchFn = (term) => {
                return of((this.options ? this.options : [])
                    .map((option, index) => ({ id: index, option }))
                    .filter((item) => this.formatter(item.option).toLowerCase().indexOf(term.toLowerCase()) !== -1));
            };
        }
    }
    ngAfterViewInit() {
        this.el.nativeElement.focus();
        if (!this.filterSubscription) {
            // 避免重复订阅
            this.filterSubscription = fromEvent(this.el.nativeElement, 'input')
                .pipe(map((e) => e.target.value), filter((term) => !this.disabled && this.searchFn && term.length >= 0), debounceTime(this.delay))
                .subscribe((term) => this.searchInputValueChange.emit(term));
        }
    }
    ngOnDestroy() {
        if (this.filterSubscription) {
            this.filterSubscription.unsubscribe();
        }
    }
}
ToggleMenuSearchComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ToggleMenuSearchComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
ToggleMenuSearchComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: ToggleMenuSearchComponent, selector: "d-toggle-menu-search", inputs: { searchPlaceholder: "searchPlaceholder", isShowSearchIcon: "isShowSearchIcon", inputValue: "inputValue", inputWidth: "inputWidth", filterKey: "filterKey", disabled: "disabled", spellcheck: "spellcheck", options: "options", delay: "delay", formatter: "formatter", searchFn: "searchFn" }, outputs: { searchInputValueChange: "searchInputValueChange" }, host: { properties: { "style.width": "this.width" } }, ngImport: i0, template: "<div class=\"devui-toggle-menu-search\">\n  <input\n    name=\"search\"\n    type=\"text\"\n    autocomplete=\"off\"\n    class=\"devui-form-control devui-select-search devui-select-input\"\n    [value]=\"inputValue || ''\"\n    [disabled]=\"disabled\"\n    [spellcheck]=\"spellcheck\"\n    [placeholder]=\"searchPlaceholder\"\n    (trim)=\"(false)\"\n  />\n  <span class=\"devui-toggle-menu-search-icon\">\n    <svg\n      *ngIf=\"isShowSearchIcon\"\n      width=\"14px\"\n      height=\"14px\"\n      viewBox=\"0 0 14 14\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      class=\"svg-icon-search\"\n      style=\"vertical-align: middle; margin-top: -4px\"\n    >\n      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g transform=\"translate(-1.000000, -1.000000)\">\n          <path\n            d=\"M7.30811922,1 C10.7919973,1 13.6162384,3.82424117 13.6162384,7.30811922 C13.6162384,8.72507634 13.149053,10.0329164 12.3603151,11.0860065 L14.7360564,13.4616238 C15.0879812,13.8135487 15.0879812,14.3841316 14.7360564,14.7360564 C14.3841316,15.0879812 13.8135487,15.0879812 13.4616238,14.7360564 L11.0860065,12.3603151 C10.0329164,13.149053 8.72507634,13.6162384 7.30811922,13.6162384 C3.82424117,13.6162384 1,10.7919973 1,7.30811922 C1,3.82424117 3.82424117,1 7.30811922,1 Z M7.31,2.51 C4.6590332,2.51 2.51,4.6590332 2.51,7.31 C2.51,9.9609668 4.6590332,12.11 7.31,12.11 C9.9609668,12.11 12.11,9.9609668 12.11,7.31 C12.11,4.6590332 9.9609668,2.51 7.31,2.51 Z\"\n            fill-rule=\"nonzero\"\n          ></path>\n        </g>\n      </g>\n    </svg>\n  </span>\n  <ng-content></ng-content>\n</div>\n", styles: [":host .devui-toggle-menu-search{position:relative;background:transparent}:host .devui-toggle-menu-search input{cursor:pointer;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;border:none!important;outline:0}:host .devui-toggle-menu-search-icon{position:absolute;top:0;right:0;z-index:2;display:block;width:28px;height:28px;line-height:28px;text-align:center;pointer-events:none}:host .devui-toggle-menu-search-icon path{fill:#71757f;fill:var(--devui-icon-text, #71757f)}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ToggleMenuSearchComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-toggle-menu-search', changeDetection: ChangeDetectionStrategy.OnPush, preserveWhitespaces: false, template: "<div class=\"devui-toggle-menu-search\">\n  <input\n    name=\"search\"\n    type=\"text\"\n    autocomplete=\"off\"\n    class=\"devui-form-control devui-select-search devui-select-input\"\n    [value]=\"inputValue || ''\"\n    [disabled]=\"disabled\"\n    [spellcheck]=\"spellcheck\"\n    [placeholder]=\"searchPlaceholder\"\n    (trim)=\"(false)\"\n  />\n  <span class=\"devui-toggle-menu-search-icon\">\n    <svg\n      *ngIf=\"isShowSearchIcon\"\n      width=\"14px\"\n      height=\"14px\"\n      viewBox=\"0 0 14 14\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      class=\"svg-icon-search\"\n      style=\"vertical-align: middle; margin-top: -4px\"\n    >\n      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g transform=\"translate(-1.000000, -1.000000)\">\n          <path\n            d=\"M7.30811922,1 C10.7919973,1 13.6162384,3.82424117 13.6162384,7.30811922 C13.6162384,8.72507634 13.149053,10.0329164 12.3603151,11.0860065 L14.7360564,13.4616238 C15.0879812,13.8135487 15.0879812,14.3841316 14.7360564,14.7360564 C14.3841316,15.0879812 13.8135487,15.0879812 13.4616238,14.7360564 L11.0860065,12.3603151 C10.0329164,13.149053 8.72507634,13.6162384 7.30811922,13.6162384 C3.82424117,13.6162384 1,10.7919973 1,7.30811922 C1,3.82424117 3.82424117,1 7.30811922,1 Z M7.31,2.51 C4.6590332,2.51 2.51,4.6590332 2.51,7.31 C2.51,9.9609668 4.6590332,12.11 7.31,12.11 C9.9609668,12.11 12.11,9.9609668 12.11,7.31 C12.11,4.6590332 9.9609668,2.51 7.31,2.51 Z\"\n            fill-rule=\"nonzero\"\n          ></path>\n        </g>\n      </g>\n    </svg>\n  </span>\n  <ng-content></ng-content>\n</div>\n", styles: [":host .devui-toggle-menu-search{position:relative;background:transparent}:host .devui-toggle-menu-search input{cursor:pointer;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;border:none!important;outline:0}:host .devui-toggle-menu-search-icon{position:absolute;top:0;right:0;z-index:2;display:block;width:28px;height:28px;line-height:28px;text-align:center;pointer-events:none}:host .devui-toggle-menu-search-icon path{fill:#71757f;fill:var(--devui-icon-text, #71757f)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { searchPlaceholder: [{
                type: Input
            }], isShowSearchIcon: [{
                type: Input
            }], inputValue: [{
                type: Input
            }], inputWidth: [{
                type: Input
            }], filterKey: [{
                type: Input
            }], disabled: [{
                type: Input
            }], spellcheck: [{
                type: Input
            }], options: [{
                type: Input
            }], delay: [{
                type: Input
            }], formatter: [{
                type: Input
            }], searchFn: [{
                type: Input
            }], searchInputValueChange: [{
                type: Output
            }], width: [{
                type: HostBinding,
                args: ['style.width']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLW1lbnUtc2VhcmNoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RldnVpL3RvZ2dsZS1tZW51L3RvZ2dsZS1tZW51LXNlYXJjaC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9kZXZ1aS90b2dnbGUtbWVudS90b2dnbGUtbWVudS1zZWFyY2guY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLFlBQVksRUFDWixXQUFXLEVBQ1gsS0FBSyxFQUdMLE1BQU0sRUFDUCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsU0FBUyxFQUFjLEVBQUUsRUFBZ0IsTUFBTSxNQUFNLENBQUM7QUFDL0QsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7OztBQVMzRCxNQUFNLE9BQU8seUJBQXlCO0lBb0NwQyxZQUFtQixFQUFjO1FBQWQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQWxDeEIscUJBQWdCLEdBQUcsSUFBSSxDQUFDO1FBSXhCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUNuQixZQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ2IsVUFBSyxHQUFHLEdBQUcsQ0FBQztRQW1CWCwyQkFBc0IsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBU3pELElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzNILENBQUM7SUFURCxJQUNJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxVQUFVLElBQUksU0FBUyxDQUFDO0lBQ3RDLENBQUM7SUFRRCxRQUFRO1FBQ04sSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQVMsRUFBRSxFQUFFO2dCQUM1QixPQUFPLEVBQUUsQ0FDUCxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztxQkFDL0IsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztxQkFDL0MsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDbEcsQ0FBQztZQUNKLENBQUMsQ0FBQztTQUNIO0lBQ0gsQ0FBQztJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUM5QixJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFO1lBQzVCLFNBQVM7WUFDVCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQztpQkFDaEUsSUFBSSxDQUNILEdBQUcsQ0FBQyxDQUFDLENBQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFDL0IsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxFQUNyRSxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUN6QjtpQkFDQSxTQUFTLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztTQUNoRTtJQUNILENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEVBQUU7WUFDM0IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ3ZDO0lBQ0gsQ0FBQzs7c0hBdEVVLHlCQUF5QjswR0FBekIseUJBQXlCLDBkQ3RCdEMseXJEQW9DQTsyRkRkYSx5QkFBeUI7a0JBUHJDLFNBQVM7K0JBQ0Usc0JBQXNCLG1CQUdmLHVCQUF1QixDQUFDLE1BQU0sdUJBQzFCLEtBQUs7aUdBR2pCLGlCQUFpQjtzQkFBekIsS0FBSztnQkFDRyxnQkFBZ0I7c0JBQXhCLEtBQUs7Z0JBQ0csVUFBVTtzQkFBbEIsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBS0csU0FBUztzQkFBakIsS0FBSztnQkFhRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNJLHNCQUFzQjtzQkFBL0IsTUFBTTtnQkFFSCxLQUFLO3NCQURSLFdBQVc7dUJBQUMsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSG9zdEJpbmRpbmcsXG4gIElucHV0LFxuICBPbkRlc3Ryb3ksXG4gIE9uSW5pdCxcbiAgT3V0cHV0XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZnJvbUV2ZW50LCBPYnNlcnZhYmxlLCBvZiwgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBkZWJvdW5jZVRpbWUsIGZpbHRlciwgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkLXRvZ2dsZS1tZW51LXNlYXJjaCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90b2dnbGUtbWVudS1zZWFyY2guY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFtgLi90b2dnbGUtbWVudS1zZWFyY2guY29tcG9uZW50LnNjc3NgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBUb2dnbGVNZW51U2VhcmNoQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICBASW5wdXQoKSBzZWFyY2hQbGFjZWhvbGRlcjogc3RyaW5nO1xuICBASW5wdXQoKSBpc1Nob3dTZWFyY2hJY29uID0gdHJ1ZTtcbiAgQElucHV0KCkgaW5wdXRWYWx1ZTogc3RyaW5nO1xuICBASW5wdXQoKSBpbnB1dFdpZHRoOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGZpbHRlcktleTogc3RyaW5nO1xuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBzcGVsbGNoZWNrID0gZmFsc2U7XG4gIEBJbnB1dCgpIG9wdGlvbnMgPSBbXTtcbiAgQElucHV0KCkgZGVsYXkgPSAzMDA7XG4gIC8qKlxuICAgKiDjgJDlj6/pgInjgJHlhrPlrprkuIvmi4nmoYbmsqHpobnmloflrZflpoLkvZXmmL7npLrvvIzpu5jorqTmmL7npLpmaWx0ZXJLZXnlrZfmrrXmiJbogIXmnKzouqvnmoTlgLxcbiAgICovXG4gIC8vIEBkZXByZWNhdGVkXG4gIEBJbnB1dCgpIGZvcm1hdHRlcjogKGl0ZW06IGFueSkgPT4gc3RyaW5nO1xuICAvKipcbiAgICog44CQ5Y+v6YCJ44CR5pCc57Si5Ye95pWw77yM5b2T6ZyA6KaB6Ieq5a6a5LmJ5LiL5ouJ6YCJ5oup6L+H5ruk6KeE5YiZ5pe25Y+v5Lul5L2/55SoXG4gICAqICDor7fkv53or4Hov5Tlm57lgLzmnIlpZOWSjG9wdGlvbuWtl+aute+8jGlk5piv56Gu5L+d5bCk5YW25aSa6YCJ55qE5pe25YCZ6IO95q2j56Gu57Si5byV5a+55bqU6YCJ6aG5XG4gICAqICDnroDljZXlrp7njrDlj4LogIPvvJpcbiAgICogIHNlYXJjaCA9ICh0ZXJtKSA9PiB7XG4gICAqICAgIHJldHVybiBvZihcbiAgICogICAgIFtMaWx5LCBNYXksIEpvcnNoLCBTaGl3YSwgTmFudGhdXG4gICAqICAgICAubWFwKChvcHRpb24sIGluZGV4KSA9PiAoe2lkOiBpbmRleCwgb3B0aW9uOiBvcHRpb259KSlcbiAgICogICAgIC5maWx0ZXIoaXRlbSA9PiBpdGVtLm9wdGlvbi5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZih0ZXJtLnRvTG93ZXJDYXNlKCkpICE9PSAtMSlcbiAgICogICApO1xuICAgKiAgfVxuICAgKi9cbiAgQElucHV0KCkgc2VhcmNoRm46ICh0ZXJtOiBzdHJpbmcpID0+IE9ic2VydmFibGU8QXJyYXk8eyBpZDogc3RyaW5nIHwgbnVtYmVyOyBvcHRpb246IGFueSB9Pj47XG4gIEBPdXRwdXQoKSBzZWFyY2hJbnB1dFZhbHVlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIEBIb3N0QmluZGluZygnc3R5bGUud2lkdGgnKVxuICBnZXQgd2lkdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5wdXRXaWR0aCB8fCAnaW5oZXJpdCc7XG4gIH1cblxuICBmaWx0ZXJTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZWw6IEVsZW1lbnRSZWYpIHtcbiAgICB0aGlzLmZvcm1hdHRlciA9IChpdGVtKSA9PiAodHlwZW9mIGl0ZW0gPT09ICdvYmplY3QnID8gaXRlbVt0aGlzLmZpbHRlcktleV0gfHwgJycgOiBTdHJpbmcoaXRlbSkgPyBpdGVtLnRvU3RyaW5nKCkgOiAnJyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAoIXRoaXMuc2VhcmNoRm4pIHtcbiAgICAgIHRoaXMuc2VhcmNoRm4gPSAodGVybTogYW55KSA9PiB7XG4gICAgICAgIHJldHVybiBvZihcbiAgICAgICAgICAodGhpcy5vcHRpb25zID8gdGhpcy5vcHRpb25zIDogW10pXG4gICAgICAgICAgICAubWFwKChvcHRpb24sIGluZGV4KSA9PiAoeyBpZDogaW5kZXgsIG9wdGlvbiB9KSlcbiAgICAgICAgICAgIC5maWx0ZXIoKGl0ZW0pID0+IHRoaXMuZm9ybWF0dGVyKGl0ZW0ub3B0aW9uKS50b0xvd2VyQ2FzZSgpLmluZGV4T2YodGVybS50b0xvd2VyQ2FzZSgpKSAhPT0gLTEpXG4gICAgICAgICk7XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICBpZiAoIXRoaXMuZmlsdGVyU3Vic2NyaXB0aW9uKSB7XG4gICAgICAvLyDpgb/lhY3ph43lpI3orqLpmIVcbiAgICAgIHRoaXMuZmlsdGVyU3Vic2NyaXB0aW9uID0gZnJvbUV2ZW50KHRoaXMuZWwubmF0aXZlRWxlbWVudCwgJ2lucHV0JylcbiAgICAgICAgLnBpcGUoXG4gICAgICAgICAgbWFwKChlOiBhbnkpID0+IGUudGFyZ2V0LnZhbHVlKSxcbiAgICAgICAgICBmaWx0ZXIoKHRlcm0pID0+ICF0aGlzLmRpc2FibGVkICYmIHRoaXMuc2VhcmNoRm4gJiYgdGVybS5sZW5ndGggPj0gMCksXG4gICAgICAgICAgZGVib3VuY2VUaW1lKHRoaXMuZGVsYXkpXG4gICAgICAgIClcbiAgICAgICAgLnN1YnNjcmliZSgodGVybSkgPT4gdGhpcy5zZWFyY2hJbnB1dFZhbHVlQ2hhbmdlLmVtaXQodGVybSkpO1xuICAgIH1cbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIGlmICh0aGlzLmZpbHRlclN1YnNjcmlwdGlvbikge1xuICAgICAgdGhpcy5maWx0ZXJTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJkZXZ1aS10b2dnbGUtbWVudS1zZWFyY2hcIj5cbiAgPGlucHV0XG4gICAgbmFtZT1cInNlYXJjaFwiXG4gICAgdHlwZT1cInRleHRcIlxuICAgIGF1dG9jb21wbGV0ZT1cIm9mZlwiXG4gICAgY2xhc3M9XCJkZXZ1aS1mb3JtLWNvbnRyb2wgZGV2dWktc2VsZWN0LXNlYXJjaCBkZXZ1aS1zZWxlY3QtaW5wdXRcIlxuICAgIFt2YWx1ZV09XCJpbnB1dFZhbHVlIHx8ICcnXCJcbiAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuICAgIFtzcGVsbGNoZWNrXT1cInNwZWxsY2hlY2tcIlxuICAgIFtwbGFjZWhvbGRlcl09XCJzZWFyY2hQbGFjZWhvbGRlclwiXG4gICAgKHRyaW0pPVwiKGZhbHNlKVwiXG4gIC8+XG4gIDxzcGFuIGNsYXNzPVwiZGV2dWktdG9nZ2xlLW1lbnUtc2VhcmNoLWljb25cIj5cbiAgICA8c3ZnXG4gICAgICAqbmdJZj1cImlzU2hvd1NlYXJjaEljb25cIlxuICAgICAgd2lkdGg9XCIxNHB4XCJcbiAgICAgIGhlaWdodD1cIjE0cHhcIlxuICAgICAgdmlld0JveD1cIjAgMCAxNCAxNFwiXG4gICAgICB2ZXJzaW9uPVwiMS4xXCJcbiAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICAgIGNsYXNzPVwic3ZnLWljb24tc2VhcmNoXCJcbiAgICAgIHN0eWxlPVwidmVydGljYWwtYWxpZ246IG1pZGRsZTsgbWFyZ2luLXRvcDogLTRweFwiXG4gICAgPlxuICAgICAgPGcgc3Ryb2tlPVwibm9uZVwiIHN0cm9rZS13aWR0aD1cIjFcIiBmaWxsPVwibm9uZVwiIGZpbGwtcnVsZT1cImV2ZW5vZGRcIj5cbiAgICAgICAgPGcgdHJhbnNmb3JtPVwidHJhbnNsYXRlKC0xLjAwMDAwMCwgLTEuMDAwMDAwKVwiPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBkPVwiTTcuMzA4MTE5MjIsMSBDMTAuNzkxOTk3MywxIDEzLjYxNjIzODQsMy44MjQyNDExNyAxMy42MTYyMzg0LDcuMzA4MTE5MjIgQzEzLjYxNjIzODQsOC43MjUwNzYzNCAxMy4xNDkwNTMsMTAuMDMyOTE2NCAxMi4zNjAzMTUxLDExLjA4NjAwNjUgTDE0LjczNjA1NjQsMTMuNDYxNjIzOCBDMTUuMDg3OTgxMiwxMy44MTM1NDg3IDE1LjA4Nzk4MTIsMTQuMzg0MTMxNiAxNC43MzYwNTY0LDE0LjczNjA1NjQgQzE0LjM4NDEzMTYsMTUuMDg3OTgxMiAxMy44MTM1NDg3LDE1LjA4Nzk4MTIgMTMuNDYxNjIzOCwxNC43MzYwNTY0IEwxMS4wODYwMDY1LDEyLjM2MDMxNTEgQzEwLjAzMjkxNjQsMTMuMTQ5MDUzIDguNzI1MDc2MzQsMTMuNjE2MjM4NCA3LjMwODExOTIyLDEzLjYxNjIzODQgQzMuODI0MjQxMTcsMTMuNjE2MjM4NCAxLDEwLjc5MTk5NzMgMSw3LjMwODExOTIyIEMxLDMuODI0MjQxMTcgMy44MjQyNDExNywxIDcuMzA4MTE5MjIsMSBaIE03LjMxLDIuNTEgQzQuNjU5MDMzMiwyLjUxIDIuNTEsNC42NTkwMzMyIDIuNTEsNy4zMSBDMi41MSw5Ljk2MDk2NjggNC42NTkwMzMyLDEyLjExIDcuMzEsMTIuMTEgQzkuOTYwOTY2OCwxMi4xMSAxMi4xMSw5Ljk2MDk2NjggMTIuMTEsNy4zMSBDMTIuMTEsNC42NTkwMzMyIDkuOTYwOTY2OCwyLjUxIDcuMzEsMi41MSBaXCJcbiAgICAgICAgICAgIGZpbGwtcnVsZT1cIm5vbnplcm9cIlxuICAgICAgICAgID48L3BhdGg+XG4gICAgICAgIDwvZz5cbiAgICAgIDwvZz5cbiAgICA8L3N2Zz5cbiAgPC9zcGFuPlxuICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG48L2Rpdj5cbiJdfQ==