import { DOCUMENT } from '@angular/common';
import { Inject, Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class DropDownService {
    constructor(doc) {
        this.doc = doc;
        this.documentClickTimeOut = null;
        this.closeDropdownBind = this.closeDropdown.bind(this);
        this.document = this.doc;
    }
    open(dropdownScope) {
        if (!this.openScope) {
            // 延时绑定document事件，防止事件冒泡导致立即触发
            this.documentClickTimeOut = setTimeout(() => {
                this.document.addEventListener('click', this.closeDropdownBind);
            });
        }
        this.openScope = dropdownScope;
    }
    close(dropdownScope) {
        if (this.openScope !== dropdownScope) {
            return;
        }
        this.openScope = null;
        clearTimeout(this.documentClickTimeOut);
        this.document.removeEventListener('click', this.closeDropdownBind);
    }
    closeDropdown(event) {
        if (!this.openScope) {
            return;
        }
        const menuEl = this.openScope.menuEl?.nativeElement;
        if (event && this.openScope.menuEl &&
            ((/input|textarea/i.test(event.target.tagName) && menuEl.contains(event.target))
                || this.openScope.closeScope === 'none'
                || (menuEl.contains(event.target) && this.openScope.closeScope === 'blank')
                || (this.openScope.dropdownChildren.some(children => children.toggleEl.nativeElement.contains(event.target))))) {
            return;
        }
        this.openScope.isOpen = false;
    }
}
DropDownService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DropDownService, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });
DropDownService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DropDownService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DropDownService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RldnVpL2Ryb3Bkb3duL2Ryb3Bkb3duLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUluRCxNQUFNLE9BQU8sZUFBZTtJQUsxQixZQUFzQyxHQUFRO1FBQVIsUUFBRyxHQUFILEdBQUcsQ0FBSztRQUh0Qyx5QkFBb0IsR0FBRyxJQUFJLENBQUM7UUFDNUIsc0JBQWlCLEdBQWtCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBR3ZFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUMzQixDQUFDO0lBRU0sSUFBSSxDQUFDLGFBQWdDO1FBQzFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ25CLDhCQUE4QjtZQUM5QixJQUFJLENBQUMsb0JBQW9CLEdBQUcsVUFBVSxDQUFDLEdBQUcsRUFBRTtnQkFDMUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7WUFDbEUsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUNELElBQUksQ0FBQyxTQUFTLEdBQUcsYUFBYSxDQUFDO0lBQ2pDLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBZ0M7UUFDM0MsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLGFBQWEsRUFBRTtZQUNwQyxPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUN0QixZQUFZLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDckUsQ0FBQztJQUVPLGFBQWEsQ0FBQyxLQUFpQjtRQUNyQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNuQixPQUFPO1NBQ1I7UUFDRCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUM7UUFDcEQsSUFBSSxLQUFLLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNO1lBQ2hDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQU8sS0FBSyxDQUFDLE1BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQzttQkFDbEYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEtBQUssTUFBTTttQkFDcEMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsS0FBSyxPQUFPLENBQUM7bUJBQ3hFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FDOUcsRUFBRTtZQUNILE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUNoQyxDQUFDOzs0R0ExQ1UsZUFBZSxrQkFLTixRQUFRO2dIQUxqQixlQUFlOzJGQUFmLGVBQWU7a0JBRDNCLFVBQVU7OzBCQU1JLE1BQU07MkJBQUMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERPQ1VNRU5UIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRHJvcERvd25EaXJlY3RpdmUgfSBmcm9tICcuL2Ryb3Bkb3duLmRpcmVjdGl2ZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEcm9wRG93blNlcnZpY2Uge1xuICBwcml2YXRlIG9wZW5TY29wZTogRHJvcERvd25EaXJlY3RpdmU7XG4gIHByaXZhdGUgZG9jdW1lbnRDbGlja1RpbWVPdXQgPSBudWxsO1xuICBwcml2YXRlIGNsb3NlRHJvcGRvd25CaW5kOiBFdmVudExpc3RlbmVyID0gdGhpcy5jbG9zZURyb3Bkb3duLmJpbmQodGhpcyk7XG4gIGRvY3VtZW50OiBEb2N1bWVudDtcbiAgY29uc3RydWN0b3IoQEluamVjdChET0NVTUVOVCkgcHJpdmF0ZSBkb2M6IGFueSkge1xuICAgIHRoaXMuZG9jdW1lbnQgPSB0aGlzLmRvYztcbiAgfVxuXG4gIHB1YmxpYyBvcGVuKGRyb3Bkb3duU2NvcGU6IERyb3BEb3duRGlyZWN0aXZlKSB7XG4gICAgaWYgKCF0aGlzLm9wZW5TY29wZSkge1xuICAgICAgLy8g5bu25pe257uR5a6aZG9jdW1lbnTkuovku7bvvIzpmLLmraLkuovku7blhpLms6Hlr7zoh7Tnq4vljbPop6blj5FcbiAgICAgIHRoaXMuZG9jdW1lbnRDbGlja1RpbWVPdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuY2xvc2VEcm9wZG93bkJpbmQpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHRoaXMub3BlblNjb3BlID0gZHJvcGRvd25TY29wZTtcbiAgfVxuXG4gIHB1YmxpYyBjbG9zZShkcm9wZG93blNjb3BlOiBEcm9wRG93bkRpcmVjdGl2ZSkge1xuICAgIGlmICh0aGlzLm9wZW5TY29wZSAhPT0gZHJvcGRvd25TY29wZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLm9wZW5TY29wZSA9IG51bGw7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMuZG9jdW1lbnRDbGlja1RpbWVPdXQpO1xuICAgIHRoaXMuZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmNsb3NlRHJvcGRvd25CaW5kKTtcbiAgfVxuXG4gIHByaXZhdGUgY2xvc2VEcm9wZG93bihldmVudDogTW91c2VFdmVudCkge1xuICAgIGlmICghdGhpcy5vcGVuU2NvcGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgbWVudUVsID0gdGhpcy5vcGVuU2NvcGUubWVudUVsPy5uYXRpdmVFbGVtZW50O1xuICAgIGlmIChldmVudCAmJiB0aGlzLm9wZW5TY29wZS5tZW51RWwgJiZcbiAgICAgICgoL2lucHV0fHRleHRhcmVhL2kudGVzdCgoPGFueT5ldmVudC50YXJnZXQpLnRhZ05hbWUpICYmIG1lbnVFbC5jb250YWlucyhldmVudC50YXJnZXQpKVxuICAgICAgICB8fCB0aGlzLm9wZW5TY29wZS5jbG9zZVNjb3BlID09PSAnbm9uZSdcbiAgICAgICAgfHwgKG1lbnVFbC5jb250YWlucyhldmVudC50YXJnZXQpICYmIHRoaXMub3BlblNjb3BlLmNsb3NlU2NvcGUgPT09ICdibGFuaycpXG4gICAgICAgIHx8ICh0aGlzLm9wZW5TY29wZS5kcm9wZG93bkNoaWxkcmVuLnNvbWUoY2hpbGRyZW4gPT4gY2hpbGRyZW4udG9nZ2xlRWwubmF0aXZlRWxlbWVudC5jb250YWlucyhldmVudC50YXJnZXQpKSlcbiAgICAgICkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5vcGVuU2NvcGUuaXNPcGVuID0gZmFsc2U7XG4gIH1cbn1cbiJdfQ==