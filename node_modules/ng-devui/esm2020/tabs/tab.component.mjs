import { Component, ContentChild, Input, TemplateRef, ViewChild } from '@angular/core';
import { TabContentDirective } from './tab-content.directive';
import { TabTitleDirective } from './tab-title.directive';
import * as i0 from "@angular/core";
export class TabComponent {
    constructor() {
        this.disabled = false;
    }
    /**
     * @deprecated
     * 用id替代
     */
    set tabId(value) {
        this.id = value;
    }
}
TabComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TabComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TabComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: TabComponent, selector: "d-tab", inputs: { tabId: "tabId", id: "id", title: "title", disabled: "disabled" }, queries: [{ propertyName: "contentTpl", first: true, predicate: TabContentDirective, descendants: true }, { propertyName: "titleTpl", first: true, predicate: TabTitleDirective, descendants: true }], viewQueries: [{ propertyName: "innerContent", first: true, predicate: ["innerContent"], descendants: true, static: true }], ngImport: i0, template: `<ng-template #innerContent>
    <ng-content></ng-content>
  </ng-template>
  `, isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TabComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'd-tab',
                    template: `<ng-template #innerContent>
    <ng-content></ng-content>
  </ng-template>
  `,
                    preserveWhitespaces: false,
                }]
        }], propDecorators: { tabId: [{
                type: Input
            }], id: [{
                type: Input
            }], title: [{
                type: Input
            }], disabled: [{
                type: Input
            }], contentTpl: [{
                type: ContentChild,
                args: [TabContentDirective]
            }], titleTpl: [{
                type: ContentChild,
                args: [TabTitleDirective]
            }], innerContent: [{
                type: ViewChild,
                args: ['innerContent', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RldnVpL3RhYnMvdGFiLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUFVMUQsTUFBTSxPQUFPLFlBQVk7SUFSekI7UUFrQlcsYUFBUSxHQUFHLEtBQUssQ0FBQztLQVEzQjtJQWpCQzs7O09BR0c7SUFDSCxJQUFhLEtBQUssQ0FBQyxLQUFLO1FBQ3RCLElBQUksQ0FBQyxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBQ2xCLENBQUM7O3lHQVBVLFlBQVk7NkZBQVosWUFBWSxpS0FlVCxtQkFBbUIsMkVBQ25CLGlCQUFpQiw0S0F0QnJCOzs7R0FHVDsyRkFHVSxZQUFZO2tCQVJ4QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxPQUFPO29CQUNqQixRQUFRLEVBQUU7OztHQUdUO29CQUNELG1CQUFtQixFQUFFLEtBQUs7aUJBQzNCOzhCQU1jLEtBQUs7c0JBQWpCLEtBQUs7Z0JBR0csRUFBRTtzQkFBVixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUs2QixVQUFVO3NCQUE1QyxZQUFZO3VCQUFDLG1CQUFtQjtnQkFDQSxRQUFRO3NCQUF4QyxZQUFZO3VCQUFDLGlCQUFpQjtnQkFDWSxZQUFZO3NCQUF0RCxTQUFTO3VCQUFDLGNBQWMsRUFBRSxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSW5wdXQsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRhYkNvbnRlbnREaXJlY3RpdmUgfSBmcm9tICcuL3RhYi1jb250ZW50LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUYWJUaXRsZURpcmVjdGl2ZSB9IGZyb20gJy4vdGFiLXRpdGxlLmRpcmVjdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2QtdGFiJyxcbiAgdGVtcGxhdGU6IGA8bmctdGVtcGxhdGUgI2lubmVyQ29udGVudD5cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIDwvbmctdGVtcGxhdGU+XG4gIGAsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBUYWJDb21wb25lbnQge1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWRcbiAgICog55SoaWTmm7/ku6NcbiAgICovXG4gIEBJbnB1dCgpIHNldCB0YWJJZCh2YWx1ZSkge1xuICAgIHRoaXMuaWQgPSB2YWx1ZTtcbiAgfVxuICBASW5wdXQoKSBpZDogbnVtYmVyIHwgc3RyaW5nO1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWRcbiAgICog5YaF5a6555u05o6l5YaZ5Zyo5qCH562+5YaFXG4gICAqL1xuICBAQ29udGVudENoaWxkKFRhYkNvbnRlbnREaXJlY3RpdmUpIGNvbnRlbnRUcGw6IFRhYkNvbnRlbnREaXJlY3RpdmU7XG4gIEBDb250ZW50Q2hpbGQoVGFiVGl0bGVEaXJlY3RpdmUpIHRpdGxlVHBsOiBUYWJUaXRsZURpcmVjdGl2ZTtcbiAgQFZpZXdDaGlsZCgnaW5uZXJDb250ZW50Jywge3N0YXRpYzogdHJ1ZX0pIGlubmVyQ29udGVudDogVGVtcGxhdGVSZWY8YW55Pjtcbn1cbiJdfQ==