import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { BatchDraggableDirective } from './directives/batch-draggable.directive';
import { DragPreviewCloneDomRefComponent } from './directives/drag-preivew-clone-from-domRef.component';
import { DragPreviewComponent } from './directives/drag-preview.component';
import { DragPreviewDirective } from './directives/drag-preview.directive';
import { DragSyncDirective } from './directives/drag-sync.directive';
import { DragDropSyncBoxDirective } from './directives/dragdrop-sync-box.directive';
import { DraggableDirective } from './directives/draggable.directive';
import { DropScrollEnhancedSideDirective } from './directives/drop-scroll-enhance-side.directive';
import { DropScrollEnhancedDirective } from './directives/drop-scroll-enhance.directive';
import { DropSortSyncDirective } from './directives/drop-sort-sync.directive';
import { DroppableDirective } from './directives/droppable.directive';
import { SortableDirective } from './directives/sortable.directive';
import { DragDropService } from './services/drag-drop.service';
import * as i0 from "@angular/core";
export class DragDropModule {
}
DragDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DragDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DragDropModule, declarations: [DraggableDirective,
        DroppableDirective,
        SortableDirective,
        DropScrollEnhancedDirective,
        DropScrollEnhancedSideDirective,
        BatchDraggableDirective,
        DragSyncDirective,
        DropSortSyncDirective,
        DragDropSyncBoxDirective,
        DragPreviewDirective,
        DragPreviewComponent,
        DragPreviewCloneDomRefComponent], imports: [CommonModule], exports: [DraggableDirective,
        DroppableDirective,
        SortableDirective,
        DropScrollEnhancedDirective,
        DropScrollEnhancedSideDirective,
        BatchDraggableDirective,
        DragSyncDirective,
        DropSortSyncDirective,
        DragDropSyncBoxDirective,
        DragPreviewDirective,
        DragPreviewComponent,
        DragPreviewCloneDomRefComponent] });
DragDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DragDropModule, providers: [
        DragDropService
    ], imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DragDropModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [
                        DraggableDirective,
                        DroppableDirective,
                        SortableDirective,
                        DropScrollEnhancedDirective,
                        DropScrollEnhancedSideDirective,
                        BatchDraggableDirective,
                        DragSyncDirective,
                        DropSortSyncDirective,
                        DragDropSyncBoxDirective,
                        DragPreviewDirective,
                        DragPreviewComponent,
                        DragPreviewCloneDomRefComponent,
                    ],
                    exports: [
                        DraggableDirective,
                        DroppableDirective,
                        SortableDirective,
                        DropScrollEnhancedDirective,
                        DropScrollEnhancedSideDirective,
                        BatchDraggableDirective,
                        DragSyncDirective,
                        DropSortSyncDirective,
                        DragDropSyncBoxDirective,
                        DragPreviewDirective,
                        DragPreviewComponent,
                        DragPreviewCloneDomRefComponent,
                    ],
                    providers: [
                        DragDropService
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1kcm9wLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RldnVpL2RyYWdkcm9wL2RyYWctZHJvcC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDakYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFDeEcsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDM0UsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDckUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDcEYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDdEUsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDbEcsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDekYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDOUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDdEUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDcEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQXFDL0QsTUFBTSxPQUFPLGNBQWM7OzJHQUFkLGNBQWM7NEdBQWQsY0FBYyxpQkFoQ3ZCLGtCQUFrQjtRQUNsQixrQkFBa0I7UUFDbEIsaUJBQWlCO1FBQ2pCLDJCQUEyQjtRQUMzQiwrQkFBK0I7UUFDL0IsdUJBQXVCO1FBQ3ZCLGlCQUFpQjtRQUNqQixxQkFBcUI7UUFDckIsd0JBQXdCO1FBQ3hCLG9CQUFvQjtRQUNwQixvQkFBb0I7UUFDcEIsK0JBQStCLGFBYnZCLFlBQVksYUFnQnBCLGtCQUFrQjtRQUNsQixrQkFBa0I7UUFDbEIsaUJBQWlCO1FBQ2pCLDJCQUEyQjtRQUMzQiwrQkFBK0I7UUFDL0IsdUJBQXVCO1FBQ3ZCLGlCQUFpQjtRQUNqQixxQkFBcUI7UUFDckIsd0JBQXdCO1FBQ3hCLG9CQUFvQjtRQUNwQixvQkFBb0I7UUFDcEIsK0JBQStCOzRHQU90QixjQUFjLGFBTGQ7UUFDVCxlQUFlO0tBQ2hCLFlBL0JRLENBQUMsWUFBWSxDQUFDOzJGQWtDWixjQUFjO2tCQW5DMUIsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7b0JBQ3ZCLFlBQVksRUFBRTt3QkFDWixrQkFBa0I7d0JBQ2xCLGtCQUFrQjt3QkFDbEIsaUJBQWlCO3dCQUNqQiwyQkFBMkI7d0JBQzNCLCtCQUErQjt3QkFDL0IsdUJBQXVCO3dCQUN2QixpQkFBaUI7d0JBQ2pCLHFCQUFxQjt3QkFDckIsd0JBQXdCO3dCQUN4QixvQkFBb0I7d0JBQ3BCLG9CQUFvQjt3QkFDcEIsK0JBQStCO3FCQUNoQztvQkFDRCxPQUFPLEVBQUU7d0JBQ1Asa0JBQWtCO3dCQUNsQixrQkFBa0I7d0JBQ2xCLGlCQUFpQjt3QkFDakIsMkJBQTJCO3dCQUMzQiwrQkFBK0I7d0JBQy9CLHVCQUF1Qjt3QkFDdkIsaUJBQWlCO3dCQUNqQixxQkFBcUI7d0JBQ3JCLHdCQUF3Qjt3QkFDeEIsb0JBQW9CO3dCQUNwQixvQkFBb0I7d0JBQ3BCLCtCQUErQjtxQkFDaEM7b0JBQ0QsU0FBUyxFQUFFO3dCQUNULGVBQWU7cUJBQ2hCO2lCQUVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXRjaERyYWdnYWJsZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9iYXRjaC1kcmFnZ2FibGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IERyYWdQcmV2aWV3Q2xvbmVEb21SZWZDb21wb25lbnQgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZHJhZy1wcmVpdmV3LWNsb25lLWZyb20tZG9tUmVmLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEcmFnUHJldmlld0NvbXBvbmVudCB9IGZyb20gJy4vZGlyZWN0aXZlcy9kcmFnLXByZXZpZXcuY29tcG9uZW50JztcbmltcG9ydCB7IERyYWdQcmV2aWV3RGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2RyYWctcHJldmlldy5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRHJhZ1N5bmNEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZHJhZy1zeW5jLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEcmFnRHJvcFN5bmNCb3hEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZHJhZ2Ryb3Atc3luYy1ib3guZGlyZWN0aXZlJztcbmltcG9ydCB7IERyYWdnYWJsZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9kcmFnZ2FibGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IERyb3BTY3JvbGxFbmhhbmNlZFNpZGVEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZHJvcC1zY3JvbGwtZW5oYW5jZS1zaWRlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEcm9wU2Nyb2xsRW5oYW5jZWREaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZHJvcC1zY3JvbGwtZW5oYW5jZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRHJvcFNvcnRTeW5jRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2Ryb3Atc29ydC1zeW5jLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEcm9wcGFibGVEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZHJvcHBhYmxlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTb3J0YWJsZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9zb3J0YWJsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRHJhZ0Ryb3BTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9kcmFnLWRyb3Auc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBEcmFnZ2FibGVEaXJlY3RpdmUsXG4gICAgRHJvcHBhYmxlRGlyZWN0aXZlLFxuICAgIFNvcnRhYmxlRGlyZWN0aXZlLFxuICAgIERyb3BTY3JvbGxFbmhhbmNlZERpcmVjdGl2ZSxcbiAgICBEcm9wU2Nyb2xsRW5oYW5jZWRTaWRlRGlyZWN0aXZlLFxuICAgIEJhdGNoRHJhZ2dhYmxlRGlyZWN0aXZlLFxuICAgIERyYWdTeW5jRGlyZWN0aXZlLFxuICAgIERyb3BTb3J0U3luY0RpcmVjdGl2ZSxcbiAgICBEcmFnRHJvcFN5bmNCb3hEaXJlY3RpdmUsXG4gICAgRHJhZ1ByZXZpZXdEaXJlY3RpdmUsXG4gICAgRHJhZ1ByZXZpZXdDb21wb25lbnQsXG4gICAgRHJhZ1ByZXZpZXdDbG9uZURvbVJlZkNvbXBvbmVudCxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIERyYWdnYWJsZURpcmVjdGl2ZSxcbiAgICBEcm9wcGFibGVEaXJlY3RpdmUsXG4gICAgU29ydGFibGVEaXJlY3RpdmUsXG4gICAgRHJvcFNjcm9sbEVuaGFuY2VkRGlyZWN0aXZlLFxuICAgIERyb3BTY3JvbGxFbmhhbmNlZFNpZGVEaXJlY3RpdmUsXG4gICAgQmF0Y2hEcmFnZ2FibGVEaXJlY3RpdmUsXG4gICAgRHJhZ1N5bmNEaXJlY3RpdmUsXG4gICAgRHJvcFNvcnRTeW5jRGlyZWN0aXZlLFxuICAgIERyYWdEcm9wU3luY0JveERpcmVjdGl2ZSxcbiAgICBEcmFnUHJldmlld0RpcmVjdGl2ZSxcbiAgICBEcmFnUHJldmlld0NvbXBvbmVudCxcbiAgICBEcmFnUHJldmlld0Nsb25lRG9tUmVmQ29tcG9uZW50LFxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBEcmFnRHJvcFNlcnZpY2VcbiAgXSxcblxufSlcbmV4cG9ydCBjbGFzcyBEcmFnRHJvcE1vZHVsZSB7XG59XG4iXX0=