import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { OverlayContainerRef } from 'ng-devui/overlay-container';
import { PositioningModule } from 'ng-devui/position';
import { SafePipeModule } from 'ng-devui/utils';
import { StepsGuideComponent } from './steps-guide.component';
import { StepsGuideDirective } from './steps-guide.directive';
import { StepsGuideService } from './steps-guide.service';
import * as i0 from "@angular/core";
export class StepsGuideModule {
}
StepsGuideModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: StepsGuideModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StepsGuideModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: StepsGuideModule, declarations: [StepsGuideComponent, StepsGuideDirective], imports: [CommonModule,
        SafePipeModule,
        PositioningModule], exports: [StepsGuideDirective] });
StepsGuideModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: StepsGuideModule, providers: [
        OverlayContainerRef,
        StepsGuideService
    ], imports: [[
            CommonModule,
            SafePipeModule,
            PositioningModule
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: StepsGuideModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        SafePipeModule,
                        PositioningModule
                    ],
                    declarations: [StepsGuideComponent, StepsGuideDirective],
                    exports: [StepsGuideDirective],
                    providers: [
                        OverlayContainerRef,
                        StepsGuideService
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHMtZ3VpZGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGV2dWkvc3RlcHMtZ3VpZGUvc3RlcHMtZ3VpZGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUFnQjFELE1BQU0sT0FBTyxnQkFBZ0I7OzZHQUFoQixnQkFBZ0I7OEdBQWhCLGdCQUFnQixpQkFSWixtQkFBbUIsRUFBRSxtQkFBbUIsYUFKckQsWUFBWTtRQUNaLGNBQWM7UUFDZCxpQkFBaUIsYUFHVCxtQkFBbUI7OEdBT2xCLGdCQUFnQixhQUxoQjtRQUNULG1CQUFtQjtRQUNuQixpQkFBaUI7S0FDbEIsWUFYUTtZQUNQLFlBQVk7WUFDWixjQUFjO1lBQ2QsaUJBQWlCO1NBQ2xCOzJGQVNVLGdCQUFnQjtrQkFkNUIsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixjQUFjO3dCQUNkLGlCQUFpQjtxQkFDbEI7b0JBQ0QsWUFBWSxFQUFFLENBQUMsbUJBQW1CLEVBQUUsbUJBQW1CLENBQUM7b0JBQ3hELE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDO29CQUU5QixTQUFTLEVBQUU7d0JBQ1QsbUJBQW1CO3dCQUNuQixpQkFBaUI7cUJBQ2xCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPdmVybGF5Q29udGFpbmVyUmVmIH0gZnJvbSAnbmctZGV2dWkvb3ZlcmxheS1jb250YWluZXInO1xuaW1wb3J0IHsgUG9zaXRpb25pbmdNb2R1bGUgfSBmcm9tICduZy1kZXZ1aS9wb3NpdGlvbic7XG5pbXBvcnQgeyBTYWZlUGlwZU1vZHVsZSB9IGZyb20gJ25nLWRldnVpL3V0aWxzJztcbmltcG9ydCB7IFN0ZXBzR3VpZGVDb21wb25lbnQgfSBmcm9tICcuL3N0ZXBzLWd1aWRlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdGVwc0d1aWRlRGlyZWN0aXZlIH0gZnJvbSAnLi9zdGVwcy1ndWlkZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU3RlcHNHdWlkZVNlcnZpY2UgfSBmcm9tICcuL3N0ZXBzLWd1aWRlLnNlcnZpY2UnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFNhZmVQaXBlTW9kdWxlLFxuICAgIFBvc2l0aW9uaW5nTW9kdWxlXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1N0ZXBzR3VpZGVDb21wb25lbnQsIFN0ZXBzR3VpZGVEaXJlY3RpdmVdLFxuICBleHBvcnRzOiBbU3RlcHNHdWlkZURpcmVjdGl2ZV0sXG5cbiAgcHJvdmlkZXJzOiBbXG4gICAgT3ZlcmxheUNvbnRhaW5lclJlZixcbiAgICBTdGVwc0d1aWRlU2VydmljZVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFN0ZXBzR3VpZGVNb2R1bGUgeyB9XG4iXX0=