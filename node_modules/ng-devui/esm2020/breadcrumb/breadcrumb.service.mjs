import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
export class BreadCrumbService {
    constructor(router) {
        this.router = router;
    }
    // 与原生routerLink表现形式一致，navigateByUrl()可直接传入字符串类型的链接，并将链接解析为routerLink的urlTree的形式
    navigateTo($event, item) {
        // 兼容a标签与不同键的交互形式
        if ($event.button !== 0 || $event.ctrlKey || $event.metaKey || $event.shiftKey) {
            return;
        }
        if (typeof item.target === 'string' && item.target !== '_self') {
            return;
        }
        $event.preventDefault();
        this.router.navigateByUrl(item.link);
    }
}
BreadCrumbService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BreadCrumbService, deps: [{ token: i1.Router }], target: i0.ɵɵFactoryTarget.Injectable });
BreadCrumbService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BreadCrumbService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BreadCrumbService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.Router }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGV2dWkvYnJlYWRjcnVtYi9icmVhZGNydW1iLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7OztBQUd6QyxNQUFNLE9BQU8saUJBQWlCO0lBQzVCLFlBQW9CLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO0lBQUksQ0FBQztJQUN2QyxnRkFBZ0Y7SUFDaEYsVUFBVSxDQUFDLE1BQU0sRUFBRSxJQUFJO1FBQ3JCLGlCQUFpQjtRQUNqQixJQUFJLE1BQU0sQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLElBQUksTUFBTSxDQUFDLE9BQU8sSUFBSSxNQUFNLENBQUMsUUFBUSxFQUFFO1lBQzlFLE9BQU87U0FDUjtRQUNELElBQUksT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLFFBQVEsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU8sRUFBRTtZQUM5RCxPQUFPO1NBQ1I7UUFDRCxNQUFNLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7OzhHQWJVLGlCQUFpQjtrSEFBakIsaUJBQWlCOzJGQUFqQixpQkFBaUI7a0JBRDdCLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQnJlYWRDcnVtYlNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJvdXRlcjogUm91dGVyKSB7IH1cbiAgLy8g5LiO5Y6f55Sfcm91dGVyTGlua+ihqOeOsOW9ouW8j+S4gOiHtO+8jG5hdmlnYXRlQnlVcmwoKeWPr+ebtOaOpeS8oOWFpeWtl+espuS4suexu+Wei+eahOmTvuaOpe+8jOW5tuWwhumTvuaOpeino+aekOS4unJvdXRlckxpbmvnmoR1cmxUcmVl55qE5b2i5byPXG4gIG5hdmlnYXRlVG8oJGV2ZW50LCBpdGVtKSB7XG4gICAgLy8g5YW85a65Yeagh+etvuS4juS4jeWQjOmUrueahOS6pOS6kuW9ouW8j1xuICAgIGlmICgkZXZlbnQuYnV0dG9uICE9PSAwIHx8ICRldmVudC5jdHJsS2V5IHx8ICRldmVudC5tZXRhS2V5IHx8ICRldmVudC5zaGlmdEtleSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGl0ZW0udGFyZ2V0ID09PSAnc3RyaW5nJyAmJiBpdGVtLnRhcmdldCAhPT0gJ19zZWxmJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZUJ5VXJsKGl0ZW0ubGluayk7XG4gIH1cblxufVxuIl19