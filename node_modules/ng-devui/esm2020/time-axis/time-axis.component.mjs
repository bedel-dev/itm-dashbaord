import { Component, ContentChildren, ElementRef, Input, QueryList, TemplateRef } from '@angular/core';
import { TimeAxisItemComponent } from './time-axis-item/time-axis-item.component';
import * as i0 from "@angular/core";
import * as i1 from "./time-axis-item/time-axis-item.component";
import * as i2 from "@angular/common";
export class TimeAxisComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.direction = 'vertical';
        this.mode = 'normal';
        this.widthMode = 'fitContent';
    }
    ngAfterContentInit() {
        if (this.mode === 'alternative') {
            this.updateAlternativePosition();
        }
        this.vanishHorizontalLastLine();
    }
    ngAfterViewInit() {
        if (this._direction === 'horizontal') {
            const ulElement = this.elementRef.nativeElement.querySelector('.devui-time-axis-horizontal');
            const topElement = this.elementRef.nativeElement.querySelector('.devui-time-axis-item-data-horizontal-top');
            const bottomElement = this.elementRef.nativeElement.querySelector('.devui-time-axis-item-data-horizontal-bottom');
            ulElement.style.height = `${Math.max(topElement.offsetHeight, bottomElement.offsetHeight) * 2 + 42}px`;
        }
    }
    get _direction() {
        if (this.data !== undefined) {
            return this.data.direction || 'vertical';
        }
        else {
            return this.direction;
        }
    }
    get _widthMode() {
        if (this.data !== undefined) {
            return this.data.widthMode;
        }
        else {
            return this.widthMode;
        }
    }
    updateAlternativePosition() {
        if (this.data === undefined) {
            this.listOfItems.forEach((item, index) => {
                if (this._direction === 'vertical') {
                    item.position = index % 2 === 0 ? 'left' : 'right';
                }
                else {
                    item.position = index % 2 === 0 ? 'bottom' : 'top';
                }
            });
        }
        else {
            for (let i = 0; i < this.data.list.length; i++) {
                if (this._direction === 'vertical') {
                    this.data.list[i].position = i % 2 === 0 ? 'left' : 'right';
                }
                else {
                    this.data.list[i].position = i % 2 === 0 ? 'bottom' : 'top';
                }
            }
        }
    }
    vanishHorizontalLastLine() {
        if (this._direction === 'horizontal') {
            if (this.data === undefined) {
                if (this.listOfItems.last.lineStyle === undefined) {
                    this.listOfItems.last.lineStyle = { style: 'none' };
                }
            }
            else {
                if (this.data.list[this.data.list.length - 1].lineStyle === undefined) {
                    this.data.list[this.data.list.length - 1].lineStyle = { style: 'none' };
                }
            }
        }
    }
    changeStatusLine(event) {
        if (this.data !== undefined && this.data.direction === 'horizontal') {
            setTimeout(() => {
                this.data.list.forEach((item, index, array) => {
                    if (item.status === 'runned' && index > 0) {
                        array[index - 1].lineStyle = { style: 'solid', color: 'var(--devui-success)' };
                    }
                    else if (item.status === 'running' && index > 0) {
                        array[index - 1].lineStyle = { style: 'dotted', color: 'var(--devui-success)' };
                    }
                    else if (item.status === '' && index > 0) {
                        array[index - 1].lineStyle = { style: 'solid' };
                    }
                });
            });
        }
    }
}
TimeAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TimeAxisComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
TimeAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: TimeAxisComponent, selector: "d-time-axis", inputs: { data: "data", contentTemplate: "contentTemplate", direction: "direction", mode: "mode", widthMode: "widthMode" }, queries: [{ propertyName: "listOfItems", predicate: TimeAxisItemComponent }], exportAs: ["time-axis"], ngImport: i0, template: "<div\n  [class.devui-time-axis-horizontal]=\"_direction === 'horizontal'\"\n  [class.devui-time-axis-vertical]=\"_direction === 'vertical'\"\n  [class.devui-time-axis-horizontal-fullwidth]=\"_direction === 'horizontal' && _widthMode === 'fitWidth'\"\n>\n  <ng-container *ngIf=\"data !== undefined\">\n    <d-time-axis-item\n      *ngFor=\"let list of data.list\"\n      [model]=\"data.model\"\n      [direction]=\"_direction\"\n      [time]=\"list.time\"\n      [timePosition]=\"data.position\"\n      [position]=\"list.position\"\n      [lineStyle]=\"list.lineStyle\"\n      [customDot]=\"list.customDot\"\n      [dotColor]=\"list.dotColor\"\n      [iconClass]=\"list.iconClass\"\n      [type]=\"list.type\"\n      [status]=\"list.status\"\n      [extraElement]=\"list.extraElement\"\n      [text]=\"list.text\"\n      [contentTemplate]=\"contentTemplate\"\n      [data]=\"list.data\"\n      [horizontalAlign]=\"data.horizontalAlign || 'center'\"\n      (statusChanged)=\"changeStatusLine($event)\"\n    >\n    </d-time-axis-item>\n  </ng-container>\n  <ng-content select=\"d-time-axis-item\"></ng-content>\n</div>\n", styles: [".devui-time-axis-vertical{display:flex;flex-direction:column;align-items:center;position:relative}.devui-time-axis-vertical ::ng-deep d-time-axis-item{width:100%}.devui-time-axis-horizontal{display:flex;flex-direction:row;align-items:center!important;position:relative}.devui-time-axis-horizontal ::ng-deep d-time-axis-item{height:100%}.devui-time-axis-horizontal-fullwidth ::ng-deep d-time-axis-item{width:100%}\n"], components: [{ type: i1.TimeAxisItemComponent, selector: "d-time-axis-item", inputs: ["model", "direction", "time", "timePosition", "position", "lineStyle", "customDot", "dotColor", "iconClass", "extraElement", "text", "contentTemplate", "data", "horizontalAlign", "type", "status"], outputs: ["statusChanged"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TimeAxisComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-time-axis', exportAs: 'time-axis', preserveWhitespaces: false, template: "<div\n  [class.devui-time-axis-horizontal]=\"_direction === 'horizontal'\"\n  [class.devui-time-axis-vertical]=\"_direction === 'vertical'\"\n  [class.devui-time-axis-horizontal-fullwidth]=\"_direction === 'horizontal' && _widthMode === 'fitWidth'\"\n>\n  <ng-container *ngIf=\"data !== undefined\">\n    <d-time-axis-item\n      *ngFor=\"let list of data.list\"\n      [model]=\"data.model\"\n      [direction]=\"_direction\"\n      [time]=\"list.time\"\n      [timePosition]=\"data.position\"\n      [position]=\"list.position\"\n      [lineStyle]=\"list.lineStyle\"\n      [customDot]=\"list.customDot\"\n      [dotColor]=\"list.dotColor\"\n      [iconClass]=\"list.iconClass\"\n      [type]=\"list.type\"\n      [status]=\"list.status\"\n      [extraElement]=\"list.extraElement\"\n      [text]=\"list.text\"\n      [contentTemplate]=\"contentTemplate\"\n      [data]=\"list.data\"\n      [horizontalAlign]=\"data.horizontalAlign || 'center'\"\n      (statusChanged)=\"changeStatusLine($event)\"\n    >\n    </d-time-axis-item>\n  </ng-container>\n  <ng-content select=\"d-time-axis-item\"></ng-content>\n</div>\n", styles: [".devui-time-axis-vertical{display:flex;flex-direction:column;align-items:center;position:relative}.devui-time-axis-vertical ::ng-deep d-time-axis-item{width:100%}.devui-time-axis-horizontal{display:flex;flex-direction:row;align-items:center!important;position:relative}.devui-time-axis-horizontal ::ng-deep d-time-axis-item{height:100%}.devui-time-axis-horizontal-fullwidth ::ng-deep d-time-axis-item{width:100%}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { listOfItems: [{
                type: ContentChildren,
                args: [TimeAxisItemComponent]
            }], data: [{
                type: Input
            }], contentTemplate: [{
                type: Input
            }], direction: [{
                type: Input
            }], mode: [{
                type: Input
            }], widthMode: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,