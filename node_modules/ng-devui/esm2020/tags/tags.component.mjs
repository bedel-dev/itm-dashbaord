import { ChangeDetectorRef, Component, ContentChild, ElementRef, EventEmitter, Input, Output, QueryList, TemplateRef, ViewChild, ViewChildren } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./tag.component";
import * as i2 from "@angular/common";
import * as i3 from "ng-devui/popover";
export class TagsComponent {
    constructor(cdr) {
        this.cdr = cdr;
        /**
         * 【必选】记录输入的标签
         */
        this.tags = [];
        /**
         * 【可选】使用的属性名
         */
        this.displayProperty = '';
        /**
         * @deprecated
         */
        this.deletable = false;
        this.mode = 'default';
        this.titleProperty = '';
        this.hideBeyondTags = false;
        /**
         * tag被删除后触发
         */
        this.tagDelete = new EventEmitter();
        /**
         * 多标签超出显示相关数据
         */
        this.showTags = [];
        this.beyondTags = [];
        this.showMore = false;
        this.MORE_TAG_WIDTH = 30;
        this.TAG_MARGIN = 4;
    }
    ngOnInit() {
        this.maxShowNumber = this.tags.length;
        // TODO: 使用cloneDeep导致category-search卡顿，lodash-es报Illegal invocation非法调用错误，需调查原因，暂用循环方式替代深拷贝
        this.tags.forEach((item) => this.showTags.push(typeof item === 'object' ? { ...item } : item));
    }
    ngAfterViewInit() {
        if (this.hideBeyondTags) {
            this.calculateHideTagsStatus();
        }
    }
    ngOnChanges(changes) {
        if (this.hideBeyondTags && changes['tags'] && !changes['tags'].firstChange) {
            this.maxShowNumber = this.tags.length;
            this.showTags = [...this.tags];
            this.calculateHideTagsStatus();
        }
    }
    calculateHideTagsStatus() {
        this.cdr.detectChanges();
        this.tagsFatherWidth = this.tagsElement.nativeElement.getBoundingClientRect().width;
        let curWidth = 0;
        this.viewChildren.forEach((element, index) => {
            if (curWidth + element.nativeElement.offsetWidth + this.TAG_MARGIN < this.tagsFatherWidth - this.MORE_TAG_WIDTH) {
                curWidth += element.nativeElement.offsetWidth;
                curWidth += this.TAG_MARGIN;
                this.maxShowNumber = index + 1;
            }
        });
        if (this.maxShowNumber !== this.tags.length) {
            this.showMore = true;
            this.beyondTags = this.showTags.slice(this.maxShowNumber);
            this.showTags.splice(this.maxShowNumber);
            this.cdr.detectChanges();
        }
        else {
            this.showMore = false;
        }
    }
    removeTag($event, tag, index) {
        this.tagDelete.emit({ tag: tag, index: index, event: $event });
    }
}
TagsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TagsComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
TagsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: TagsComponent, selector: "d-tags", inputs: { tags: "tags", displayProperty: "displayProperty", deletable: "deletable", mode: "mode", titleProperty: "titleProperty", hideBeyondTags: "hideBeyondTags" }, outputs: { tagDelete: "tagDelete" }, queries: [{ propertyName: "customViewTemplate", first: true, predicate: TemplateRef, descendants: true }], viewQueries: [{ propertyName: "tagsElement", first: true, predicate: ["tagsElement"], descendants: true }, { propertyName: "viewChildren", predicate: ["tagElement"], descendants: true, read: ElementRef }], exportAs: ["Tags"], usesOnChanges: true, ngImport: i0, template: "<div class=\"devui-tags\" #tagsElement>\n  <d-tag\n    #tagElement\n    *ngFor=\"let tag of hideBeyondTags ? showTags : tags; let index = index\"\n    [tag]=\"displayProperty ? tag[displayProperty] : tag\"\n    [mode]=\"mode\"\n    [deletable]=\"deletable\"\n    [checked]=\"tag['checked']\"\n    [labelStyle]=\"tag['labelStyle']\"\n    [customColor]=\"tag['customColor']\"\n    [titleContent]=\"titleProperty ? tag[titleProperty] : displayProperty ? tag[displayProperty] : tag\"\n    [customViewTemplate]=\"customViewTemplate\"\n    (tagDelete)=\"removeTag($event, tag, index)\"\n  >\n  </d-tag>\n  <d-tag\n    *ngIf=\"hideBeyondTags && showMore\"\n    dPopover\n    [content]=\"beyondTagsTpl\"\n    [controlled]=\"true\"\n    [tag]=\"'+ ' + beyondTags.length\"\n    [mode]=\"'checkable'\"\n    [popoverStyle]=\"{ backgroundColor: 'white', color: 'black' }\"\n  ></d-tag>\n</div>\n\n<ng-template #beyondTagsTpl>\n  <div class=\"beyond-tags-wrapper\">\n    <d-tag\n      class=\"beyond-tag-style\"\n      *ngFor=\"let tag of beyondTags; let index = index\"\n      [tag]=\"displayProperty ? tag[displayProperty] : tag\"\n      [mode]=\"mode\"\n      [deletable]=\"deletable\"\n      [checked]=\"tag['checked']\"\n      [labelStyle]=\"tag['labelStyle']\"\n      [customColor]=\"tag['customColor']\"\n      [titleContent]=\"titleProperty ? tag[titleProperty] : displayProperty ? tag[displayProperty] : tag\"\n      [customViewTemplate]=\"customViewTemplate\"\n      (tagDelete)=\"removeTag($event, tag, index)\"\n    >\n    </d-tag>\n  </div>\n</ng-template>\n", styles: [".devui-tags{overflow:hidden;word-wrap:break-word;height:100%;line-height:24px}.beyond-tags-wrapper{max-width:300px;margin-top:8px}.beyond-tags-wrapper .beyond-tag-style{margin-bottom:8px}.beyond-tags-wrapper d-tag:not(:last-of-type){margin-right:8px}d-tag:not(:last-of-type){margin-right:4px}\n"], components: [{ type: i1.TagComponent, selector: "d-tag", inputs: ["tag", "labelStyle", "customColor", "deletable", "titleContent", "mode", "checked", "maxWidth", "customViewTemplate"], outputs: ["tagDelete", "checkedChange"], exportAs: ["Tag"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.PopoverDirective, selector: "[dPopover]", inputs: ["content", "controlled", "position", "showAnimation", "showAnimate", "scrollElement", "appendToBody", "zIndex", "popType", "popMaxWidth", "trigger", "hoverToContent", "hoverDelayTime", "popoverStyle", "mouseEnterDelay", "mouseLeaveDelay", "visible"], exportAs: ["dPopover"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TagsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-tags', exportAs: 'Tags', preserveWhitespaces: false, template: "<div class=\"devui-tags\" #tagsElement>\n  <d-tag\n    #tagElement\n    *ngFor=\"let tag of hideBeyondTags ? showTags : tags; let index = index\"\n    [tag]=\"displayProperty ? tag[displayProperty] : tag\"\n    [mode]=\"mode\"\n    [deletable]=\"deletable\"\n    [checked]=\"tag['checked']\"\n    [labelStyle]=\"tag['labelStyle']\"\n    [customColor]=\"tag['customColor']\"\n    [titleContent]=\"titleProperty ? tag[titleProperty] : displayProperty ? tag[displayProperty] : tag\"\n    [customViewTemplate]=\"customViewTemplate\"\n    (tagDelete)=\"removeTag($event, tag, index)\"\n  >\n  </d-tag>\n  <d-tag\n    *ngIf=\"hideBeyondTags && showMore\"\n    dPopover\n    [content]=\"beyondTagsTpl\"\n    [controlled]=\"true\"\n    [tag]=\"'+ ' + beyondTags.length\"\n    [mode]=\"'checkable'\"\n    [popoverStyle]=\"{ backgroundColor: 'white', color: 'black' }\"\n  ></d-tag>\n</div>\n\n<ng-template #beyondTagsTpl>\n  <div class=\"beyond-tags-wrapper\">\n    <d-tag\n      class=\"beyond-tag-style\"\n      *ngFor=\"let tag of beyondTags; let index = index\"\n      [tag]=\"displayProperty ? tag[displayProperty] : tag\"\n      [mode]=\"mode\"\n      [deletable]=\"deletable\"\n      [checked]=\"tag['checked']\"\n      [labelStyle]=\"tag['labelStyle']\"\n      [customColor]=\"tag['customColor']\"\n      [titleContent]=\"titleProperty ? tag[titleProperty] : displayProperty ? tag[displayProperty] : tag\"\n      [customViewTemplate]=\"customViewTemplate\"\n      (tagDelete)=\"removeTag($event, tag, index)\"\n    >\n    </d-tag>\n  </div>\n</ng-template>\n", styles: [".devui-tags{overflow:hidden;word-wrap:break-word;height:100%;line-height:24px}.beyond-tags-wrapper{max-width:300px;margin-top:8px}.beyond-tags-wrapper .beyond-tag-style{margin-bottom:8px}.beyond-tags-wrapper d-tag:not(:last-of-type){margin-right:8px}d-tag:not(:last-of-type){margin-right:4px}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { tags: [{
                type: Input
            }], displayProperty: [{
                type: Input
            }], deletable: [{
                type: Input
            }], mode: [{
                type: Input
            }], titleProperty: [{
                type: Input
            }], hideBeyondTags: [{
                type: Input
            }], customViewTemplate: [{
                type: ContentChild,
                args: [TemplateRef]
            }], tagsElement: [{
                type: ViewChild,
                args: ['tagsElement']
            }], viewChildren: [{
                type: ViewChildren,
                args: ['tagElement', { read: ElementRef }]
            }], tagDelete: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFncy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kZXZ1aS90YWdzL3RhZ3MuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vZGV2dWkvdGFncy90YWdzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxpQkFBaUIsRUFDakIsU0FBUyxFQUNULFlBQVksRUFDWixVQUFVLEVBQ1YsWUFBWSxFQUNaLEtBQUssRUFHTCxNQUFNLEVBQ04sU0FBUyxFQUVULFdBQVcsRUFDWCxTQUFTLEVBQ1QsWUFBWSxFQUNiLE1BQU0sZUFBZSxDQUFDOzs7OztBQVV2QixNQUFNLE9BQU8sYUFBYTtJQW9DeEIsWUFBb0IsR0FBc0I7UUFBdEIsUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFuQzFDOztXQUVHO1FBQ00sU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUNuQjs7V0FFRztRQUNNLG9CQUFlLEdBQUcsRUFBRSxDQUFDO1FBRTlCOztXQUVHO1FBQ00sY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixTQUFJLEdBQWEsU0FBUyxDQUFDO1FBQzNCLGtCQUFhLEdBQUcsRUFBRSxDQUFDO1FBQ25CLG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBSWhDOztXQUVHO1FBQ08sY0FBUyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFFOUM7O1dBRUc7UUFDSCxhQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ2QsZUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNoQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBR2pCLG1CQUFjLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLGVBQVUsR0FBRyxDQUFDLENBQUM7SUFFOEIsQ0FBQztJQUU5QyxRQUFRO1FBQ04sSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUN0Qyw0RkFBNEY7UUFDNUYsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJ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NUMsWUFBWTt1QkFBQyxXQUFXO2dCQUNDLFdBQVc7c0JBQXBDLFNBQVM7dUJBQUMsYUFBYTtnQkFDMEIsWUFBWTtzQkFBN0QsWUFBWTt1QkFBQyxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFO2dCQUl0QyxTQUFTO3NCQUFsQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gIENvbXBvbmVudCxcbiAgQ29udGVudENoaWxkLFxuICBFbGVtZW50UmVmLFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBPbkNoYW5nZXMsXG4gIE9uSW5pdCxcbiAgT3V0cHV0LFxuICBRdWVyeUxpc3QsXG4gIFNpbXBsZUNoYW5nZXMsXG4gIFRlbXBsYXRlUmVmLFxuICBWaWV3Q2hpbGQsXG4gIFZpZXdDaGlsZHJlblxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElUYWdNb2RlIH0gZnJvbSAnLi90YWcuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZC10YWdzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhZ3MuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90YWdzLmNvbXBvbmVudC5zY3NzJ10sXG4gIGV4cG9ydEFzOiAnVGFncycsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBUYWdzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMge1xuICAvKipcbiAgICog44CQ5b+F6YCJ44CR6K6w5b2V6L6T5YWl55qE5qCH562+XG4gICAqL1xuICBASW5wdXQoKSB0YWdzID0gW107XG4gIC8qKlxuICAgKiDjgJDlj6/pgInjgJHkvb/nlKjnmoTlsZ7mgKflkI1cbiAgICovXG4gIEBJbnB1dCgpIGRpc3BsYXlQcm9wZXJ0eSA9ICcnO1xuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZFxuICAgKi9cbiAgQElucHV0KCkgZGVsZXRhYmxlID0gZmFsc2U7XG4gIEBJbnB1dCgpIG1vZGU6IElUYWdNb2RlID0gJ2RlZmF1bHQnO1xuICBASW5wdXQoKSB0aXRsZVByb3BlcnR5ID0gJyc7XG4gIEBJbnB1dCgpIGhpZGVCZXlvbmRUYWdzID0gZmFsc2U7XG4gIEBDb250ZW50Q2hpbGQoVGVtcGxhdGVSZWYpIGN1c3RvbVZpZXdUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgQFZpZXdDaGlsZCgndGFnc0VsZW1lbnQnKSB0YWdzRWxlbWVudDogRWxlbWVudFJlZjtcbiAgQFZpZXdDaGlsZHJlbigndGFnRWxlbWVudCcsIHsgcmVhZDogRWxlbWVudFJlZiB9KSB2aWV3Q2hpbGRyZW4hOiBRdWVyeUxpc3Q8RWxlbWVudFJlZj47XG4gIC8qKlxuICAgKiB0YWfooqvliKDpmaTlkI7op6blj5FcbiAgICovXG4gIEBPdXRwdXQoKSB0YWdEZWxldGUgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICAvKipcbiAgICog5aSa5qCH562+6LaF5Ye65pi+56S655u45YWz5pWw5o2uXG4gICAqL1xuICBzaG93VGFncyA9IFtdO1xuICBiZXlvbmRUYWdzID0gW107XG4gIHNob3dNb3JlID0gZmFsc2U7XG4gIG1heFNob3dOdW1iZXI6IG51bWJlcjtcbiAgdGFnc0ZhdGhlcldpZHRoOiBudW1iZXI7XG4gIE1PUkVfVEFHX1dJRFRIID0gMzA7XG4gIFRBR19NQVJHSU4gPSA0O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZikge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLm1heFNob3dOdW1iZXIgPSB0aGlzLnRhZ3MubGVuZ3RoO1xuICAgIC8vIFRPRE86IOS9v+eUqGNsb25lRGVlcOWvvOiHtGNhdGVnb3J5LXNlYXJjaOWNoemhv++8jGxvZGFzaC1lc+aKpUlsbGVnYWwgaW52b2NhdGlvbumdnuazleiwg+eUqOmUmeivr++8jOmcgOiwg+afpeWOn+WboO+8jOaagueUqOW+queOr+aWueW8j+abv+S7o+a3seaLt+i0nVxuICAgIHRoaXMudGFncy5mb3JFYWNoKChpdGVtKSA9PiB0aGlzLnNob3dUYWdzLnB1c2godHlwZW9mIGl0ZW0gPT09ICdvYmplY3QnID8geyAuLi5pdGVtIH0gOiBpdGVtKSk7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgaWYgKHRoaXMuaGlkZUJleW9uZFRhZ3MpIHtcbiAgICAgIHRoaXMuY2FsY3VsYXRlSGlkZVRhZ3NTdGF0dXMoKTtcbiAgICB9XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYodGhpcy5oaWRlQmV5b25kVGFncyAmJiBjaGFuZ2VzWyd0YWdzJ10gJiYgIWNoYW5nZXNbJ3RhZ3MnXS5maXJzdENoYW5nZSkge1xuICAgICAgdGhpcy5tYXhTaG93TnVtYmVyID0gdGhpcy50YWdzLmxlbmd0aDtcbiAgICAgIHRoaXMuc2hvd1RhZ3MgPSBbLi4udGhpcy50YWdzXTtcbiAgICAgIHRoaXMuY2FsY3VsYXRlSGlkZVRhZ3NTdGF0dXMoKTtcbiAgICB9XG4gIH1cblxuICBjYWxjdWxhdGVIaWRlVGFnc1N0YXR1cygpIHtcbiAgICB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgdGhpcy50YWdzRmF0aGVyV2lkdGggPSB0aGlzLnRhZ3NFbGVtZW50Lm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7XG4gICAgbGV0IGN1cldpZHRoID0gMDtcbiAgICB0aGlzLnZpZXdDaGlsZHJlbi5mb3JFYWNoKChlbGVtZW50LCBpbmRleCkgPT4ge1xuICAgICAgaWYgKGN1cldpZHRoICsgZWxlbWVudC5uYXRpdmVFbGVtZW50Lm9mZnNldFdpZHRoICsgdGhpcy5UQUdfTUFSR0lOIDwgdGhpcy50YWdzRmF0aGVyV2lkdGggLSB0aGlzLk1PUkVfVEFHX1dJRFRIKSB7XG4gICAgICAgIGN1cldpZHRoICs9IGVsZW1lbnQubmF0aXZlRWxlbWVudC5vZmZzZXRXaWR0aDtcbiAgICAgICAgY3VyV2lkdGggKz0gdGhpcy5UQUdfTUFSR0lOO1xuICAgICAgICB0aGlzLm1heFNob3dOdW1iZXIgPSBpbmRleCArIDE7XG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKHRoaXMubWF4U2hvd051bWJlciAhPT0gdGhpcy50YWdzLmxlbmd0aCkge1xuICAgICAgdGhpcy5zaG93TW9yZSA9IHRydWU7XG4gICAgICB0aGlzLmJleW9uZFRhZ3MgPSB0aGlzLnNob3dUYWdzLnNsaWNlKHRoaXMubWF4U2hvd051bWJlcik7XG4gICAgICB0aGlzLnNob3dUYWdzLnNwbGljZSh0aGlzLm1heFNob3dOdW1iZXIpO1xuICAgICAgdGhpcy5jZHIuZGV0ZWN0Q2hhbmdlcygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNob3dNb3JlID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmVtb3ZlVGFnKCRldmVudCwgdGFnLCBpbmRleCkge1xuICAgIHRoaXMudGFnRGVsZXRlLmVtaXQoeyB0YWc6IHRhZywgaW5kZXg6IGluZGV4LCBldmVudDogJGV2ZW50IH0pO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiZGV2dWktdGFnc1wiICN0YWdzRWxlbWVudD5cbiAgPGQtdGFnXG4gICAgI3RhZ0VsZW1lbnRcbiAgICAqbmdGb3I9XCJsZXQgdGFnIG9mIGhpZGVCZXlvbmRUYWdzID8gc2hvd1RhZ3MgOiB0YWdzOyBsZXQgaW5kZXggPSBpbmRleFwiXG4gICAgW3RhZ109XCJkaXNwbGF5UHJvcGVydHkgPyB0YWdbZGlzcGxheVByb3BlcnR5XSA6IHRhZ1wiXG4gICAgW21vZGVdPVwibW9kZVwiXG4gICAgW2RlbGV0YWJsZV09XCJkZWxldGFibGVcIlxuICAgIFtjaGVja2VkXT1cInRhZ1snY2hlY2tlZCddXCJcbiAgICBbbGFiZWxTdHlsZV09XCJ0YWdbJ2xhYmVsU3R5bGUnXVwiXG4gICAgW2N1c3RvbUNvbG9yXT1cInRhZ1snY3VzdG9tQ29sb3InXVwiXG4gICAgW3RpdGxlQ29udGVudF09XCJ0aXRsZVByb3BlcnR5ID8gdGFnW3RpdGxlUHJvcGVydHldIDogZGlzcGxheVByb3BlcnR5ID8gdGFnW2Rpc3BsYXlQcm9wZXJ0eV0gOiB0YWdcIlxuICAgIFtjdXN0b21WaWV3VGVtcGxhdGVdPVwiY3VzdG9tVmlld1RlbXBsYXRlXCJcbiAgICAodGFnRGVsZXRlKT1cInJlbW92ZVRhZygkZXZlbnQsIHRhZywgaW5kZXgpXCJcbiAgPlxuICA8L2QtdGFnPlxuICA8ZC10YWdcbiAgICAqbmdJZj1cImhpZGVCZXlvbmRUYWdzICYmIHNob3dNb3JlXCJcbiAgICBkUG9wb3ZlclxuICAgIFtjb250ZW50XT1cImJleW9uZFRhZ3NUcGxcIlxuICAgIFtjb250cm9sbGVkXT1cInRydWVcIlxuICAgIFt0YWddPVwiJysgJyArIGJleW9uZFRhZ3MubGVuZ3RoXCJcbiAgICBbbW9kZV09XCInY2hlY2thYmxlJ1wiXG4gICAgW3BvcG92ZXJTdHlsZV09XCJ7IGJhY2tncm91bmRDb2xvcjogJ3doaXRlJywgY29sb3I6ICdibGFjaycgfVwiXG4gID48L2QtdGFnPlxuPC9kaXY+XG5cbjxuZy10ZW1wbGF0ZSAjYmV5b25kVGFnc1RwbD5cbiAgPGRpdiBjbGFzcz1cImJleW9uZC10YWdzLXdyYXBwZXJcIj5cbiAgICA8ZC10YWdcbiAgICAgIGNsYXNzPVwiYmV5b25kLXRhZy1zdHlsZVwiXG4gICAgICAqbmdGb3I9XCJsZXQgdGFnIG9mIGJleW9uZFRhZ3M7IGxldCBpbmRleCA9IGluZGV4XCJcbiAgICAgIFt0YWddPVwiZGlzcGxheVByb3BlcnR5ID8gdGFnW2Rpc3BsYXlQcm9wZXJ0eV0gOiB0YWdcIlxuICAgICAgW21vZGVdPVwibW9kZVwiXG4gICAgICBbZGVsZXRhYmxlXT1cImRlbGV0YWJsZVwiXG4gICAgICBbY2hlY2tlZF09XCJ0YWdbJ2NoZWNrZWQnXVwiXG4gICAgICBbbGFiZWxTdHlsZV09XCJ0YWdbJ2xhYmVsU3R5bGUnXVwiXG4gICAgICBbY3VzdG9tQ29sb3JdPVwidGFnWydjdXN0b21Db2xvciddXCJcbiAgICAgIFt0aXRsZUNvbnRlbnRdPVwidGl0bGVQcm9wZXJ0eSA/IHRhZ1t0aXRsZVByb3BlcnR5XSA6IGRpc3BsYXlQcm9wZXJ0eSA/IHRhZ1tkaXNwbGF5UHJvcGVydHldIDogdGFnXCJcbiAgICAgIFtjdXN0b21WaWV3VGVtcGxhdGVdPVwiY3VzdG9tVmlld1RlbXBsYXRlXCJcbiAgICAgICh0YWdEZWxldGUpPVwicmVtb3ZlVGFnKCRldmVudCwgdGFnLCBpbmRleClcIlxuICAgID5cbiAgICA8L2QtdGFnPlxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+XG4iXX0=