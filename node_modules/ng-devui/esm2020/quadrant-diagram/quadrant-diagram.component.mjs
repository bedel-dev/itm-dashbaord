import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output, TemplateRef } from '@angular/core';
import { QuadrantDiagramService } from './quadrant-diagram.service';
import { DEFAULT_AXIS_CONFIGS, DEFAULT_QUADRANT_CONFIGS, LABEL_SIZE } from './quadrant.config';
import * as i0 from "@angular/core";
import * as i1 from "./quadrant-diagram.service";
import * as i2 from "ng-devui/fullscreen";
import * as i3 from "./quadrant-axis/quadrant-axis.component";
import * as i4 from "./quadrant-region/quadrant-region.component";
import * as i5 from "ng-devui/dragdrop";
import * as i6 from "@angular/common";
export class QuadrantDiagramComponent {
    constructor(quadrantDiagramService) {
        this.quadrantDiagramService = quadrantDiagramService;
        this.axisConfigs = DEFAULT_AXIS_CONFIGS;
        this.quadrantConfigs = DEFAULT_QUADRANT_CONFIGS;
        this.view = {
            height: 900,
            width: 950
        };
        this.labelData = [];
        this.currentLabelSize = 'large';
        this.showQuadrants = true;
        this.dropEvent = new EventEmitter();
        this.zoomInEvent = new EventEmitter();
        this.zoomOutEvent = new EventEmitter();
        this.fullScreenEvent = new EventEmitter();
        this.dropScope = 'default';
        this.showToolbar = true;
        this.isFullScreen = false;
        if (this.diagramId === undefined) {
            const id = QuadrantDiagramComponent.ID_SEED++;
            this.diagramId = 'devui-quadrant-diagram-' + id;
        }
    }
    get id() {
        return this.diagramId;
    }
    ngOnInit() {
        this.initAxisData();
        this.originHeight = this.view.height;
        this.originWidth = this.view.width;
    }
    ngOnChanges(changes) {
        if (changes && (changes['axisConfigs'] || changes['view'])) {
            this.initAxisData();
            this.originHeight = this.view.height;
            this.originWidth = this.view.width;
        }
    }
    launchFullscreen({ isFullscreen }) {
        if (typeof window !== 'undefined' && isFullscreen) {
            this.isFullScreen = isFullscreen;
            this.view = {
                height: window.screen.height,
                width: window.screen.width
            };
            this.initAxisData();
        }
        else {
            this.isFullScreen = isFullscreen;
            this.view = {
                height: this.originHeight,
                width: this.originWidth
            };
            this.initAxisData();
        }
        this.fullScreenEvent.emit(isFullscreen);
    }
    onDrop(e) {
        const xAxisValue = this.quadrantDiagramService.getXAxisValue(this.view, this.axisConfigs, e.nativeEvent.offsetX);
        const yAxisValue = this.quadrantDiagramService.getYAxisValue(this.view, this.axisConfigs, e.nativeEvent.offsetY);
        this.quadrantDiagramService.setListPointerEvents(this.diagramId, '');
        this.quadrantDiagramService.hideAxisLine(this.diagramId);
        this.dropEvent.emit({ dragData: e.dragData, xAxisValue: xAxisValue, yAxisValue: yAxisValue });
    }
    initAxisData() {
        const axisConfigKeys = Object.keys(DEFAULT_AXIS_CONFIGS);
        for (let i = 0; i < axisConfigKeys.length; i++) {
            if (this.axisConfigs[axisConfigKeys[i]] === undefined) {
                this.axisConfigs[axisConfigKeys[i]] = DEFAULT_AXIS_CONFIGS[axisConfigKeys[i]];
            }
        }
        this.axisConfigs.axisOrigin = {
            x: this.axisConfigs.originPosition.left,
            y: this.view.height - this.axisConfigs.originPosition.bottom
        };
        this.axisConfigs.axisTop = this.axisConfigs.axisMargin;
        this.axisConfigs.axisRight = this.view.width - this.axisConfigs.axisMargin;
        this.axisConfigs.axisWidth = this.axisConfigs.axisRight - this.axisConfigs.axisOrigin.x;
        this.axisConfigs.axisHeight = this.axisConfigs.axisOrigin.y - this.axisConfigs.axisTop;
        this.axisConfigs.yAxisTicksNum = this.axisConfigs.yAxisRange.max - this.axisConfigs.yAxisRange.min;
        this.axisConfigs.xAxisTicksNum = this.axisConfigs.xAxisRange.max - this.axisConfigs.xAxisRange.min;
        this.axisConfigs.xTickSpacing = this.axisConfigs.axisWidth / this.axisConfigs.xAxisTicksNum;
        this.axisConfigs.yTickSpacing = this.axisConfigs.axisHeight / this.axisConfigs.yAxisTicksNum;
    }
    zoomOut(size) {
        const index = LABEL_SIZE.indexOf(size);
        if (index > 0) {
            this.currentLabelSize = LABEL_SIZE[index - 1];
        }
        this.zoomOutEvent.emit(this.currentLabelSize);
    }
    zoomIn(size) {
        const index = LABEL_SIZE.indexOf(size);
        if (index < LABEL_SIZE.length - 1) {
            this.currentLabelSize = LABEL_SIZE[index + 1];
        }
        this.zoomInEvent.emit(this.currentLabelSize);
    }
    dragOverEvent(e) {
        this.quadrantDiagramService.setListPointerEvents(this.diagramId, 'none');
        this.quadrantDiagramService.showAxisLine(e.offsetX, e.offsetY, this.diagramId, this.view, this.axisConfigs);
    }
    handleDropOut() {
        this.quadrantDiagramService.setListPointerEvents(this.diagramId, '');
        this.quadrantDiagramService.hideAxisLine(this.diagramId);
    }
}
QuadrantDiagramComponent.ID_SEED = 0;
QuadrantDiagramComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: QuadrantDiagramComponent, deps: [{ token: i1.QuadrantDiagramService }], target: i0.ɵɵFactoryTarget.Component });
QuadrantDiagramComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: QuadrantDiagramComponent, selector: "d-quadrant-diagram", inputs: { axisConfigs: "axisConfigs", quadrantConfigs: "quadrantConfigs", view: "view", normalLabelTemplate: "normalLabelTemplate", largeLabelTemplate: "largeLabelTemplate", smallLabelTemplate: "smallLabelTemplate", labelData: "labelData", currentLabelSize: "currentLabelSize", showQuadrants: "showQuadrants", diagramId: "diagramId", dropScope: "dropScope", showToolbar: "showToolbar" }, outputs: { dropEvent: "dropEvent", zoomInEvent: "zoomInEvent", zoomOutEvent: "zoomOutEvent", fullScreenEvent: "fullScreenEvent" }, host: { properties: { "attr.id": "this.id" } }, usesOnChanges: true, ngImport: i0, template: "<d-fullscreen (fullscreenLaunch)=\"launchFullscreen($event)\" [zIndex]=\"1001\">\n  <div fullscreen-target>\n    <div\n      [id]=\"diagramId\"\n      dDroppable\n      [dropScope]=\"dropScope\"\n      (dragOverEvent)=\"dragOverEvent($event)\"\n      (dropEvent)=\"onDrop($event)\"\n      (dragleave)=\"handleDropOut()\"\n      class=\"devui-quadrant-diagram\"\n      [style.height.px]=\"view?.height\"\n      [style.width.px]=\"view?.width\"\n    >\n      <div *ngIf=\"showToolbar\" class=\"devui-control-zoom-container\" [style.right.px]=\"axisConfigs.axisMargin\">\n        <div class=\"devui-icon-display\" [class.disabled]=\"currentLabelSize === 'small'\" (click)=\"zoomOut(currentLabelSize)\">\n          <svg\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <polygon fill=\"#293040\" points=\"14 7 14 9 2 9 2 7\"></polygon>\n            </g>\n          </svg>\n        </div>\n        <div class=\"devui-icon-display\" [class.disabled]=\"currentLabelSize === 'large'\" (click)=\"zoomIn(currentLabelSize)\">\n          <svg\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <polygon fill=\"#293040\" points=\"7 7 7 2 9 2 9 7 14 7 14 9 9 9 9 14 7 14 7 9 2 9 2 7\"></polygon>\n            </g>\n          </svg>\n        </div>\n        <div fullscreen-launch class=\"devui-icon-display\">\n          <svg\n            *ngIf=\"!isFullScreen\"\n            width=\"14px\"\n            height=\"14px\"\n            viewBox=\"0 0 14 14\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g transform=\"translate(-1482.000000, -1285.000000)\" fill=\"#293040\" fill-rule=\"nonzero\">\n                <g transform=\"translate(1481.000000, 1284.000000)\">\n                  <path\n                    d=\"M15,1 L15,6 L13,6 L13,3 L10,3 L10,1 L15,1 Z M15,10 L15,15 L10,15 L10,13 L13,13 L13,10 L15,10\n                Z M1,15 L1,10 L3,10 L3,13 L6,13 L6,15 L1,15 Z M1,1 L6,1 L6,3 L3,3 L3,6 L1,6 L1,1 Z\"\n                    id=\"Combined-Shape\"\n                  ></path>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <svg\n            *ngIf=\"isFullScreen\"\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M10,6 L10,1 L12,1 L12,4 L15,4 L15,6 L10,6 Z M6,1 L6,6 L1,6 L1,4 L4,4 L4,1 L6,1 Z M10,15 L10,10 L15,10 L15,12\n        L12,12 L12,15 L10,15 Z M6,10 L6,15 L4,15 L4,12 L1,12 L1,10 L6,10 Z\"\n                id=\"\u5F62\u72B6\"\n                fill=\"#293040\"\n                fill-rule=\"nonzero\"\n              ></path>\n            </g>\n          </svg>\n        </div>\n      </div>\n      <d-quadrant-axis [diagramId]=\"diagramId\" [view]=\"view\" [axisConfigs]=\"axisConfigs\"></d-quadrant-axis>\n      <d-quadrant-region\n        [view]=\"view\"\n        [labelData]=\"labelData\"\n        [axisConfigs]=\"axisConfigs\"\n        [quadrantConfigs]=\"quadrantConfigs\"\n        [currentLabelSize]=\"currentLabelSize\"\n        [showQuadrants]=\"showQuadrants\"\n        [dropScope]=\"dropScope\"\n        [diagramId]=\"diagramId\"\n      ></d-quadrant-region>\n    </div>\n  </div>\n</d-fullscreen>\n", styles: [".devui-quadrant-diagram{position:relative}.devui-control-zoom-container{display:flex;align-items:center;justify-content:space-between;padding:0 8px;position:absolute;top:-4px;height:32px;width:96px;box-shadow:0 1px 4px rgba(37,43,58,.2);box-shadow:var(--devui-shadow-length-base, 0 1px 4px 0) var(--devui-shadow, rgba(37, 43, 58, .2));background:#ffffff;background:var(--devui-base-bg, #ffffff);z-index:10}.devui-icon-display{cursor:pointer}.devui-icon-display svg g polygon,.devui-icon-display svg g g,.devui-icon-display svg g path{fill:#71757f;fill:var(--devui-icon-text, #71757f)}.devui-icon-display:hover svg g polygon,.devui-icon-display:hover svg g g,.devui-icon-display:hover svg g path{fill:#5e7ce0;fill:var(--devui-brand, #5e7ce0)}.disabled{cursor:not-allowed}.disabled svg g polygon,.disabled svg g g,.disabled svg g path{fill:#cfd0d3;fill:var(--devui-disabled-text, #cfd0d3)}\n"], components: [{ type: i2.FullscreenComponent, selector: "d-fullscreen", inputs: ["mode", "zIndex", "target"], outputs: ["fullscreenLaunch"] }, { type: i3.QuadrantDiagramAxisComponent, selector: "d-quadrant-axis", inputs: ["axisConfigs", "view", "diagramId"] }, { type: i4.QuadrantRegionComponent, selector: "d-quadrant-region", inputs: ["quadrantConfigs", "axisConfigs", "view", "labelData", "normalLabelTemplate", "largeLabelTemplate", "smallLabelTemplate", "currentLabelSize", "showQuadrants", "dropScope", "diagramId"] }], directives: [{ type: i5.DroppableDirective, selector: "[dDroppable]", inputs: ["dragOverClass", "dropScope", "placeholderTag", "placeholderStyle", "placeholderText", "allowDropOnItem", "dragOverItemClass", "nestingTargetRect", "switchWhileCrossEdge", "defaultDropPosition", "dropSortCountSelector", "dropSortVirtualScrollOption"], outputs: ["dragEnterEvent", "dragOverEvent", "dragLeaveEvent", "dropEvent"] }, { type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: QuadrantDiagramComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-quadrant-diagram', changeDetection: ChangeDetectionStrategy.OnPush, template: "<d-fullscreen (fullscreenLaunch)=\"launchFullscreen($event)\" [zIndex]=\"1001\">\n  <div fullscreen-target>\n    <div\n      [id]=\"diagramId\"\n      dDroppable\n      [dropScope]=\"dropScope\"\n      (dragOverEvent)=\"dragOverEvent($event)\"\n      (dropEvent)=\"onDrop($event)\"\n      (dragleave)=\"handleDropOut()\"\n      class=\"devui-quadrant-diagram\"\n      [style.height.px]=\"view?.height\"\n      [style.width.px]=\"view?.width\"\n    >\n      <div *ngIf=\"showToolbar\" class=\"devui-control-zoom-container\" [style.right.px]=\"axisConfigs.axisMargin\">\n        <div class=\"devui-icon-display\" [class.disabled]=\"currentLabelSize === 'small'\" (click)=\"zoomOut(currentLabelSize)\">\n          <svg\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <polygon fill=\"#293040\" points=\"14 7 14 9 2 9 2 7\"></polygon>\n            </g>\n          </svg>\n        </div>\n        <div class=\"devui-icon-display\" [class.disabled]=\"currentLabelSize === 'large'\" (click)=\"zoomIn(currentLabelSize)\">\n          <svg\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <polygon fill=\"#293040\" points=\"7 7 7 2 9 2 9 7 14 7 14 9 9 9 9 14 7 14 7 9 2 9 2 7\"></polygon>\n            </g>\n          </svg>\n        </div>\n        <div fullscreen-launch class=\"devui-icon-display\">\n          <svg\n            *ngIf=\"!isFullScreen\"\n            width=\"14px\"\n            height=\"14px\"\n            viewBox=\"0 0 14 14\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g transform=\"translate(-1482.000000, -1285.000000)\" fill=\"#293040\" fill-rule=\"nonzero\">\n                <g transform=\"translate(1481.000000, 1284.000000)\">\n                  <path\n                    d=\"M15,1 L15,6 L13,6 L13,3 L10,3 L10,1 L15,1 Z M15,10 L15,15 L10,15 L10,13 L13,13 L13,10 L15,10\n                Z M1,15 L1,10 L3,10 L3,13 L6,13 L6,15 L1,15 Z M1,1 L6,1 L6,3 L3,3 L3,6 L1,6 L1,1 Z\"\n                    id=\"Combined-Shape\"\n                  ></path>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <svg\n            *ngIf=\"isFullScreen\"\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M10,6 L10,1 L12,1 L12,4 L15,4 L15,6 L10,6 Z M6,1 L6,6 L1,6 L1,4 L4,4 L4,1 L6,1 Z M10,15 L10,10 L15,10 L15,12\n        L12,12 L12,15 L10,15 Z M6,10 L6,15 L4,15 L4,12 L1,12 L1,10 L6,10 Z\"\n                id=\"\u5F62\u72B6\"\n                fill=\"#293040\"\n                fill-rule=\"nonzero\"\n              ></path>\n            </g>\n          </svg>\n        </div>\n      </div>\n      <d-quadrant-axis [diagramId]=\"diagramId\" [view]=\"view\" [axisConfigs]=\"axisConfigs\"></d-quadrant-axis>\n      <d-quadrant-region\n        [view]=\"view\"\n        [labelData]=\"labelData\"\n        [axisConfigs]=\"axisConfigs\"\n        [quadrantConfigs]=\"quadrantConfigs\"\n        [currentLabelSize]=\"currentLabelSize\"\n        [showQuadrants]=\"showQuadrants\"\n        [dropScope]=\"dropScope\"\n        [diagramId]=\"diagramId\"\n      ></d-quadrant-region>\n    </div>\n  </div>\n</d-fullscreen>\n", styles: [".devui-quadrant-diagram{position:relative}.devui-control-zoom-container{display:flex;align-items:center;justify-content:space-between;padding:0 8px;position:absolute;top:-4px;height:32px;width:96px;box-shadow:0 1px 4px rgba(37,43,58,.2);box-shadow:var(--devui-shadow-length-base, 0 1px 4px 0) var(--devui-shadow, rgba(37, 43, 58, .2));background:#ffffff;background:var(--devui-base-bg, #ffffff);z-index:10}.devui-icon-display{cursor:pointer}.devui-icon-display svg g polygon,.devui-icon-display svg g g,.devui-icon-display svg g path{fill:#71757f;fill:var(--devui-icon-text, #71757f)}.devui-icon-display:hover svg g polygon,.devui-icon-display:hover svg g g,.devui-icon-display:hover svg g path{fill:#5e7ce0;fill:var(--devui-brand, #5e7ce0)}.disabled{cursor:not-allowed}.disabled svg g polygon,.disabled svg g g,.disabled svg g path{fill:#cfd0d3;fill:var(--devui-disabled-text, #cfd0d3)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.QuadrantDiagramService }]; }, propDecorators: { axisConfigs: [{
                type: Input
            }], quadrantConfigs: [{
                type: Input
            }], view: [{
                type: Input
            }], normalLabelTemplate: [{
                type: Input
            }], largeLabelTemplate: [{
                type: Input
            }], smallLabelTemplate: [{
                type: Input
            }], labelData: [{
                type: Input
            }], currentLabelSize: [{
                type: Input
            }], showQuadrants: [{
                type: Input
            }], diagramId: [{
                type: Input
            }], dropEvent: [{
                type: Output
            }], zoomInEvent: [{
                type: Output
            }], zoomOutEvent: [{
                type: Output
            }], fullScreenEvent: [{
                type: Output
            }], dropScope: [{
                type: Input
            }], showToolbar: [{
                type: Input
            }], id: [{
                type: HostBinding,
                args: ['attr.id']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVhZHJhbnQtZGlhZ3JhbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kZXZ1aS9xdWFkcmFudC1kaWFncmFtL3F1YWRyYW50LWRpYWdyYW0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vZGV2dWkvcXVhZHJhbnQtZGlhZ3JhbS9xdWFkcmFudC1kaWFncmFtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFDN0QsS0FBSyxFQUFxQixNQUFNLEVBQWlCLFdBQVcsRUFDN0QsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFcEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLHdCQUF3QixFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7OztBQVEvRixNQUFNLE9BQU8sd0JBQXdCO0lBNEJuQyxZQUFvQixzQkFBOEM7UUFBOUMsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF3QjtRQTFCekQsZ0JBQVcsR0FBaUIsb0JBQW9CLENBQUM7UUFDakQsb0JBQWUsR0FBNEIsd0JBQXdCLENBQUM7UUFDcEUsU0FBSSxHQUFpQjtZQUM1QixNQUFNLEVBQUUsR0FBRztZQUNYLEtBQUssRUFBRSxHQUFHO1NBQ1gsQ0FBQztRQUlPLGNBQVMsR0FBNkIsRUFBRSxDQUFDO1FBQ3pDLHFCQUFnQixHQUFjLE9BQU8sQ0FBQztRQUN0QyxrQkFBYSxHQUFHLElBQUksQ0FBQztRQUVwQixjQUFTLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFDdkQsZ0JBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUN6RCxpQkFBWSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBQzFELG9CQUFlLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFDOUQs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QUFLO2dCQUtGLEVBQUU7c0JBREwsV0FBVzt1QkFBQyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBIb3N0QmluZGluZyxcbiAgSW5wdXQsIE9uQ2hhbmdlcywgT25Jbml0LCBPdXRwdXQsIFNpbXBsZUNoYW5nZXMsIFRlbXBsYXRlUmVmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUXVhZHJhbnREaWFncmFtU2VydmljZSB9IGZyb20gJy4vcXVhZHJhbnQtZGlhZ3JhbS5zZXJ2aWNlJztcbmltcG9ydCB7IElBeGlzQ29uZmlncywgSUxhYmVsRGF0YUNvbmZpZ3MsIElRdWFkcmFudENvbmZpZ3MsIElWaWV3Q29uZmlncywgbGFiZWxTaXplIH0gZnJvbSAnLi9xdWFkcmFudC1kaWFncmFtLnR5cGUnO1xuaW1wb3J0IHsgREVGQVVMVF9BWElTX0NPTkZJR1MsIERFRkFVTFRfUVVBRFJBTlRfQ09ORklHUywgTEFCRUxfU0laRSB9IGZyb20gJy4vcXVhZHJhbnQuY29uZmlnJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZC1xdWFkcmFudC1kaWFncmFtJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHRlbXBsYXRlVXJsOiAnLi9xdWFkcmFudC1kaWFncmFtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcXVhZHJhbnQtZGlhZ3JhbS5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBRdWFkcmFudERpYWdyYW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIHN0YXRpYyBJRF9TRUVEID0gMDtcbiAgQElucHV0KCkgYXhpc0NvbmZpZ3M6IElBeGlzQ29uZmlncyA9IERFRkFVTFRfQVhJU19DT05GSUdTO1xuICBASW5wdXQoKSBxdWFkcmFudENvbmZpZ3M6IEFycmF5PElRdWFkcmFudENvbmZpZ3M+ID0gREVGQVVMVF9RVUFEUkFOVF9DT05GSUdTO1xuICBASW5wdXQoKSB2aWV3OiBJVmlld0NvbmZpZ3MgPSB7XG4gICAgaGVpZ2h0OiA5MDAsXG4gICAgd2lkdGg6IDk1MFxuICB9O1xuICBASW5wdXQoKSBub3JtYWxMYWJlbFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICBASW5wdXQoKSBsYXJnZUxhYmVsVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gIEBJbnB1dCgpIHNtYWxsTGFiZWxUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgQElucHV0KCkgbGFiZWxEYXRhOiBBcnJheTxJTGFiZWxEYXRhQ29uZmlncz4gPSBbXTtcbiAgQElucHV0KCkgY3VycmVudExhYmVsU2l6ZTogbGFiZWxTaXplID0gJ2xhcmdlJztcbiAgQElucHV0KCkgc2hvd1F1YWRyYW50cyA9IHRydWU7XG4gIEBJbnB1dCgpIGRpYWdyYW1JZDtcbiAgQE91dHB1dCgpIGRyb3BFdmVudDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQE91dHB1dCgpIHpvb21JbkV2ZW50OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KCkgem9vbU91dEV2ZW50OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KCkgZnVsbFNjcmVlbkV2ZW50OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBASW5wdXQoKSBkcm9wU2NvcGUgPSAnZGVmYXVsdCc7XG4gIEBJbnB1dCgpIHNob3dUb29sYmFyID0gdHJ1ZTtcbiAgcHJpdmF0ZSBvcmlnaW5IZWlnaHQ7XG4gIHByaXZhdGUgb3JpZ2luV2lkdGg7XG4gIGlzRnVsbFNjcmVlbiA9IGZhbHNlO1xuICBASG9zdEJpbmRpbmcoJ2F0dHIuaWQnKVxuICBnZXQgaWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGlhZ3JhbUlkO1xuICB9XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcXVhZHJhbnREaWFncmFtU2VydmljZTogUXVhZHJhbnREaWFncmFtU2VydmljZSkge1xuICAgIGlmICh0aGlzLmRpYWdyYW1JZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zdCBpZCA9IFF1YWRyYW50RGlhZ3JhbUNvbXBvbmVudC5JRF9TRUVEKys7XG4gICAgICB0aGlzLmRpYWdyYW1JZCA9ICdkZXZ1aS1xdWFkcmFudC1kaWFncmFtLScgKyBpZDtcbiAgICB9XG4gIH1cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5pbml0QXhpc0RhdGEoKTtcbiAgICB0aGlzLm9yaWdpbkhlaWdodCA9IHRoaXMudmlldy5oZWlnaHQ7XG4gICAgdGhpcy5vcmlnaW5XaWR0aCA9IHRoaXMudmlldy53aWR0aDtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoY2hhbmdlcyAmJiAoY2hhbmdlc1snYXhpc0NvbmZpZ3MnXSB8fCBjaGFuZ2VzWyd2aWV3J10pKSB7XG4gICAgICB0aGlzLmluaXRBeGlzRGF0YSgpO1xuICAgICAgdGhpcy5vcmlnaW5IZWlnaHQgPSB0aGlzLnZpZXcuaGVpZ2h0O1xuICAgICAgdGhpcy5vcmlnaW5XaWR0aCA9IHRoaXMudmlldy53aWR0aDtcbiAgICB9XG4gIH1cblxuICBsYXVuY2hGdWxsc2NyZWVuKHsgaXNGdWxsc2NyZWVuIH0pIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgaXNGdWxsc2NyZWVuKSB7XG4gICAgICB0aGlzLmlzRnVsbFNjcmVlbiA9IGlzRnVsbHNjcmVlbjtcbiAgICAgIHRoaXMudmlldyA9IHtcbiAgICAgICAgaGVpZ2h0OiB3aW5kb3cuc2NyZWVuLmhlaWdodCxcbiAgICAgICAgd2lkdGg6IHdpbmRvdy5zY3JlZW4ud2lkdGhcbiAgICAgIH07XG4gICAgICB0aGlzLmluaXRBeGlzRGF0YSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmlzRnVsbFNjcmVlbiA9IGlzRnVsbHNjcmVlbjtcbiAgICAgIHRoaXMudmlldyA9IHtcbiAgICAgICAgaGVpZ2h0OiB0aGlzLm9yaWdpbkhlaWdodCxcbiAgICAgICAgd2lkdGg6IHRoaXMub3JpZ2luV2lkdGhcbiAgICAgIH07XG4gICAgICB0aGlzLmluaXRBeGlzRGF0YSgpO1xuICAgIH1cbiAgICB0aGlzLmZ1bGxTY3JlZW5FdmVudC5lbWl0KGlzRnVsbHNjcmVlbik7XG4gIH1cblxuICBvbkRyb3AoZTogYW55KSB7XG4gICAgY29uc3QgeEF4aXNWYWx1ZSA9IHRoaXMucXVhZHJhbnREaWFncmFtU2VydmljZS5nZXRYQXhpc1ZhbHVlKHRoaXMudmlldywgdGhpcy5heGlzQ29uZmlncywgZS5uYXRpdmVFdmVudC5vZmZzZXRYKTtcbiAgICBjb25zdCB5QXhpc1ZhbHVlID0gdGhpcy5xdWFkcmFudERpYWdyYW1TZXJ2aWNlLmdldFlBeGlzVmFsdWUodGhpcy52aWV3LCB0aGlzLmF4aXNDb25maWdzLCBlLm5hdGl2ZUV2ZW50Lm9mZnNldFkpO1xuICAgIHRoaXMucXVhZHJhbnREaWFncmFtU2VydmljZS5zZXRMaXN0UG9pbnRlckV2ZW50cyh0aGlzLmRpYWdyYW1JZCwgJycpO1xuICAgIHRoaXMucXVhZHJhbnREaWFncmFtU2VydmljZS5oaWRlQXhpc0xpbmUodGhpcy5kaWFncmFtSWQpO1xuICAgIHRoaXMuZHJvcEV2ZW50LmVtaXQoeyBkcmFnRGF0YTogZS5kcmFnRGF0YSwgeEF4aXNWYWx1ZTogeEF4aXNWYWx1ZSwgeUF4aXNWYWx1ZTogeUF4aXNWYWx1ZSB9KTtcbiAgfVxuXG4gIGluaXRBeGlzRGF0YSgpIHtcbiAgICBjb25zdCBheGlzQ29uZmlnS2V5cyA9IE9iamVjdC5rZXlzKERFRkFVTFRfQVhJU19DT05GSUdTKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGF4aXNDb25maWdLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodGhpcy5heGlzQ29uZmlnc1theGlzQ29uZmlnS2V5c1tpXV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aGlzLmF4aXNDb25maWdzW2F4aXNDb25maWdLZXlzW2ldXSA9IERFRkFVTFRfQVhJU19DT05GSUdTW2F4aXNDb25maWdLZXlzW2ldXTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5heGlzQ29uZmlncy5heGlzT3JpZ2luID0ge1xuICAgICAgeDogdGhpcy5heGlzQ29uZmlncy5vcmlnaW5Qb3NpdGlvbi5sZWZ0LFxuICAgICAgeTogdGhpcy52aWV3LmhlaWdodCAtIHRoaXMuYXhpc0NvbmZpZ3Mub3JpZ2luUG9zaXRpb24uYm90dG9tXG4gICAgfTtcbiAgICB0aGlzLmF4aXNDb25maWdzLmF4aXNUb3AgPSB0aGlzLmF4aXNDb25maWdzLmF4aXNNYXJnaW47XG4gICAgdGhpcy5heGlzQ29uZmlncy5heGlzUmlnaHQgPSB0aGlzLnZpZXcud2lkdGggLSB0aGlzLmF4aXNDb25maWdzLmF4aXNNYXJnaW47XG4gICAgdGhpcy5heGlzQ29uZmlncy5heGlzV2lkdGggPSB0aGlzLmF4aXNDb25maWdzLmF4aXNSaWdodCAtIHRoaXMuYXhpc0NvbmZpZ3MuYXhpc09yaWdpbi54O1xuICAgIHRoaXMuYXhpc0NvbmZpZ3MuYXhpc0hlaWdodCA9IHRoaXMuYXhpc0NvbmZpZ3MuYXhpc09yaWdpbi55IC0gdGhpcy5heGlzQ29uZmlncy5heGlzVG9wO1xuICAgIHRoaXMuYXhpc0NvbmZpZ3MueUF4aXNUaWNrc051bSA9IHRoaXMuYXhpc0NvbmZpZ3MueUF4aXNSYW5nZS5tYXggLSB0aGlzLmF4aXNDb25maWdzLnlBeGlzUmFuZ2UubWluO1xuICAgIHRoaXMuYXhpc0NvbmZpZ3MueEF4aXNUaWNrc051bSA9IHRoaXMuYXhpc0NvbmZpZ3MueEF4aXNSYW5nZS5tYXggLSB0aGlzLmF4aXNDb25maWdzLnhBeGlzUmFuZ2UubWluO1xuICAgIHRoaXMuYXhpc0NvbmZpZ3MueFRpY2tTcGFjaW5nID0gdGhpcy5heGlzQ29uZmlncy5heGlzV2lkdGggLyB0aGlzLmF4aXNDb25maWdzLnhBeGlzVGlja3NOdW07XG4gICAgdGhpcy5heGlzQ29uZmlncy55VGlja1NwYWNpbmcgPSB0aGlzLmF4aXNDb25maWdzLmF4aXNIZWlnaHQgLyB0aGlzLmF4aXNDb25maWdzLnlBeGlzVGlja3NOdW07XG4gIH1cblxuICB6b29tT3V0KHNpemUpIHtcbiAgICBjb25zdCBpbmRleCA9IExBQkVMX1NJWkUuaW5kZXhPZihzaXplKTtcbiAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICB0aGlzLmN1cnJlbnRMYWJlbFNpemUgPSBMQUJFTF9TSVpFW2luZGV4IC0gMV0gYXMgbGFiZWxTaXplO1xuICAgIH1cbiAgICB0aGlzLnpvb21PdXRFdmVudC5lbWl0KHRoaXMuY3VycmVudExhYmVsU2l6ZSk7XG4gIH1cblxuICB6b29tSW4oc2l6ZSkge1xuICAgIGNvbnN0IGluZGV4ID0gTEFCRUxfU0laRS5pbmRleE9mKHNpemUpO1xuICAgIGlmIChpbmRleCA8IExBQkVMX1NJWkUubGVuZ3RoIC0gMSkge1xuICAgICAgdGhpcy5jdXJyZW50TGFiZWxTaXplID0gTEFCRUxfU0laRVtpbmRleCArIDFdIGFzIGxhYmVsU2l6ZTtcbiAgICB9XG4gICAgdGhpcy56b29tSW5FdmVudC5lbWl0KHRoaXMuY3VycmVudExhYmVsU2l6ZSk7XG4gIH1cblxuICBkcmFnT3ZlckV2ZW50KGUpIHtcbiAgICB0aGlzLnF1YWRyYW50RGlhZ3JhbVNlcnZpY2Uuc2V0TGlzdFBvaW50ZXJFdmVudHModGhpcy5kaWFncmFtSWQsICdub25lJyk7XG4gICAgdGhpcy5xdWFkcmFudERpYWdyYW1TZXJ2aWNlLnNob3dBeGlzTGluZShlLm9mZnNldFgsIGUub2Zmc2V0WSwgdGhpcy5kaWFncmFtSWQsIHRoaXMudmlldywgdGhpcy5heGlzQ29uZmlncyk7XG4gIH1cblxuICBoYW5kbGVEcm9wT3V0KCkge1xuICAgIHRoaXMucXVhZHJhbnREaWFncmFtU2VydmljZS5zZXRMaXN0UG9pbnRlckV2ZW50cyh0aGlzLmRpYWdyYW1JZCwgJycpO1xuICAgIHRoaXMucXVhZHJhbnREaWFncmFtU2VydmljZS5oaWRlQXhpc0xpbmUodGhpcy5kaWFncmFtSWQpO1xuICB9XG59XG4iLCI8ZC1mdWxsc2NyZWVuIChmdWxsc2NyZWVuTGF1bmNoKT1cImxhdW5jaEZ1bGxzY3JlZW4oJGV2ZW50KVwiIFt6SW5kZXhdPVwiMTAwMVwiPlxuICA8ZGl2IGZ1bGxzY3JlZW4tdGFyZ2V0PlxuICAgIDxkaXZcbiAgICAgIFtpZF09XCJkaWFncmFtSWRcIlxuICAgICAgZERyb3BwYWJsZVxuICAgICAgW2Ryb3BTY29wZV09XCJkcm9wU2NvcGVcIlxuICAgICAgKGRyYWdPdmVyRXZlbnQpPVwiZHJhZ092ZXJFdmVudCgkZXZlbnQpXCJcbiAgICAgIChkcm9wRXZlbnQpPVwib25Ecm9wKCRldmVudClcIlxuICAgICAgKGRyYWdsZWF2ZSk9XCJoYW5kbGVEcm9wT3V0KClcIlxuICAgICAgY2xhc3M9XCJkZXZ1aS1xdWFkcmFudC1kaWFncmFtXCJcbiAgICAgIFtzdHlsZS5oZWlnaHQucHhdPVwidmlldz8uaGVpZ2h0XCJcbiAgICAgIFtzdHlsZS53aWR0aC5weF09XCJ2aWV3Py53aWR0aFwiXG4gICAgPlxuICAgICAgPGRpdiAqbmdJZj1cInNob3dUb29sYmFyXCIgY2xhc3M9XCJkZXZ1aS1jb250cm9sLXpvb20tY29udGFpbmVyXCIgW3N0eWxlLnJpZ2h0LnB4XT1cImF4aXNDb25maWdzLmF4aXNNYXJnaW5cIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImRldnVpLWljb24tZGlzcGxheVwiIFtjbGFzcy5kaXNhYmxlZF09XCJjdXJyZW50TGFiZWxTaXplID09PSAnc21hbGwnXCIgKGNsaWNrKT1cInpvb21PdXQoY3VycmVudExhYmVsU2l6ZSlcIj5cbiAgICAgICAgICA8c3ZnXG4gICAgICAgICAgICB3aWR0aD1cIjE2cHhcIlxuICAgICAgICAgICAgaGVpZ2h0PVwiMTZweFwiXG4gICAgICAgICAgICB2aWV3Qm94PVwiMCAwIDE2IDE2XCJcbiAgICAgICAgICAgIHZlcnNpb249XCIxLjFcIlxuICAgICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgICAgICB4bWxuczp4bGluaz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxnIHN0cm9rZT1cIm5vbmVcIiBzdHJva2Utd2lkdGg9XCIxXCIgZmlsbD1cIm5vbmVcIiBmaWxsLXJ1bGU9XCJldmVub2RkXCI+XG4gICAgICAgICAgICAgIDxwb2x5Z29uIGZpbGw9XCIjMjkzMDQwXCIgcG9pbnRzPVwiMTQgNyAxNCA5IDIgOSAyIDdcIj48L3BvbHlnb24+XG4gICAgICAgICAgICA8L2c+XG4gICAgICAgICAgPC9zdmc+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZGV2dWktaWNvbi1kaXNwbGF5XCIgW2NsYXNzLmRpc2FibGVkXT1cImN1cnJlbnRMYWJlbFNpemUgPT09ICdsYXJnZSdcIiAoY2xpY2spPVwiem9vbUluKGN1cnJlbnRMYWJlbFNpemUpXCI+XG4gICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgd2lkdGg9XCIxNnB4XCJcbiAgICAgICAgICAgIGhlaWdodD1cIjE2cHhcIlxuICAgICAgICAgICAgdmlld0JveD1cIjAgMCAxNiAxNlwiXG4gICAgICAgICAgICB2ZXJzaW9uPVwiMS4xXCJcbiAgICAgICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgICAgICAgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZyBzdHJva2U9XCJub25lXCIgc3Ryb2tlLXdpZHRoPVwiMVwiIGZpbGw9XCJub25lXCIgZmlsbC1ydWxlPVwiZXZlbm9kZFwiPlxuICAgICAgICAgICAgICA8cG9seWdvbiBmaWxsPVwiIzI5MzA0MFwiIHBvaW50cz1cIjcgNyA3IDIgOSAyIDkgNyAxNCA3IDE0IDkgOSA5IDkgMTQgNyAxNCA3IDkgMiA5IDIgN1wiPjwvcG9seWdvbj5cbiAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgZnVsbHNjcmVlbi1sYXVuY2ggY2xhc3M9XCJkZXZ1aS1pY29uLWRpc3BsYXlcIj5cbiAgICAgICAgICA8c3ZnXG4gICAgICAgICAgICAqbmdJZj1cIiFpc0Z1bGxTY3JlZW5cIlxuICAgICAgICAgICAgd2lkdGg9XCIxNHB4XCJcbiAgICAgICAgICAgIGhlaWdodD1cIjE0cHhcIlxuICAgICAgICAgICAgdmlld0JveD1cIjAgMCAxNCAxNFwiXG4gICAgICAgICAgICB2ZXJzaW9uPVwiMS4xXCJcbiAgICAgICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgICAgICAgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZyBzdHJva2U9XCJub25lXCIgc3Ryb2tlLXdpZHRoPVwiMVwiIGZpbGw9XCJub25lXCIgZmlsbC1ydWxlPVwiZXZlbm9kZFwiPlxuICAgICAgICAgICAgICA8ZyB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLTE0ODIuMDAwMDAwLCAtMTI4NS4wMDAwMDApXCIgZmlsbD1cIiMyOTMwNDBcIiBmaWxsLXJ1bGU9XCJub256ZXJvXCI+XG4gICAgICAgICAgICAgICAgPGcgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDE0ODEuMDAwMDAwLCAxMjg0LjAwMDAwMClcIj5cbiAgICAgICAgICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICAgICAgICAgIGQ9XCJNMTUsMSBMMTUsNiBMMTMsNiBMMTMsMyBMMTAsMyBMMTAsMSBMMTUsMSBaIE0xNSwxMCBMMTUsMTUgTDEwLDE1IEwxMCwxMyBMMTMsMTMgTDEzLDEwIEwxNSwxMFxuICAgICAgICAgICAgICAgIFogTTEsMTUgTDEsMTAgTDMsMTAgTDMsMTMgTDYsMTMgTDYsMTUgTDEsMTUgWiBNMSwxIEw2LDEgTDYsMyBMMywzIEwzLDYgTDEsNiBMMSwxIFpcIlxuICAgICAgICAgICAgICAgICAgICBpZD1cIkNvbWJpbmVkLVNoYXBlXCJcbiAgICAgICAgICAgICAgICAgID48L3BhdGg+XG4gICAgICAgICAgICAgICAgPC9nPlxuICAgICAgICAgICAgICA8L2c+XG4gICAgICAgICAgICA8L2c+XG4gICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgKm5nSWY9XCJpc0Z1bGxTY3JlZW5cIlxuICAgICAgICAgICAgd2lkdGg9XCIxNnB4XCJcbiAgICAgICAgICAgIGhlaWdodD1cIjE2cHhcIlxuICAgICAgICAgICAgdmlld0JveD1cIjAgMCAxNiAxNlwiXG4gICAgICAgICAgICB2ZXJzaW9uPVwiMS4xXCJcbiAgICAgICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgICAgICAgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZyBzdHJva2U9XCJub25lXCIgc3Ryb2tlLXdpZHRoPVwiMVwiIGZpbGw9XCJub25lXCIgZmlsbC1ydWxlPVwiZXZlbm9kZFwiPlxuICAgICAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgICAgIGQ9XCJNMTAsNiBMMTAsMSBMMTIsMSBMMTIsNCBMMTUsNCBMMTUsNiBMMTAsNiBaIE02LDEgTDYsNiBMMSw2IEwxLDQgTDQsNCBMNCwxIEw2LDEgWiBNMTAsMTUgTDEwLDEwIEwxNSwxMCBMMTUsMTJcbiAgICAgICAgTDEyLDEyIEwxMiwxNSBMMTAsMTUgWiBNNiwxMCBMNiwxNSBMNCwxNSBMNCwxMiBMMSwxMiBMMSwxMCBMNiwxMCBaXCJcbiAgICAgICAgICAgICAgICBpZD1cIuW9oueKtlwiXG4gICAgICAgICAgICAgICAgZmlsbD1cIiMyOTMwNDBcIlxuICAgICAgICAgICAgICAgIGZpbGwtcnVsZT1cIm5vbnplcm9cIlxuICAgICAgICAgICAgICA+PC9wYXRoPlxuICAgICAgICAgICAgPC9nPlxuICAgICAgICAgIDwvc3ZnPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGQtcXVhZHJhbnQtYXhpcyBbZGlhZ3JhbUlkXT1cImRpYWdyYW1JZFwiIFt2aWV3XT1cInZpZXdcIiBbYXhpc0NvbmZpZ3NdPVwiYXhpc0NvbmZpZ3NcIj48L2QtcXVhZHJhbnQtYXhpcz5cbiAgICAgIDxkLXF1YWRyYW50LXJlZ2lvblxuICAgICAgICBbdmlld109XCJ2aWV3XCJcbiAgICAgICAgW2xhYmVsRGF0YV09XCJsYWJlbERhdGFcIlxuICAgICAgICBbYXhpc0NvbmZpZ3NdPVwiYXhpc0NvbmZpZ3NcIlxuICAgICAgICBbcXVhZHJhbnRDb25maWdzXT1cInF1YWRyYW50Q29uZmlnc1wiXG4gICAgICAgIFtjdXJyZW50TGFiZWxTaXplXT1cImN1cnJlbnRMYWJlbFNpemVcIlxuICAgICAgICBbc2hvd1F1YWRyYW50c109XCJzaG93UXVhZHJhbnRzXCJcbiAgICAgICAgW2Ryb3BTY29wZV09XCJkcm9wU2NvcGVcIlxuICAgICAgICBbZGlhZ3JhbUlkXT1cImRpYWdyYW1JZFwiXG4gICAgICA+PC9kLXF1YWRyYW50LXJlZ2lvbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2QtZnVsbHNjcmVlbj5cbiJdfQ==