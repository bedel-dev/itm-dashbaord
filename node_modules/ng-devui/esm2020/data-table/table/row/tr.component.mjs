import { Component, ContentChildren, ElementRef, EventEmitter, Output, QueryList, Renderer2 } from '@angular/core';
import { TableThComponent } from '../head/th/th.component';
import * as i0 from "@angular/core";
import * as i1 from "ng-devui/checkbox";
import * as i2 from "ng-devui/dropdown";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
export class TableTrComponent {
    constructor(eleRef, render2) {
        this.eleRef = eleRef;
        this.render2 = render2;
        this.headerRowspan = 1;
        this.headerCheckStatusEvent = new EventEmitter();
        this.checkStatusEvent = new EventEmitter();
    }
    ngOnInit() {
    }
    ngAfterContentInit() {
        if (this.thList) {
            this.firstTh = this.thList.first;
        }
        this.initFixedColumnStatus();
    }
    initFixedColumnStatus() {
        const fixLeftList = this.eleRef.nativeElement.querySelectorAll('.devui-sticky-left-cell');
        const fixRightList = this.eleRef.nativeElement.querySelectorAll('.devui-sticky-right-cell');
        if (fixLeftList?.length) {
            const lastEle = fixLeftList[fixLeftList.length - 1];
            this.render2.addClass(lastEle, 'devui-last-sticky-left-cell');
        }
        if (fixRightList?.length) {
            const firstEle = fixRightList[0];
            this.render2.addClass(firstEle, 'devui-first-sticky-right-cell');
        }
    }
    onHeaderCheckChange(checked) {
        this.headerChecked = checked;
        this.headerHalfChecked = false;
        this.headerCheckStatusEvent.emit(checked);
    }
    onOptionSelect(option) {
        if (option.onChecked) {
            option.onChecked();
        }
    }
}
TableTrComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TableTrComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
TableTrComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: TableTrComponent, selector: "[dTableRow]", outputs: { headerCheckStatusEvent: "headerCheckStatusEvent", checkStatusEvent: "checkStatusEvent" }, queries: [{ propertyName: "thList", predicate: TableThComponent }], ngImport: i0, template: "<th\n  *ngIf=\"headerCheckable\"\n  [attr.rowspan]=\"headerRowspan\"\n  class=\"devui-checkable-cell\"\n  [ngClass]=\"{ 'devui-sticky-left-cell': firstTh?.fixedLeft }\"\n  [style.left]=\"'0px'\"\n>\n  <d-checkbox\n    class=\"check-box-all\"\n    [name]=\"'checkbox'\"\n    (change)=\"onHeaderCheckChange($event)\"\n    [(ngModel)]=\"headerChecked\"\n    [halfchecked]=\"headerHalfChecked\"\n    [disabled]=\"headerCheckDisabled\"\n  ></d-checkbox>\n\n  <div *ngIf=\"headerCheckOptions && headerCheckOptions.length > 0\" dDropDown appendToBody [trigger]=\"'hover'\" class=\"select-options\">\n    <div dDropDownToggle>\n      <svg\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        height=\"16px\"\n        version=\"1.1\"\n        viewBox=\"0 0 16 16\"\n        width=\"16px\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g fill=\"none\" fill-rule=\"evenodd\" id=\"chevron_down\" stroke=\"none\" stroke-width=\"1\">\n          <polygon points=\"4.5 5 8 8.76923077 11.5 5 13 6.61538462 8 12 3 6.61538462\"></polygon>\n        </g>\n      </svg>\n    </div>\n    <ul dDropDownMenu class=\"devui-dropdown-menu\" role=\"menu\">\n      <li *ngFor=\"let option of headerCheckOptions\" role=\"menuitem\" (click)=\"onOptionSelect(option)\">\n        <a class=\"devui-dropdown-item\">{{ option.label }}</a>\n      </li>\n    </ul>\n  </div>\n</th>\n<ng-content></ng-content>\n", styles: [".select-options{cursor:pointer;vertical-align:middle}svg>g>polygon{fill:#71757f;fill:var(--devui-icon-text, #71757f)}\n"], components: [{ type: i1.CheckBoxComponent, selector: "d-checkbox", inputs: ["name", "label", "cssClass", "color", "disabled", "isShowTitle", "title", "labelTemplate", "halfchecked", "showAnimation", "beforeChange"], outputs: ["change"] }, { type: i2.DropDownAppendToBodyComponent, selector: "[dDropDown][appendToBody]", inputs: ["alignOrigin", "appendToBodyDirections"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i2.DropDownDirective, selector: "[dDropDown]", inputs: ["isOpen", "disabled", "showAnimation", "trigger", "closeScope", "closeOnMouseLeaveMenu"], outputs: ["toggleEvent"], exportAs: ["d-dropdown"] }, { type: i2.DropDownToggleDirective, selector: "[dDropDownToggle]", inputs: ["toggleOnFocus", "autoFocus"], exportAs: ["d-dropdown-toggle"] }, { type: i2.DropDownMenuDirective, selector: "[dDropDownMenu]", exportAs: ["d-dropdown-menu"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TableTrComponent, decorators: [{
            type: Component,
            args: [{ selector: '[dTableRow]', template: "<th\n  *ngIf=\"headerCheckable\"\n  [attr.rowspan]=\"headerRowspan\"\n  class=\"devui-checkable-cell\"\n  [ngClass]=\"{ 'devui-sticky-left-cell': firstTh?.fixedLeft }\"\n  [style.left]=\"'0px'\"\n>\n  <d-checkbox\n    class=\"check-box-all\"\n    [name]=\"'checkbox'\"\n    (change)=\"onHeaderCheckChange($event)\"\n    [(ngModel)]=\"headerChecked\"\n    [halfchecked]=\"headerHalfChecked\"\n    [disabled]=\"headerCheckDisabled\"\n  ></d-checkbox>\n\n  <div *ngIf=\"headerCheckOptions && headerCheckOptions.length > 0\" dDropDown appendToBody [trigger]=\"'hover'\" class=\"select-options\">\n    <div dDropDownToggle>\n      <svg\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        height=\"16px\"\n        version=\"1.1\"\n        viewBox=\"0 0 16 16\"\n        width=\"16px\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g fill=\"none\" fill-rule=\"evenodd\" id=\"chevron_down\" stroke=\"none\" stroke-width=\"1\">\n          <polygon points=\"4.5 5 8 8.76923077 11.5 5 13 6.61538462 8 12 3 6.61538462\"></polygon>\n        </g>\n      </svg>\n    </div>\n    <ul dDropDownMenu class=\"devui-dropdown-menu\" role=\"menu\">\n      <li *ngFor=\"let option of headerCheckOptions\" role=\"menuitem\" (click)=\"onOptionSelect(option)\">\n        <a class=\"devui-dropdown-item\">{{ option.label }}</a>\n      </li>\n    </ul>\n  </div>\n</th>\n<ng-content></ng-content>\n", styles: [".select-options{cursor:pointer;vertical-align:middle}svg>g>polygon{fill:#71757f;fill:var(--devui-icon-text, #71757f)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { thList: [{
                type: ContentChildren,
                args: [TableThComponent]
            }], headerCheckStatusEvent: [{
                type: Output
            }], checkStatusEvent: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vZGV2dWkvZGF0YS10YWJsZS90YWJsZS9yb3cvdHIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vZGV2dWkvZGF0YS10YWJsZS90YWJsZS9yb3cvdHIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNhLFNBQVMsRUFBRSxlQUFlLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBVSxNQUFNLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFDN0csTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7OztBQVEzRCxNQUFNLE9BQU8sZ0JBQWdCO0lBYTNCLFlBQ1UsTUFBa0IsRUFDbEIsT0FBa0I7UUFEbEIsV0FBTSxHQUFOLE1BQU0sQ0FBWTtRQUNsQixZQUFPLEdBQVAsT0FBTyxDQUFXO1FBWDVCLGtCQUFhLEdBQUcsQ0FBQyxDQUFDO1FBT1IsMkJBQXNCLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztRQUNyRCxxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBMEIsQ0FBQztJQUlwRSxDQUFDO0lBRUwsUUFBUTtJQUNSLENBQUM7SUFFRCxrQkFBa0I7UUFDaEIsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztTQUNsQztRQUNELElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFRCxxQkFBcUI7UUFDbkIsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMseUJBQXlCLENBQUMsQ0FBQztRQUMxRixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBQzVGLElBQUksV0FBVyxFQUFFLE1BQU0sRUFBRTtZQUN2QixNQUFNLE9BQU8sR0FBRyxXQUFXLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNwRCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsNkJBQTZCLENBQUMsQ0FBQztTQUMvRDtRQUVELElBQUksWUFBWSxFQUFFLE1BQU0sRUFBRTtZQUN4QixNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLCtCQUErQixDQUFDLENBQUM7U0FDbEU7SUFHSCxDQUFDO0lBRUQsbUJBQW1CLENBQUMsT0FBTztRQUN6QixJQUFJLENBQUMsYUFBYSxHQUFHLE9BQU8sQ0FBQztRQUM3QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO1FBQy9CLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVELGNBQWMsQ0FBQyxNQUF5QjtRQUN0QyxJQUFJLE1BQU0sQ0FBQyxTQUFTLEVBQUU7WUFDcEIsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQzs7NkdBdERVLGdCQUFnQjtpR0FBaEIsZ0JBQWdCLCtLQUNWLGdCQUFnQiw2QkNibkMsMDNDQXVDQTsyRkQzQmEsZ0JBQWdCO2tCQU41QixTQUFTOytCQUVFLGFBQWE7eUhBS1ksTUFBTTtzQkFBeEMsZUFBZTt1QkFBQyxnQkFBZ0I7Z0JBVXZCLHNCQUFzQjtzQkFBL0IsTUFBTTtnQkFDRyxnQkFBZ0I7c0JBQXpCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlckNvbnRlbnRJbml0LCBDb21wb25lbnQsIENvbnRlbnRDaGlsZHJlbiwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIE91dHB1dCwgUXVlcnlMaXN0LCBSZW5kZXJlcjJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3dDaGVja0NoYW5nZUV2ZW50QXJnLCBUYWJsZUNoZWNrT3B0aW9ucyB9IGZyb20gJy4uLy4uL2RhdGEtdGFibGUubW9kZWwnO1xuaW1wb3J0IHsgVGFibGVUaENvbXBvbmVudCB9IGZyb20gJy4uL2hlYWQvdGgvdGguY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvY29tcG9uZW50LXNlbGVjdG9yKi9cbiAgc2VsZWN0b3I6ICdbZFRhYmxlUm93XScsXG4gIHRlbXBsYXRlVXJsOiAnLi90ci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RyLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGFibGVUckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIEBDb250ZW50Q2hpbGRyZW4oVGFibGVUaENvbXBvbmVudCkgdGhMaXN0OiBRdWVyeUxpc3Q8VGFibGVUaENvbXBvbmVudD47XG4gIGhlYWRlckNoZWNrYWJsZTogYm9vbGVhbjtcbiAgaGVhZGVyQ2hlY2tEaXNhYmxlZDogYm9vbGVhbjtcbiAgaGVhZGVyUm93c3BhbiA9IDE7XG4gIGhlYWRlckNoZWNrT3B0aW9uczogVGFibGVDaGVja09wdGlvbnNbXTtcblxuICBoZWFkZXJDaGVja2VkOiBib29sZWFuO1xuICBoZWFkZXJIYWxmQ2hlY2tlZDogYm9vbGVhbjtcbiAgZmlyc3RUaDogVGFibGVUaENvbXBvbmVudDtcblxuICBAT3V0cHV0KCkgaGVhZGVyQ2hlY2tTdGF0dXNFdmVudCA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcbiAgQE91dHB1dCgpIGNoZWNrU3RhdHVzRXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyPFJvd0NoZWNrQ2hhbmdlRXZlbnRBcmc+KCk7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZWxlUmVmOiBFbGVtZW50UmVmLFxuICAgIHByaXZhdGUgcmVuZGVyMjogUmVuZGVyZXIyXG4gICkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgaWYgKHRoaXMudGhMaXN0KSB7XG4gICAgICB0aGlzLmZpcnN0VGggPSB0aGlzLnRoTGlzdC5maXJzdDtcbiAgICB9XG4gICAgdGhpcy5pbml0Rml4ZWRDb2x1bW5TdGF0dXMoKTtcbiAgfVxuXG4gIGluaXRGaXhlZENvbHVtblN0YXR1cygpIHtcbiAgICBjb25zdCBmaXhMZWZ0TGlzdCA9IHRoaXMuZWxlUmVmLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRldnVpLXN0aWNreS1sZWZ0LWNlbGwnKTtcbiAgICBjb25zdCBmaXhSaWdodExpc3QgPSB0aGlzLmVsZVJlZi5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kZXZ1aS1zdGlja3ktcmlnaHQtY2VsbCcpO1xuICAgIGlmIChmaXhMZWZ0TGlzdD8ubGVuZ3RoKSB7XG4gICAgICBjb25zdCBsYXN0RWxlID0gZml4TGVmdExpc3RbZml4TGVmdExpc3QubGVuZ3RoIC0gMV07XG4gICAgICB0aGlzLnJlbmRlcjIuYWRkQ2xhc3MobGFzdEVsZSwgJ2RldnVpLWxhc3Qtc3RpY2t5LWxlZnQtY2VsbCcpO1xuICAgIH1cblxuICAgIGlmIChmaXhSaWdodExpc3Q/Lmxlbmd0aCkge1xuICAgICAgY29uc3QgZmlyc3RFbGUgPSBmaXhSaWdodExpc3RbMF07XG4gICAgICB0aGlzLnJlbmRlcjIuYWRkQ2xhc3MoZmlyc3RFbGUsICdkZXZ1aS1maXJzdC1zdGlja3ktcmlnaHQtY2VsbCcpO1xuICAgIH1cblxuXG4gIH1cblxuICBvbkhlYWRlckNoZWNrQ2hhbmdlKGNoZWNrZWQpIHtcbiAgICB0aGlzLmhlYWRlckNoZWNrZWQgPSBjaGVja2VkO1xuICAgIHRoaXMuaGVhZGVySGFsZkNoZWNrZWQgPSBmYWxzZTtcbiAgICB0aGlzLmhlYWRlckNoZWNrU3RhdHVzRXZlbnQuZW1pdChjaGVja2VkKTtcbiAgfVxuXG4gIG9uT3B0aW9uU2VsZWN0KG9wdGlvbjogVGFibGVDaGVja09wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9uLm9uQ2hlY2tlZCkge1xuICAgICAgb3B0aW9uLm9uQ2hlY2tlZCgpO1xuICAgIH1cbiAgfVxufVxuIiwiPHRoXG4gICpuZ0lmPVwiaGVhZGVyQ2hlY2thYmxlXCJcbiAgW2F0dHIucm93c3Bhbl09XCJoZWFkZXJSb3dzcGFuXCJcbiAgY2xhc3M9XCJkZXZ1aS1jaGVja2FibGUtY2VsbFwiXG4gIFtuZ0NsYXNzXT1cInsgJ2RldnVpLXN0aWNreS1sZWZ0LWNlbGwnOiBmaXJzdFRoPy5maXhlZExlZnQgfVwiXG4gIFtzdHlsZS5sZWZ0XT1cIicwcHgnXCJcbj5cbiAgPGQtY2hlY2tib3hcbiAgICBjbGFzcz1cImNoZWNrLWJveC1hbGxcIlxuICAgIFtuYW1lXT1cIidjaGVja2JveCdcIlxuICAgIChjaGFuZ2UpPVwib25IZWFkZXJDaGVja0NoYW5nZSgkZXZlbnQpXCJcbiAgICBbKG5nTW9kZWwpXT1cImhlYWRlckNoZWNrZWRcIlxuICAgIFtoYWxmY2hlY2tlZF09XCJoZWFkZXJIYWxmQ2hlY2tlZFwiXG4gICAgW2Rpc2FibGVkXT1cImhlYWRlckNoZWNrRGlzYWJsZWRcIlxuICA+PC9kLWNoZWNrYm94PlxuXG4gIDxkaXYgKm5nSWY9XCJoZWFkZXJDaGVja09wdGlvbnMgJiYgaGVhZGVyQ2hlY2tPcHRpb25zLmxlbmd0aCA+IDBcIiBkRHJvcERvd24gYXBwZW5kVG9Cb2R5IFt0cmlnZ2VyXT1cIidob3ZlcidcIiBjbGFzcz1cInNlbGVjdC1vcHRpb25zXCI+XG4gICAgPGRpdiBkRHJvcERvd25Ub2dnbGU+XG4gICAgICA8c3ZnXG4gICAgICAgIHhtbG5zOnhsaW5rPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiXG4gICAgICAgIGhlaWdodD1cIjE2cHhcIlxuICAgICAgICB2ZXJzaW9uPVwiMS4xXCJcbiAgICAgICAgdmlld0JveD1cIjAgMCAxNiAxNlwiXG4gICAgICAgIHdpZHRoPVwiMTZweFwiXG4gICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgPlxuICAgICAgICA8ZyBmaWxsPVwibm9uZVwiIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBpZD1cImNoZXZyb25fZG93blwiIHN0cm9rZT1cIm5vbmVcIiBzdHJva2Utd2lkdGg9XCIxXCI+XG4gICAgICAgICAgPHBvbHlnb24gcG9pbnRzPVwiNC41IDUgOCA4Ljc2OTIzMDc3IDExLjUgNSAxMyA2LjYxNTM4NDYyIDggMTIgMyA2LjYxNTM4NDYyXCI+PC9wb2x5Z29uPlxuICAgICAgICA8L2c+XG4gICAgICA8L3N2Zz5cbiAgICA8L2Rpdj5cbiAgICA8dWwgZERyb3BEb3duTWVudSBjbGFzcz1cImRldnVpLWRyb3Bkb3duLW1lbnVcIiByb2xlPVwibWVudVwiPlxuICAgICAgPGxpICpuZ0Zvcj1cImxldCBvcHRpb24gb2YgaGVhZGVyQ2hlY2tPcHRpb25zXCIgcm9sZT1cIm1lbnVpdGVtXCIgKGNsaWNrKT1cIm9uT3B0aW9uU2VsZWN0KG9wdGlvbilcIj5cbiAgICAgICAgPGEgY2xhc3M9XCJkZXZ1aS1kcm9wZG93bi1pdGVtXCI+e3sgb3B0aW9uLmxhYmVsIH19PC9hPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICA8L2Rpdj5cbjwvdGg+XG48bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4iXX0=