import { DOCUMENT } from '@angular/common';
import { ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, HostBinding, HostListener, Inject, Input, NgZone, Output, Renderer2, TemplateRef } from '@angular/core';
import { fromEvent } from 'rxjs';
import { SortDirection } from '../../../data-table.model';
import { TABLE_TH } from './th.token';
import * as i0 from "@angular/core";
import * as i1 from "./sort/sort.component";
import * as i2 from "./filter/filter.component";
import * as i3 from "@angular/common";
import * as i4 from "ng-devui/utils";
export class TableThComponent {
    constructor(element, renderer2, zone, cdr, doc) {
        this.renderer2 = renderer2;
        this.zone = zone;
        this.cdr = cdr;
        this.doc = doc;
        this.resizeEnabledClass = false;
        this.operableClass = false;
        this.sortActiveClass = false;
        this.filterActiveClass = false;
        this.stickyLeftClass = false;
        this.stickyRightClass = false;
        this.showFilterIcon = false;
        this.filterMultiple = true;
        this.filterChange = new EventEmitter();
        this.filterToggle = new EventEmitter();
        this.showSortIcon = false;
        this.sortDirectionChange = new EventEmitter();
        this.sortChange = new EventEmitter();
        this.resizeEndEvent = new EventEmitter();
        this.resizeStartEvent = new EventEmitter();
        this.resizingEvent = new EventEmitter();
        this.resizing = false;
        this.toggleChildrenTableEvent = new EventEmitter();
        this.tapEvent = new EventEmitter();
        this.bindMousemove = (e) => {
            this.move(e);
        };
        this.element = element.nativeElement;
        this.document = this.doc;
    }
    ngOnChanges(changes) {
        if (changes['resizeEnabled']) {
            if (this.resizeEnabled) {
                this.resizeEnabledClass = true;
                if (!this.resizeHandleElement) {
                    this.resizeHandleElement = this.renderer2.createElement('span');
                    this.renderer2.addClass(this.resizeHandleElement, 'resize-handle');
                    this.renderer2.appendChild(this.element.firstChild, this.resizeHandleElement);
                    this.resizeNodeEvent = this.renderer2.listen(this.resizeHandleElement, 'click', (event) => event.stopPropagation());
                }
            }
            else {
                this.resizeEnabledClass = false;
            }
        }
        if (changes['filterable'] || changes['sortable'] || changes['resizeEnabled'] || changes['colDraggable']) {
            if (this.filterable || this.sortable || this.resizeEnabled || this.colDraggable) {
                this.operableClass = true;
            }
            else {
                this.operableClass = false;
            }
        }
        if (changes['filterIconActive']) {
            if (this.filterIconActive) {
                this.filterActiveClass = true;
            }
            else {
                this.filterActiveClass = false;
            }
        }
        if (changes['sortDirection']) {
            if (this.sortDirection === SortDirection.ASC || this.sortDirection === SortDirection.DESC) {
                this.sortActiveClass = true;
            }
            else {
                this.sortActiveClass = false;
            }
        }
        if (changes['fixedLeft']) {
            if (this.fixedLeft) {
                this.stickyLeftClass = true;
                this.stickyLeftStyle = this.fixedLeft;
            }
            else {
                this.stickyLeftClass = false;
                this.stickyLeftStyle = null;
            }
        }
        if (changes['fixedRight']) {
            if (this.fixedRight) {
                this.stickyRightClass = true;
                this.stickyRightStyle = this.fixedRight;
            }
            else {
                this.stickyRightClass = false;
                this.stickyRightStyle = null;
            }
        }
    }
    ngOnDestroy() {
        this._destroySubscription();
        if (this.resizeNodeEvent) {
            this.resizeNodeEvent();
        }
    }
    onFilterIconActive(active) {
        this.filterActiveClass = active;
    }
    onTap(event) {
        this.tapEvent.emit(event);
    }
    toggleChildrenTable() {
        this.childrenTableOpen = !this.childrenTableOpen;
        this.toggleChildrenTableEvent.emit(this.childrenTableOpen);
    }
    emitFilterData(filterData) {
        this.filterChange.emit(filterData);
    }
    emitFilterToggle(data) {
        this.filterToggle.emit(data);
    }
    onSort(event) {
        this.sortDirection = event.direction;
        if (event.direction === SortDirection.default) {
            this.sortActiveClass = false;
        }
        else {
            this.sortActiveClass = true;
        }
        this.sortDirectionChange.emit(event.direction);
        this.sortChange.emit({ ...event, th: this });
    }
    clearSortOrder() {
        this.sortDirection = SortDirection.default;
        this.sortActiveClass = false;
    }
    onMousedown(event) {
        const isHandle = event.target.classList.contains('resize-handle');
        if (isHandle) {
            this.resizeStartEvent.emit(event); // emit begin resize event
            this.initialWidth = this.element.clientWidth;
            const initialOffset = this.element.offsetLeft;
            this.mouseDownScreenX = event.clientX;
            event.stopPropagation();
            this.nextElement = this.element.nextElementSibling;
            this.resizing = true;
            this.totalWidth = this.nextElement ? this.initialWidth + this.nextElement.clientWidth : this.initialWidth;
            // create resizeOverlay
            this.resizeOverlay = this.renderer2.createElement('div');
            this.renderer2.appendChild(this.element.firstElementChild, this.resizeOverlay);
            this.renderer2.addClass(this.resizeOverlay, 'resize-overlay');
            this.renderer2.listen(this.resizeOverlay, 'click', (clickEvent) => clickEvent.stopPropagation());
            this.renderer2.addClass(this.tableViewRefElement.nativeElement, 'table-view-selector');
            const resizeBar = this.renderer2.createElement('div');
            this.renderer2.addClass(resizeBar, 'resize-bar');
            this.tableElement = this.tableViewRefElement.nativeElement.querySelector('.devui-scrollbar table');
            if (this.tableElement) {
                this.renderer2.appendChild(this.tableElement, resizeBar);
                this.renderer2.setStyle(resizeBar, 'display', 'block');
                this.renderer2.setStyle(resizeBar, 'left', initialOffset + this.initialWidth + 'px');
                this.resizeBarRefElement = resizeBar;
            }
            this.renderer2.addClass(this.element, 'hover-bg');
            const mouseup = fromEvent(this.document, 'mouseup');
            this.subscription = mouseup.subscribe((ev) => this.onMouseup(ev));
            this.zone.runOutsideAngular(() => {
                this.document.addEventListener('mousemove', this.bindMousemove);
            });
        }
    }
    onMouseup(event) {
        this.zone.run(() => {
            const movementX = event.clientX - this.mouseDownScreenX;
            const newWidth = this.initialWidth + movementX;
            const finalWidth = this.getFinalWidth(newWidth);
            this.resizing = false;
            // destroy overlay
            this.renderer2.removeChild(this.element, this.resizeOverlay);
            this.renderer2.removeClass(this.tableViewRefElement.nativeElement, 'table-view-selector');
            this.renderer2.removeClass(this.element, 'hover-bg');
            if (this.tableElement) {
                this.renderer2.removeChild(this.tableElement, this.resizeBarRefElement);
            }
            this.resizeEndEvent.emit({ width: finalWidth, beforeWidth: this.initialWidth });
        });
        if (this.subscription && !this.subscription.closed) {
            this._destroySubscription();
        }
        this.document.removeEventListener('mousemove', this.bindMousemove);
    }
    move(event) {
        const movementX = event.clientX - this.mouseDownScreenX;
        const newWidth = this.initialWidth + movementX;
        const finalWidth = this.getFinalWidth(newWidth);
        if (this.resizeBarRefElement) {
            this.renderer2.setStyle(this.resizeBarRefElement, 'left', `${finalWidth + this.element.offsetLeft}px`);
        }
        this.resizingEvent.emit({ width: finalWidth });
    }
    getFinalWidth(newWidth) {
        const minWidth = this.handleWidth(this.minWidth);
        const maxWidth = this.handleWidth(this.maxWidth);
        const overMinWidth = !this.minWidth || newWidth >= minWidth;
        const underMaxWidth = !this.maxWidth || newWidth <= maxWidth;
        const finalWidth = !overMinWidth ? minWidth : !underMaxWidth ? maxWidth : newWidth;
        return finalWidth;
    }
    handleWidth(width) {
        if (!width) {
            return;
        }
        if (typeof width === 'number') {
            return width;
        }
        if (width.includes('%')) {
            const tableWidth = this.tableViewRefElement.nativeElement.clientWidth;
            return (tableWidth * parseInt(width, 10)) / 100;
        }
        return parseInt(width.replace(/[^\d]+/, ''), 10);
    }
    _destroySubscription() {
        if (this.subscription) {
            this.subscription.unsubscribe();
            this.subscription = undefined;
        }
    }
}
TableThComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TableThComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });
TableThComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: TableThComponent, selector: "[dHeadCell]", inputs: { resizeEnabled: "resizeEnabled", filterable: "filterable", beforeFilter: "beforeFilter", customFilterTemplate: "customFilterTemplate", extraFilterTemplate: "extraFilterTemplate", searchFn: "searchFn", showFilterIcon: "showFilterIcon", filterList: "filterList", filterIconActive: "filterIconActive", filterMultiple: "filterMultiple", closeFilterWhenScroll: "closeFilterWhenScroll", filterBoxWidth: "filterBoxWidth", filterBoxHeight: "filterBoxHeight", sortable: "sortable", sortDirection: "sortDirection", showSortIcon: "showSortIcon", colDraggable: "colDraggable", nestedColumn: "nestedColumn", iconFoldTable: "iconFoldTable", iconUnFoldTable: "iconUnFoldTable", tableViewRefElement: "tableViewRefElement", minWidth: "minWidth", maxWidth: "maxWidth", fixedLeft: "fixedLeft", fixedRight: "fixedRight", isLastFixedLeft: "isLastFixedLeft", isFirstFixedRight: "isFirstFixedRight", childrenTableOpen: "childrenTableOpen", column: "column" }, outputs: { filterChange: "filterChange", filterToggle: "filterToggle", sortDirectionChange: "sortDirectionChange", sortChange: "sortChange", resizeEndEvent: "resizeEndEvent", resizeStartEvent: "resizeStartEvent", resizingEvent: "resizingEvent", toggleChildrenTableEvent: "toggleChildrenTableEvent", tapEvent: "tapEvent" }, host: { listeners: { "mousedown": "onMousedown($event)" }, properties: { "class.resizeable": "this.resizeEnabledClass", "class.operable": "this.operableClass", "class.sort-active": "this.sortActiveClass", "class.filter-active": "this.filterActiveClass", "class.devui-sticky-left-cell": "this.stickyLeftClass", "class.devui-sticky-right-cell": "this.stickyRightClass", "style.left": "this.stickyLeftStyle", "style.right": "this.stickyRightStyle", "class.can-sort": "this.sortable", "class.devui-last-sticky-left-cell": "this.isLastFixedLeft", "class.devui-first-sticky-right-cell": "this.isFirstFixedRight" } }, providers: [{
            provide: TABLE_TH,
            useExisting: forwardRef(() => TableThComponent)
        }], usesOnChanges: true, ngImport: i0, template: "<div class=\"header-container\">\n  <i class=\"drag-icon\" (mousedown)=\"onTap($event)\">\n    <svg\n      width=\"16px\"\n      height=\"16px\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    >\n      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <path\n          d=\"M4.5,1.5 L5.5,1.5 C6.05228475,1.5 6.5,1.94771525 6.5,2.5 L6.5,3.5 C6.5,4.05228475 6.05228475,4.5 5.5,4.5 L4.5,4.5 C3.94771525,4.5 3.5,4.05228475 3.5,3.5 L3.5,2.5 C3.5,1.94771525 3.94771525,1.5 4.5,1.5 Z M10.5,1.5 L11.5,1.5 C12.0522847,1.5 12.5,1.94771525 12.5,2.5 L12.5,3.5 C12.5,4.05228475 12.0522847,4.5 11.5,4.5 L10.5,4.5 C9.94771525,4.5 9.5,4.05228475 9.5,3.5 L9.5,2.5 C9.5,1.94771525 9.94771525,1.5 10.5,1.5 Z M4.5,6.5 L5.5,6.5 C6.05228475,6.5 6.5,6.94771525 6.5,7.5 L6.5,8.5 C6.5,9.05228475 6.05228475,9.5 5.5,9.5 L4.5,9.5 C3.94771525,9.5 3.5,9.05228475 3.5,8.5 L3.5,7.5 C3.5,6.94771525 3.94771525,6.5 4.5,6.5 Z M10.5,6.5 L11.5,6.5 C12.0522847,6.5 12.5,6.94771525 12.5,7.5 L12.5,8.5 C12.5,9.05228475 12.0522847,9.5 11.5,9.5 L10.5,9.5 C9.94771525,9.5 9.5,9.05228475 9.5,8.5 L9.5,7.5 C9.5,6.94771525 9.94771525,6.5 10.5,6.5 Z M4.5,11.5 L5.5,11.5 C6.05228475,11.5 6.5,11.9477153 6.5,12.5 L6.5,13.5 C6.5,14.0522847 6.05228475,14.5 5.5,14.5 L4.5,14.5 C3.94771525,14.5 3.5,14.0522847 3.5,13.5 L3.5,12.5 C3.5,11.9477153 3.94771525,11.5 4.5,11.5 Z M10.5,11.5 L11.5,11.5 C12.0522847,11.5 12.5,11.9477153 12.5,12.5 L12.5,13.5 C12.5,14.0522847 12.0522847,14.5 11.5,14.5 L10.5,14.5 C9.94771525,14.5 9.5,14.0522847 9.5,13.5 L9.5,12.5 C9.5,11.9477153 9.94771525,11.5 10.5,11.5 Z\"\n          fill=\"#C7CAD0\"\n        ></path>\n      </g>\n    </svg>\n  </i>\n  <ng-container *ngIf=\"nestedColumn\">\n    <span class=\"childtable-toggler\" (click)=\"toggleChildrenTable()\">\n      <ng-container *ngIf=\"childrenTableOpen\">\n        <svg\n          *ngIf=\"!iconFoldTable\"\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          class=\"svg-icon svg-icon-close\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n            <rect x=\"4\" y=\"7\" width=\"8\" height=\"2\"></rect>\n          </g>\n        </svg>\n        <span class=\"customized-icon\" *ngIf=\"iconFoldTable\" [innerHTML]=\"iconFoldTable | safe: 'html'\"></span>\n      </ng-container>\n      <ng-container *ngIf=\"!childrenTableOpen\">\n        <svg\n          *ngIf=\"!iconUnFoldTable\"\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          class=\"svg-icon svg-icon-open-folder\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n            <path\n              d=\"M8.75,4 L8.75,7.25 L12,7.25 L12,8.75 L8.749,8.75 L8.75,12 L7.25,12 L7.249,8.75 L4,8.75 L4,7.25 L7.25,7.25 L7.25,4 L8.75,4 Z\"\n            ></path>\n          </g>\n        </svg>\n        <span class=\"customized-icon\" *ngIf=\"iconUnFoldTable\" [innerHTML]=\"iconUnFoldTable | safe: 'html'\"></span>\n      </ng-container>\n    </span>\n  </ng-container>\n  <span class=\"title\" [ngStyle]=\"{ flex: sortable ? 'inherit' : 1 }\">\n    <ng-content></ng-content>\n  </span>\n  <d-table-sort *ngIf=\"sortable\" [sortDirection]=\"sortDirection\" [showSortIcon]=\"showSortIcon\" (sortEvent)=\"onSort($event)\"></d-table-sort>\n  <d-table-filter\n    *ngIf=\"filterable\"\n    [showFilterIcon]=\"showFilterIcon\"\n    [beforeFilter]=\"beforeFilter\"\n    [customFilterTemplate]=\"customFilterTemplate\"\n    [extraFilterTemplate]=\"extraFilterTemplate\"\n    [column]=\"column\"\n    [searchFn]=\"searchFn\"\n    [filterList]=\"filterList\"\n    [filterIconActive]=\"filterIconActive\"\n    (filterIconActiveChange)=\"onFilterIconActive($event)\"\n    [filterMultiple]=\"filterMultiple\"\n    [closeWhenScroll]=\"closeFilterWhenScroll\"\n    [filterBoxWidth]=\"filterBoxWidth\"\n    [filterBoxHeight]=\"filterBoxHeight\"\n    (filterChange)=\"emitFilterData($event)\"\n    (filterToggle)=\"emitFilterToggle($event)\"\n  ></d-table-filter>\n</div>\n", components: [{ type: i1.SortComponent, selector: "d-table-sort", inputs: ["sortDirection", "showSortIcon"], outputs: ["sortEvent"] }, { type: i2.FilterComponent, selector: "d-table-filter", inputs: ["beforeFilter", "customFilterTemplate", "extraFilterTemplate", "searchFn", "filterList", "filterIconActive", "filterMultiple", "filterBoxWidth", "filterBoxHeight", "column", "closeWhenScroll", "showFilterIcon"], outputs: ["filterIconActiveChange", "filterChange", "filterToggle"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }], pipes: { "safe": i4.SafePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TableThComponent, decorators: [{
            type: Component,
            args: [{ selector: '[dHeadCell]', providers: [{
                            provide: TABLE_TH,
                            useExisting: forwardRef(() => TableThComponent)
                        }], template: "<div class=\"header-container\">\n  <i class=\"drag-icon\" (mousedown)=\"onTap($event)\">\n    <svg\n      width=\"16px\"\n      height=\"16px\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    >\n      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <path\n          d=\"M4.5,1.5 L5.5,1.5 C6.05228475,1.5 6.5,1.94771525 6.5,2.5 L6.5,3.5 C6.5,4.05228475 6.05228475,4.5 5.5,4.5 L4.5,4.5 C3.94771525,4.5 3.5,4.05228475 3.5,3.5 L3.5,2.5 C3.5,1.94771525 3.94771525,1.5 4.5,1.5 Z M10.5,1.5 L11.5,1.5 C12.0522847,1.5 12.5,1.94771525 12.5,2.5 L12.5,3.5 C12.5,4.05228475 12.0522847,4.5 11.5,4.5 L10.5,4.5 C9.94771525,4.5 9.5,4.05228475 9.5,3.5 L9.5,2.5 C9.5,1.94771525 9.94771525,1.5 10.5,1.5 Z M4.5,6.5 L5.5,6.5 C6.05228475,6.5 6.5,6.94771525 6.5,7.5 L6.5,8.5 C6.5,9.05228475 6.05228475,9.5 5.5,9.5 L4.5,9.5 C3.94771525,9.5 3.5,9.05228475 3.5,8.5 L3.5,7.5 C3.5,6.94771525 3.94771525,6.5 4.5,6.5 Z M10.5,6.5 L11.5,6.5 C12.0522847,6.5 12.5,6.94771525 12.5,7.5 L12.5,8.5 C12.5,9.05228475 12.0522847,9.5 11.5,9.5 L10.5,9.5 C9.94771525,9.5 9.5,9.05228475 9.5,8.5 L9.5,7.5 C9.5,6.94771525 9.94771525,6.5 10.5,6.5 Z M4.5,11.5 L5.5,11.5 C6.05228475,11.5 6.5,11.9477153 6.5,12.5 L6.5,13.5 C6.5,14.0522847 6.05228475,14.5 5.5,14.5 L4.5,14.5 C3.94771525,14.5 3.5,14.0522847 3.5,13.5 L3.5,12.5 C3.5,11.9477153 3.94771525,11.5 4.5,11.5 Z M10.5,11.5 L11.5,11.5 C12.0522847,11.5 12.5,11.9477153 12.5,12.5 L12.5,13.5 C12.5,14.0522847 12.0522847,14.5 11.5,14.5 L10.5,14.5 C9.94771525,14.5 9.5,14.0522847 9.5,13.5 L9.5,12.5 C9.5,11.9477153 9.94771525,11.5 10.5,11.5 Z\"\n          fill=\"#C7CAD0\"\n        ></path>\n      </g>\n    </svg>\n  </i>\n  <ng-container *ngIf=\"nestedColumn\">\n    <span class=\"childtable-toggler\" (click)=\"toggleChildrenTable()\">\n      <ng-container *ngIf=\"childrenTableOpen\">\n        <svg\n          *ngIf=\"!iconFoldTable\"\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          class=\"svg-icon svg-icon-close\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n            <rect x=\"4\" y=\"7\" width=\"8\" height=\"2\"></rect>\n          </g>\n        </svg>\n        <span class=\"customized-icon\" *ngIf=\"iconFoldTable\" [innerHTML]=\"iconFoldTable | safe: 'html'\"></span>\n      </ng-container>\n      <ng-container *ngIf=\"!childrenTableOpen\">\n        <svg\n          *ngIf=\"!iconUnFoldTable\"\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          class=\"svg-icon svg-icon-open-folder\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n            <path\n              d=\"M8.75,4 L8.75,7.25 L12,7.25 L12,8.75 L8.749,8.75 L8.75,12 L7.25,12 L7.249,8.75 L4,8.75 L4,7.25 L7.25,7.25 L7.25,4 L8.75,4 Z\"\n            ></path>\n          </g>\n        </svg>\n        <span class=\"customized-icon\" *ngIf=\"iconUnFoldTable\" [innerHTML]=\"iconUnFoldTable | safe: 'html'\"></span>\n      </ng-container>\n    </span>\n  </ng-container>\n  <span class=\"title\" [ngStyle]=\"{ flex: sortable ? 'inherit' : 1 }\">\n    <ng-content></ng-content>\n  </span>\n  <d-table-sort *ngIf=\"sortable\" [sortDirection]=\"sortDirection\" [showSortIcon]=\"showSortIcon\" (sortEvent)=\"onSort($event)\"></d-table-sort>\n  <d-table-filter\n    *ngIf=\"filterable\"\n    [showFilterIcon]=\"showFilterIcon\"\n    [beforeFilter]=\"beforeFilter\"\n    [customFilterTemplate]=\"customFilterTemplate\"\n    [extraFilterTemplate]=\"extraFilterTemplate\"\n    [column]=\"column\"\n    [searchFn]=\"searchFn\"\n    [filterList]=\"filterList\"\n    [filterIconActive]=\"filterIconActive\"\n    (filterIconActiveChange)=\"onFilterIconActive($event)\"\n    [filterMultiple]=\"filterMultiple\"\n    [closeWhenScroll]=\"closeFilterWhenScroll\"\n    [filterBoxWidth]=\"filterBoxWidth\"\n    [filterBoxHeight]=\"filterBoxHeight\"\n    (filterChange)=\"emitFilterData($event)\"\n    (filterToggle)=\"emitFilterToggle($event)\"\n  ></d-table-filter>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; }, propDecorators: { resizeEnabledClass: [{
                type: HostBinding,
                args: ['class.resizeable']
            }], operableClass: [{
                type: HostBinding,
                args: ['class.operable']
            }], sortActiveClass: [{
                type: HostBinding,
                args: ['class.sort-active']
            }], filterActiveClass: [{
                type: HostBinding,
                args: ['class.filter-active']
            }], stickyLeftClass: [{
                type: HostBinding,
                args: ['class.devui-sticky-left-cell']
            }], stickyRightClass: [{
                type: HostBinding,
                args: ['class.devui-sticky-right-cell']
            }], stickyLeftStyle: [{
                type: HostBinding,
                args: ['style.left']
            }], stickyRightStyle: [{
                type: HostBinding,
                args: ['style.right']
            }], resizeEnabled: [{
                type: Input
            }], filterable: [{
                type: Input
            }], beforeFilter: [{
                type: Input
            }], customFilterTemplate: [{
                type: Input
            }], extraFilterTemplate: [{
                type: Input
            }], searchFn: [{
                type: Input
            }], showFilterIcon: [{
                type: Input
            }], filterList: [{
                type: Input
            }], filterIconActive: [{
                type: Input
            }], filterMultiple: [{
                type: Input
            }], closeFilterWhenScroll: [{
                type: Input
            }], filterBoxWidth: [{
                type: Input
            }], filterBoxHeight: [{
                type: Input
            }], filterChange: [{
                type: Output
            }], filterToggle: [{
                type: Output
            }], sortable: [{
                type: HostBinding,
                args: ['class.can-sort']
            }, {
                type: Input
            }], sortDirection: [{
                type: Input
            }], showSortIcon: [{
                type: Input
            }], sortDirectionChange: [{
                type: Output
            }], sortChange: [{
                type: Output
            }], colDraggable: [{
                type: Input
            }], nestedColumn: [{
                type: Input
            }], iconFoldTable: [{
                type: Input
            }], iconUnFoldTable: [{
                type: Input
            }], tableViewRefElement: [{
                type: Input
            }], resizeEndEvent: [{
                type: Output
            }], resizeStartEvent: [{
                type: Output
            }], resizingEvent: [{
                type: Output
            }], minWidth: [{
                type: Input
            }], maxWidth: [{
                type: Input
            }], fixedLeft: [{
                type: Input
            }], fixedRight: [{
                type: Input
            }], isLastFixedLeft: [{
                type: HostBinding,
                args: ['class.devui-last-sticky-left-cell']
            }, {
                type: Input
            }], isFirstFixedRight: [{
                type: HostBinding,
                args: ['class.devui-first-sticky-right-cell']
            }, {
                type: Input
            }], childrenTableOpen: [{
                type: Input
            }], toggleChildrenTableEvent: [{
                type: Output
            }], tapEvent: [{
                type: Output
            }], column: [{
                type: Input
            }], onMousedown: [{
                type: HostListener,
                args: ['mousedown', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,