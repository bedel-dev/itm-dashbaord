import { ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, HostBinding, Inject, Input, NgZone, ViewChild } from '@angular/core';
import { InputNumberComponent } from 'ng-devui/input-number';
import { SelectComponent } from 'ng-devui/select';
import { TreeSelectComponent } from 'ng-devui/tree-select';
import { stopPropagationIfExist } from 'ng-devui/utils';
import { fromEvent } from 'rxjs';
import { DATA_TABLE_ROW } from './data-table-row.token';
import { DATA_TABLE } from './data-table.token';
import { EditorDirective } from './editor-host.directive';
import { DataTableColumnTmplComponent } from './tmpl/data-table-column-tmpl.component';
import * as i0 from "@angular/core";
import * as i1 from "ng-devui/datepicker";
import * as i2 from "@angular/common";
import * as i3 from "./editor-host.directive";
import * as i4 from "@angular/forms";
import * as i5 from "ng-devui/common";
import * as i6 from "ng-devui/utils";
import * as i7 from "./display-cell-value.pipe";
export class DataTableCellComponent {
    constructor(dt, changeDetectorRef, componentFactoryResolver, rowComponent, cellRef, ngZone) {
        this.dt = dt;
        this.changeDetectorRef = changeDetectorRef;
        this.componentFactoryResolver = componentFactoryResolver;
        this.rowComponent = rowComponent;
        this.cellRef = cellRef;
        this.ngZone = ngZone;
        this.clickCount = 0; // 记录点击次数
    }
    get isEditable() {
        return this.column.editable && !this.isCellEdit && this.column.extraOptions?.editableTip !== 'btn';
    }
    ngOnInit() {
        this.forceUpdateSubscription = this.rowComponent.forceUpdateEvent.subscribe(_ => this.forceUpdate());
        if (this.column.editable) {
            this.tdMousedownSubscription = fromEvent(this.cellRef.nativeElement, 'mousedown').subscribe(event => {
                this.clickInTd = true;
            });
            this.tdMouseupSubscription = fromEvent(this.cellRef.nativeElement, 'mouseup').subscribe(event => {
                this.clickInTd = false;
            });
        }
        this.ngZone.runOutsideAngular(() => {
            this.cellRef.nativeElement.addEventListener('click', this.onCellClick.bind(this));
            this.cellRef.nativeElement.addEventListener('dblclick', this.onCellDBClick.bind(this));
        });
    }
    ngOnChanges(changes) {
        const rowItem = changes['rowItem'];
        if (rowItem) {
            this.updateEditable(rowItem);
        }
    }
    updateEditable(rowItem) {
        const currentConfig = rowItem.currentValue['$editDeniedConfig'];
        if (!currentConfig) {
            if (this.fieldEditDenied) {
                this.fieldEditDenied = false;
            }
        }
        else {
            const index = currentConfig.findIndex((config) => {
                return config === this.column.field;
            });
            if (index === -1) {
                if (this.fieldEditDenied) {
                    this.fieldEditDenied = false;
                }
            }
            else {
                if (!this.fieldEditDenied) {
                    this.fieldEditDenied = true;
                }
            }
        }
    }
    onCellClick($event) {
        const cellSelectedEventArg = {
            rowIndex: this.rowIndex,
            colIndex: this.colIndex,
            column: this.column,
            rowItem: this.rowItem,
            cellComponent: this,
            rowComponent: this.rowComponent
        };
        this.clickCount++;
        if (this.clickCount === 1) {
            this.timeoutId = setTimeout(() => {
                if (this.clickCount === 1) {
                    this.dt.onCellClick(cellSelectedEventArg);
                }
                this.clickCount = 0;
                clearTimeout(this.timeoutId);
            }, this.timeout);
        }
    }
    onCellDBClick($event) {
        const cellSelectedEventArg = {
            rowIndex: this.rowIndex,
            colIndex: this.colIndex,
            column: this.column,
            rowItem: this.rowItem,
            cellComponent: this,
            rowComponent: this.rowComponent
        };
        this.dt.onCellDBClick(cellSelectedEventArg);
    }
    forceUpdate() {
        this.changeDetectorRef.markForCheck();
    }
    finishCellEdit($event) {
        if (this.editModel !== 'cell') {
            return;
        }
        this.isCellEdit = false;
        this.editorHost.viewContainerRef.clear();
        this.dynamicEditorActive = false;
        this.templateEditorActive = false;
        if (this.documentClickSubscription) {
            this.unSubscription(this.documentClickSubscription);
        }
        if (this.cellEditorClickSubscription) {
            this.unSubscription(this.cellEditorClickSubscription);
        }
        stopPropagationIfExist($event);
        this.dt.onCellEditEnd({
            rowIndex: this.rowIndex,
            colIndex: this.colIndex,
            column: this.column,
            rowItem: this.rowItem,
            cellComponent: this,
            rowComponent: this.rowComponent
        });
    }
    isCellEditEnable(column, rowItem) {
        if (this.editModel === 'cell') {
            return this.isCellEdit;
        }
        return this.isEditRow;
    }
    ngOnDestroy() {
        if (this.forceUpdateSubscription) {
            this.unSubscription(this.forceUpdateSubscription);
        }
        if (this.documentClickSubscription) {
            this.unSubscription(this.documentClickSubscription);
        }
        if (this.cellEditorClickSubscription) {
            this.unSubscription(this.cellEditorClickSubscription);
        }
        if (this.cellActionSubscription) {
            this.unSubscription(this.cellActionSubscription);
        }
        if (this.tdMousedownSubscription) {
            this.unSubscription(this.tdMousedownSubscription);
        }
        if (this.tdMouseupSubscription) {
            this.unSubscription(this.tdMouseupSubscription);
        }
    }
    unSubscription(sbscription) {
        if (sbscription) {
            sbscription.unsubscribe();
            /* eslint-disable-next-line no-param-reassign */
            sbscription = null;
        }
    }
    creatCellEditor() {
        let componentFactory;
        let editorComponent;
        switch (this.column.fieldType) {
            case 'number':
                editorComponent = InputNumberComponent;
                break;
            case 'select':
                editorComponent = SelectComponent;
                break;
            case 'treeSelect':
                editorComponent = TreeSelectComponent;
                break;
            default:
                this.templateEditorActive = true;
                break;
        }
        if (editorComponent) {
            componentFactory = this.componentFactoryResolver.resolveComponentFactory(editorComponent);
            const viewContainerRef = this.editorHost.viewContainerRef;
            viewContainerRef.clear();
            const componentRef = viewContainerRef.createComponent(componentFactory);
            const componentInstance = componentRef.instance;
            if (this.column.extraOptions) {
                componentFactory.inputs.forEach((input) => {
                    if (this.column.extraOptions[input.templateName]) {
                        componentInstance[input.propName] = this.column.extraOptions[input.templateName];
                    }
                });
            }
            componentInstance.writeValue(this.rowItem[this.column.field]);
            componentInstance.registerOnChange((value) => {
                this.rowItem[this.column.field] = value;
                if (this.column.extraOptions && this.column.extraOptions.finishEditingAfterValueChange) {
                    this.finishCellEdit();
                }
            });
            this.dynamicEditorActive = true;
        }
    }
    cellEditing($event) {
        $event.stopPropagation();
        $event.preventDefault();
        let beforeEdit = Promise.resolve(undefined);
        if (this.dt.beforeCellEdit) {
            beforeEdit = this.dt.beforeCellEdit(this.rowItem, this.column);
        }
        beforeEdit.then((extraOptions) => {
            if (extraOptions) {
                this.column.extraOptions = extraOptions;
            }
            this.dt.cellEditorClickEvent.emit($event);
            const cellSelectedEventArg = {
                rowIndex: this.rowIndex,
                colIndex: this.colIndex,
                column: this.column,
                rowItem: this.rowItem,
                cellComponent: this,
                rowComponent: this.rowComponent
            };
            if (this.column.editable && this.editModel === 'cell') {
                this.isCellEdit = true;
                this.creatCellEditor();
                this.documentClickSubscription = this.dt.documentClickEvent.subscribe(event => {
                    if (event === 'cancel' || (!this.cellRef.nativeElement.contains(event.target) && !this.clickInTd)) {
                        this.ngZone.run(() => {
                            this.finishCellEdit();
                        });
                    }
                    this.clickInTd = false;
                });
                this.cellEditorClickSubscription = this.dt.cellEditorClickEvent.subscribe(event => {
                    if (!this.cellRef.nativeElement.contains(event.target)) {
                        this.finishCellEdit();
                    }
                });
                this.dt.onCellEditStart(cellSelectedEventArg);
            }
        });
    }
    toggleChildTable(rowItem) {
        rowItem.$isChildTableOpen = !rowItem.$isChildTableOpen;
        this.dt.setRowChildToggleStatus(rowItem, rowItem.$isChildTableOpen);
    }
}
DataTableCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DataTableCellComponent, deps: [{ token: DATA_TABLE }, { token: i0.ChangeDetectorRef }, { token: i0.ComponentFactoryResolver }, { token: DATA_TABLE_ROW }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
DataTableCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: DataTableCellComponent, selector: "d-data-table-cell,[dDataTableCell]", inputs: { rowIndex: "rowIndex", colIndex: "colIndex", column: "column", rowItem: "rowItem", editModel: "editModel", isEditRow: "isEditRow", timeout: "timeout", tableLevel: "tableLevel" }, host: { properties: { "class.editable-cell": "this.isEditable" } }, viewQueries: [{ propertyName: "editorHost", first: true, predicate: EditorDirective, descendants: true }], usesOnChanges: true, ngImport: i0, template: "<ng-template *ngIf=\"!column.editable || fieldEditDenied\" [ngTemplateOutlet]=\"cellViewTemp\"></ng-template>\n\n<ng-container *ngIf=\"column.editable && !fieldEditDenied\">\n  <div *ngIf=\"!isCellEdit && column.extraOptions?.editableTip === 'btn'\" class=\"cell-container\">\n    <div class=\"cell-container-inner not-break modify-holder\">\n      <ng-template [ngTemplateOutlet]=\"cellViewTemp\"></ng-template>\n      <span class=\"cell-modify\" (click)=\"cellEditing($event)\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16px\" height=\"16px\" version=\"1.1\">\n          <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"none\" stroke-width=\"1\">\n            <path\n              d=\"M 9.48528 3.41421 L 10.8995 2 L 13.7279 4.82843 L 12.3137 6.24264 L 9.48528 3.41421 Z M 5.24264 13.3137 L 2.41421 13.3137 L 2.41421 10.4853 L 8.77817 4.12132 L 11.6066 6.94975 L 5.24264 13.3137 Z\"\n            />\n          </g>\n        </svg>\n      </span>\n    </div>\n  </div>\n  <div *ngIf=\"!isCellEdit && column.extraOptions?.editableTip !== 'btn'\" class=\"cell-editable\" (click)=\"cellEditing($event)\">\n    <ng-template [ngTemplateOutlet]=\"cellViewTemp\"></ng-template>\n  </div>\n  <div [ngClass]=\"{ 'edit-padding-fix': dynamicEditorActive }\">\n    <ng-template dEditorHost></ng-template>\n  </div>\n  <ng-template\n    *ngIf=\"templateEditorActive\"\n    [ngTemplateOutlet]=\"column.cellEditCmp ? column.cellEditCmp.template : column.fieldType === 'date' ? dateEditTempate : textEditTempate\"\n    [ngTemplateOutletContext]=\"{\n      rowIndex: rowIndex,\n      colIndex: colIndex,\n      column: column,\n      rowItem: rowItem,\n      $implicit: this,\n      row: rowComponent\n    }\"\n  >\n  </ng-template>\n</ng-container>\n\n<ng-template #cellViewTemp>\n  <ng-container *ngIf=\"column.nestedColumn\">\n    <span *ngIf=\"tableLevel > 0\" class=\"cell-placeholder\" [ngStyle]=\"{ width: tableLevel * column.nestedColumnIndent + 'px' }\"></span>\n    <span [style.visibility]=\"rowItem.children ? 'visible' : 'hidden'\" class=\"childtable-toggler\" (click)=\"toggleChildTable(rowItem)\">\n      <ng-container *ngIf=\"rowItem['$isChildTableOpen']\">\n        <svg\n          *ngIf=\"!column.extraOptions?.iconFoldTable\"\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          class=\"svg-icon svg-icon-close\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n            <rect x=\"4\" y=\"7\" width=\"8\" height=\"2\"></rect>\n          </g>\n        </svg>\n\n        <span *ngIf=\"column.extraOptions?.iconFoldTable\" [innerHTML]=\"column.extraOptions?.iconFoldTable | safe: 'html'\"></span>\n      </ng-container>\n      <ng-container *ngIf=\"!rowItem['$isChildTableOpen']\">\n        <svg\n          *ngIf=\"!column.extraOptions?.iconUnFoldTable\"\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          class=\"svg-icon svg-icon-open-folder\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n            <path\n              d=\"M8.75,4 L8.75,7.25 L12,7.25 L12,8.75 L8.749,8.75 L8.75,12 L7.25,12 L7.249,8.75 L4,8.75 L4,7.25 L7.25,7.25 L7.25,4 L8.75,4 Z\"\n            ></path>\n          </g>\n        </svg>\n        <span *ngIf=\"column.extraOptions?.iconUnFoldTable\" [innerHTML]=\"column.extraOptions?.iconUnFoldTable | safe: 'html'\"></span>\n      </ng-container>\n    </span>\n  </ng-container>\n  <ng-template\n    [ngTemplateOutlet]=\"column.cellCmp ? column.cellCmp.template : textViewTemplate\"\n    [ngTemplateOutletContext]=\"{\n      rowIndex: rowIndex,\n      colIndex: colIndex,\n      column: column,\n      rowItem: rowItem,\n      cellItem: rowItem[column.field],\n      cellValue: rowItem | disPlayCellValuePipe: rowIndex:column,\n      $implicit: this,\n      row: rowComponent,\n      tableLevel: tableLevel\n    }\"\n  >\n  </ng-template>\n</ng-template>\n\n<ng-template let-cellValue=\"cellValue\" #textViewTemplate>\n  <span [attr.title]=\"cellValue\">{{ cellValue }}</span>\n</ng-template>\n\n<ng-template let-rowIndex=\"rowIndex\" let-colIndex=\"colIndex\" let-rowItem=\"rowItem\" let-column=\"column\" let-cell=\"\" #textEditTempate>\n  <form class=\"form-inline edit-padding-fix\">\n    <div class=\"form-group full-width\">\n      <div class=\"input-group full-width\">\n        <input\n          [dAutoFocus]=\"cell && cell.isCellEdit\"\n          [type]=\"column.fieldType\"\n          class=\"devui-form-control\"\n          [name]=\"column.field\"\n          [(ngModel)]=\"rowItem[column.field]\"\n          [attr.maxlength]=\"column.extraOptions?.maxlength\"\n          [attr.minlength]=\"column.extraOptions?.minlength\"\n          [attr.pattern]=\"column.extraOptions?.pattern\"\n          (keydown.enter)=\"cell && cell.finishCellEdit($event)\"\n          [placeholder]=\"column.placeholder || ''\"\n        />\n      </div>\n    </div>\n  </form>\n</ng-template>\n\n<ng-template let-rowIndex=\"rowIndex\" let-colIndex=\"colIndex\" let-rowItem=\"rowItem\" let-column=\"column\" let-cell=\"\" #dateEditTempate>\n  <form class=\"form-inline edit-padding-fix\">\n    <div class=\"devui-form-group\">\n      <div class=\"devui-input-group devui-dropdown-origin\">\n        <input\n          class=\"devui-form-control search\"\n          [name]=\"column.field\"\n          [(ngModel)]=\"rowItem[column.field]\"\n          dDatepicker\n          appendToBody\n          [dateFormat]=\"column.extraOptions?.dateFormat\"\n          #datePicker=\"datepicker\"\n          (ngModelChange)=\"!column.extraOptions?.showTime && cell && cell.finishCellEdit()\"\n          [maxDate]=\"column.extraOptions?.maxDate\"\n          [minDate]=\"column.extraOptions?.minDate\"\n          [cssClass]=\"column.extraOptions?.cssClass\"\n          [dateConfig]=\"column.extraOptions?.dateConfig\"\n          [locale]=\"column.extraOptions?.locale\"\n          [customViewTemplate]=\"column.extraOptions?.customViewTemplate\"\n          [disabled]=\"column.extraOptions?.disabled\"\n          [placeholder]=\"column.placeholder || ''\"\n          [autoOpen]=\"true\"\n          [showTime]=\"column.extraOptions?.showTime\"\n        />\n        <div class=\"devui-input-group-addon\" (click)=\"datePicker.toggle()\">\n          <i class=\"icon icon-calendar\"></i>\n        </div>\n      </div>\n    </div>\n  </form>\n</ng-template>\n", components: [{ type: i1.DatePickerAppendToBodyComponent, selector: "[dDatepicker][appendToBody]", inputs: ["appendToBodyDirections", "locale", "cssClass", "disabled", "dateConverter", "customViewTemplate", "autoOpen", "showAnimation", "showTime", "dateConfig", "dateFormat", "maxDate", "minDate"], outputs: ["selectedDateChange"], exportAs: ["datepicker"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.EditorDirective, selector: "[dEditorHost]" }, { type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i4.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i5.AutoFocusDirective, selector: "[dAutoFocus]", inputs: ["dAutoFocus"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i4.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { type: i4.MinLengthValidator, selector: "[minlength][formControlName],[minlength][formControl],[minlength][ngModel]", inputs: ["minlength"] }, { type: i4.PatternValidator, selector: "[pattern][formControlName],[pattern][formControl],[pattern][ngModel]", inputs: ["pattern"] }], pipes: { "safe": i6.SafePipe, "disPlayCellValuePipe": i7.DisPlayCellValuePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DataTableCellComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-data-table-cell,[dDataTableCell]', preserveWhitespaces: false, template: "<ng-template *ngIf=\"!column.editable || fieldEditDenied\" [ngTemplateOutlet]=\"cellViewTemp\"></ng-template>\n\n<ng-container *ngIf=\"column.editable && !fieldEditDenied\">\n  <div *ngIf=\"!isCellEdit && column.extraOptions?.editableTip === 'btn'\" class=\"cell-container\">\n    <div class=\"cell-container-inner not-break modify-holder\">\n      <ng-template [ngTemplateOutlet]=\"cellViewTemp\"></ng-template>\n      <span class=\"cell-modify\" (click)=\"cellEditing($event)\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16px\" height=\"16px\" version=\"1.1\">\n          <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"none\" stroke-width=\"1\">\n            <path\n              d=\"M 9.48528 3.41421 L 10.8995 2 L 13.7279 4.82843 L 12.3137 6.24264 L 9.48528 3.41421 Z M 5.24264 13.3137 L 2.41421 13.3137 L 2.41421 10.4853 L 8.77817 4.12132 L 11.6066 6.94975 L 5.24264 13.3137 Z\"\n            />\n          </g>\n        </svg>\n      </span>\n    </div>\n  </div>\n  <div *ngIf=\"!isCellEdit && column.extraOptions?.editableTip !== 'btn'\" class=\"cell-editable\" (click)=\"cellEditing($event)\">\n    <ng-template [ngTemplateOutlet]=\"cellViewTemp\"></ng-template>\n  </div>\n  <div [ngClass]=\"{ 'edit-padding-fix': dynamicEditorActive }\">\n    <ng-template dEditorHost></ng-template>\n  </div>\n  <ng-template\n    *ngIf=\"templateEditorActive\"\n    [ngTemplateOutlet]=\"column.cellEditCmp ? column.cellEditCmp.template : column.fieldType === 'date' ? dateEditTempate : textEditTempate\"\n    [ngTemplateOutletContext]=\"{\n      rowIndex: rowIndex,\n      colIndex: colIndex,\n      column: column,\n      rowItem: rowItem,\n      $implicit: this,\n      row: rowComponent\n    }\"\n  >\n  </ng-template>\n</ng-container>\n\n<ng-template #cellViewTemp>\n  <ng-container *ngIf=\"column.nestedColumn\">\n    <span *ngIf=\"tableLevel > 0\" class=\"cell-placeholder\" [ngStyle]=\"{ width: tableLevel * column.nestedColumnIndent + 'px' }\"></span>\n    <span [style.visibility]=\"rowItem.children ? 'visible' : 'hidden'\" class=\"childtable-toggler\" (click)=\"toggleChildTable(rowItem)\">\n      <ng-container *ngIf=\"rowItem['$isChildTableOpen']\">\n        <svg\n          *ngIf=\"!column.extraOptions?.iconFoldTable\"\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          class=\"svg-icon svg-icon-close\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n            <rect x=\"4\" y=\"7\" width=\"8\" height=\"2\"></rect>\n          </g>\n        </svg>\n\n        <span *ngIf=\"column.extraOptions?.iconFoldTable\" [innerHTML]=\"column.extraOptions?.iconFoldTable | safe: 'html'\"></span>\n      </ng-container>\n      <ng-container *ngIf=\"!rowItem['$isChildTableOpen']\">\n        <svg\n          *ngIf=\"!column.extraOptions?.iconUnFoldTable\"\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          class=\"svg-icon svg-icon-open-folder\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n            <path\n              d=\"M8.75,4 L8.75,7.25 L12,7.25 L12,8.75 L8.749,8.75 L8.75,12 L7.25,12 L7.249,8.75 L4,8.75 L4,7.25 L7.25,7.25 L7.25,4 L8.75,4 Z\"\n            ></path>\n          </g>\n        </svg>\n        <span *ngIf=\"column.extraOptions?.iconUnFoldTable\" [innerHTML]=\"column.extraOptions?.iconUnFoldTable | safe: 'html'\"></span>\n      </ng-container>\n    </span>\n  </ng-container>\n  <ng-template\n    [ngTemplateOutlet]=\"column.cellCmp ? column.cellCmp.template : textViewTemplate\"\n    [ngTemplateOutletContext]=\"{\n      rowIndex: rowIndex,\n      colIndex: colIndex,\n      column: column,\n      rowItem: rowItem,\n      cellItem: rowItem[column.field],\n      cellValue: rowItem | disPlayCellValuePipe: rowIndex:column,\n      $implicit: this,\n      row: rowComponent,\n      tableLevel: tableLevel\n    }\"\n  >\n  </ng-template>\n</ng-template>\n\n<ng-template let-cellValue=\"cellValue\" #textViewTemplate>\n  <span [attr.title]=\"cellValue\">{{ cellValue }}</span>\n</ng-template>\n\n<ng-template let-rowIndex=\"rowIndex\" let-colIndex=\"colIndex\" let-rowItem=\"rowItem\" let-column=\"column\" let-cell=\"\" #textEditTempate>\n  <form class=\"form-inline edit-padding-fix\">\n    <div class=\"form-group full-width\">\n      <div class=\"input-group full-width\">\n        <input\n          [dAutoFocus]=\"cell && cell.isCellEdit\"\n          [type]=\"column.fieldType\"\n          class=\"devui-form-control\"\n          [name]=\"column.field\"\n          [(ngModel)]=\"rowItem[column.field]\"\n          [attr.maxlength]=\"column.extraOptions?.maxlength\"\n          [attr.minlength]=\"column.extraOptions?.minlength\"\n          [attr.pattern]=\"column.extraOptions?.pattern\"\n          (keydown.enter)=\"cell && cell.finishCellEdit($event)\"\n          [placeholder]=\"column.placeholder || ''\"\n        />\n      </div>\n    </div>\n  </form>\n</ng-template>\n\n<ng-template let-rowIndex=\"rowIndex\" let-colIndex=\"colIndex\" let-rowItem=\"rowItem\" let-column=\"column\" let-cell=\"\" #dateEditTempate>\n  <form class=\"form-inline edit-padding-fix\">\n    <div class=\"devui-form-group\">\n      <div class=\"devui-input-group devui-dropdown-origin\">\n        <input\n          class=\"devui-form-control search\"\n          [name]=\"column.field\"\n          [(ngModel)]=\"rowItem[column.field]\"\n          dDatepicker\n          appendToBody\n          [dateFormat]=\"column.extraOptions?.dateFormat\"\n          #datePicker=\"datepicker\"\n          (ngModelChange)=\"!column.extraOptions?.showTime && cell && cell.finishCellEdit()\"\n          [maxDate]=\"column.extraOptions?.maxDate\"\n          [minDate]=\"column.extraOptions?.minDate\"\n          [cssClass]=\"column.extraOptions?.cssClass\"\n          [dateConfig]=\"column.extraOptions?.dateConfig\"\n          [locale]=\"column.extraOptions?.locale\"\n          [customViewTemplate]=\"column.extraOptions?.customViewTemplate\"\n          [disabled]=\"column.extraOptions?.disabled\"\n          [placeholder]=\"column.placeholder || ''\"\n          [autoOpen]=\"true\"\n          [showTime]=\"column.extraOptions?.showTime\"\n        />\n        <div class=\"devui-input-group-addon\" (click)=\"datePicker.toggle()\">\n          <i class=\"icon icon-calendar\"></i>\n        </div>\n      </div>\n    </div>\n  </form>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [DATA_TABLE]
                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ComponentFactoryResolver }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DATA_TABLE_ROW]
                }] }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { editorHost: [{
                type: ViewChild,
                args: [EditorDirective]
            }], rowIndex: [{
                type: Input
            }], colIndex: [{
                type: Input
            }], column: [{
                type: Input
            }], rowItem: [{
                type: Input
            }], editModel: [{
                type: Input
            }], isEditRow: [{
                type: Input
            }], timeout: [{
                type: Input
            }], tableLevel: [{
                type: Input
            }], isEditable: [{
                type: HostBinding,
                args: ['class.editable-cell']
            }] } });
//# sourceMappingURL=data:application/json;base64,