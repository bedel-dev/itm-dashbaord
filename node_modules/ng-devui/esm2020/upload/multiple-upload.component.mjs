import { DOCUMENT } from '@angular/common';
import { Component, EventEmitter, forwardRef, Inject, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { I18nService } from 'ng-devui/i18n';
import { ToastService } from 'ng-devui/toast';
import { from } from 'rxjs';
import { debounceTime, last, map, mergeMap } from 'rxjs/operators';
import { IFileOptions, IUploadOptions, UploadStatus } from './file-uploader.types';
import { MultipleUploadViewComponent } from './multiple-upload-view.component';
import { SelectFiles } from './select-files.utils';
import * as i0 from "@angular/core";
import * as i1 from "./select-files.utils";
import * as i2 from "ng-devui/i18n";
import * as i3 from "ng-devui/toast";
import * as i4 from "ng-devui/progress";
import * as i5 from "ng-devui/button";
import * as i6 from "./multiple-upload-view.component";
import * as i7 from "./file-drop.directive";
import * as i8 from "@angular/common";
export class MultipleUploadComponent {
    constructor(selectFiles, i18n, doc, toastService) {
        this.selectFiles = selectFiles;
        this.i18n = i18n;
        this.doc = doc;
        this.toastService = toastService;
        this.autoUpload = false;
        this.withoutBtn = false;
        this.showTip = false;
        this.uploadedFiles = [];
        this.oneTimeUpload = false;
        this.disabled = false;
        this.enableDrop = false;
        this.successEvent = new EventEmitter();
        this.errorEvent = new EventEmitter();
        this.deleteUploadedFileEvent = new EventEmitter();
        this.fileDrop = new EventEmitter();
        this.fileOver = new EventEmitter();
        this.fileSelect = new EventEmitter();
        this.isDropOVer = false;
        this.errorMsg = [];
        this.UploadStatus = UploadStatus;
        this.onChange = (_) => null;
        this.onTouched = () => null;
        this.document = this.doc;
    }
    ngOnInit() {
        this.i18nText = this.i18n.getI18nText().upload;
        this.i18nCommonText = this.i18n.getI18nText().common;
        this.i18nSubscription = this.i18n.langChange().subscribe((data) => {
            this.i18nText = data.upload;
            this.i18nCommonText = data.common;
        });
    }
    writeValue(files) {
        if (files) {
            const simulateFiles = from(this.simulateSelectFiles(files)).pipe(mergeMap(file => file));
            this._dealFiles(simulateFiles);
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    simulateSelectFiles(files) {
        return new Promise((resolve) => {
            resolve(Array.prototype.slice.call(files));
        });
    }
    _dealFiles(observale) {
        this.multipleUploadViewComponent.resetSameNameFiles();
        observale.pipe(map(file => this.multipleUploadViewComponent.addFile(file)), debounceTime(100))
            .subscribe(() => {
            this.checkValid();
            const sameNameFiles = this.multipleUploadViewComponent.getSameNameFiles();
            if (this.uploadOptions.checkSameName && sameNameFiles.length) {
                this.alertMsg(this.i18nText.getExistSameNameFilesMsg(sameNameFiles));
            }
            this.onChange(this.multipleUploadViewComponent.fileUploaders.map(fileUploader => fileUploader.file));
            const selectedFiles = this.multipleUploadViewComponent.fileUploaders
                .filter(fileUploader => fileUploader.status === UploadStatus.preLoad)
                .map(fileUploader => fileUploader.file);
            this.onFileSelect(selectedFiles);
            if (this.autoUpload) {
                this.upload();
            }
        }, (error) => {
            this.alertMsg(error.message);
        });
    }
    checkValid() {
        let totalFileSize = 0;
        this.multipleUploadViewComponent.fileUploaders.forEach(fileUploader => {
            totalFileSize += fileUploader.file.size;
            const checkResult = this.selectFiles._validateFiles(fileUploader.file, this.fileOptions.accept, fileUploader.uploadOptions);
            if (checkResult && checkResult.checkError) {
                this.multipleUploadViewComponent.deletePreUploadFile(fileUploader.file);
                this.alertMsg(checkResult.errorMsg);
                return;
            }
        });
        if (this.oneTimeUpload) {
            const checkResult = this.selectFiles.checkAllFilesSize(totalFileSize, this.uploadOptions.maximumSize);
            if (checkResult && checkResult.checkError) {
                this.multipleUploadViewComponent.removeFiles();
                this.alertMsg(checkResult.errorMsg);
            }
        }
    }
    onClick(event) {
        if (this.disabled) {
            return;
        }
        this._dealFiles(this.selectFiles.triggerSelectFiles(this.fileOptions, this.uploadOptions));
    }
    onFileDrop(files) {
        this.isDropOVer = false;
        this._dealFiles(this.selectFiles.triggerDropFiles(this.fileOptions, this.uploadOptions, files));
        this.fileDrop.emit(files);
    }
    onFileOver(event) {
        this.isDropOVer = event;
        this.fileOver.emit(event);
    }
    onFileSelect(files) {
        this.fileSelect.emit(files);
    }
    handleOneTimeUpload(uploadObservable) {
        uploadObservable
            .pipe(last())
            .subscribe((results) => {
            this.successEvent.emit(results);
            results.forEach((result) => {
                this.multipleUploadViewComponent.uploadedFilesComponent.addFile(result.file);
            });
        }, (error) => {
            this.errorEvent.emit(error);
        });
    }
    handleUpload(uploadObservable) {
        uploadObservable
            .pipe(last())
            .subscribe((results) => {
            const successResult = results.filter(item => item.status === UploadStatus.uploaded).map(item => {
                return { file: item.file, response: item.response };
            });
            const failResult = results.filter(item => item.status === UploadStatus.failed).map(item => {
                return { file: item.file, response: item.response };
            });
            if (failResult.length) {
                this.errorEvent.emit(failResult);
            }
            if (successResult.length) {
                this.successEvent.emit(successResult);
                successResult.forEach((result) => {
                    this.multipleUploadViewComponent.uploadedFilesComponent.addFile(result.file);
                });
            }
        });
    }
    upload(event, fileUploader) {
        if (event) {
            event.stopPropagation();
        }
        this.canUpload().then((canUpload) => {
            if (!canUpload) {
                this.multipleUploadViewComponent.removeFiles();
                return;
            }
            const tempNode = this.document.getElementById('d-upload-temp');
            if (tempNode) {
                this.document.body.removeChild(tempNode);
            }
            const uploadObservable = this.oneTimeUpload ?
                this.multipleUploadViewComponent.oneTimeUpload() :
                this.multipleUploadViewComponent.upload(fileUploader, true);
            if (this.oneTimeUpload) {
                this.handleOneTimeUpload(uploadObservable);
            }
            else {
                this.handleUpload(uploadObservable);
            }
        });
    }
    canUpload() {
        let uploadResult = Promise.resolve(true);
        if (this.beforeUpload) {
            const result = this.beforeUpload(this.multipleUploadViewComponent.getFullFiles());
            if (typeof result !== 'undefined') {
                if (result.then) {
                    uploadResult = result;
                }
                else if (result.subscribe) {
                    uploadResult = result.toPromise();
                }
                else {
                    uploadResult = Promise.resolve(result);
                }
            }
        }
        return uploadResult;
    }
    _onDeleteUploadedFile(filePath) {
        this.deleteUploadedFileEvent.emit(filePath);
        this.onChange(this.multipleUploadViewComponent.fileUploaders.map(fileUploader => fileUploader.file));
    }
    deleteFile($event, file) {
        $event.stopPropagation();
        this.multipleUploadViewComponent.deleteFile(file);
    }
    alertMsg(errorMsg) {
        this.toastService.open({
            value: [{ severity: 'warn', content: errorMsg }],
        });
    }
    getStatus() {
        let uploadingCount = 0;
        let uploadedCount = 0;
        let failedCount = 0;
        const filesCount = this.multipleUploadViewComponent.fileUploaders.length;
        this.multipleUploadViewComponent.fileUploaders.forEach((fileUploader) => {
            if (fileUploader.status === UploadStatus.uploading) {
                uploadingCount++;
            }
            else if (fileUploader.status === UploadStatus.uploaded) {
                uploadedCount++;
            }
            else if (fileUploader.status === UploadStatus.failed) {
                failedCount++;
            }
        });
        if (failedCount > 0) {
            this.uploadTips = this.i18nText.getFailedFilesCount(failedCount);
            return 'failed';
        }
        if (uploadingCount > 0) {
            this.uploadTips = this.i18nText.getUploadingFilesCount(uploadingCount, filesCount);
            return 'uploading';
        }
        if (uploadedCount === filesCount && uploadedCount !== 0) {
            return 'uploaded';
        }
        if (filesCount !== 0) {
            this.uploadTips = this.i18nText.getSelectedFilesCount(filesCount);
            return 'selected';
        }
    }
    cancelUpload() {
        this.multipleUploadViewComponent.fileUploaders.filter((fileUploader) => fileUploader.status === UploadStatus.uploading)
            .forEach((fileUploader) => {
            fileUploader.status = UploadStatus.failed;
        });
    }
    ngOnDestroy() {
        if (this.i18nSubscription) {
            this.i18nSubscription.unsubscribe();
        }
    }
}
MultipleUploadComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: MultipleUploadComponent, deps: [{ token: i1.SelectFiles }, { token: i2.I18nService }, { token: DOCUMENT }, { token: i3.ToastService }], target: i0.ɵɵFactoryTarget.Component });
MultipleUploadComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: MultipleUploadComponent, selector: "d-multiple-upload", inputs: { uploadOptions: "uploadOptions", fileOptions: "fileOptions", autoUpload: "autoUpload", withoutBtn: "withoutBtn", showTip: "showTip", uploadedFiles: "uploadedFiles", uploadedFilesRef: "uploadedFilesRef", preloadFilesRef: "preloadFilesRef", filePath: "filePath", placeholderText: "placeholderText", uploadText: "uploadText", confirmText: "confirmText", oneTimeUpload: "oneTimeUpload", disabled: "disabled", beforeUpload: "beforeUpload", setCustomUploadOptions: "setCustomUploadOptions", enableDrop: "enableDrop" }, outputs: { successEvent: "successEvent", errorEvent: "errorEvent", deleteUploadedFileEvent: "deleteUploadedFileEvent", fileDrop: "fileDrop", fileOver: "fileOver", fileSelect: "fileSelect" }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            useExisting: forwardRef(() => MultipleUploadComponent),
            multi: true
        }
    ], viewQueries: [{ propertyName: "multipleUploadViewComponent", first: true, predicate: ["dMultipleUploadView"], descendants: true, static: true }], exportAs: ["dMultipleUpload"], ngImport: i0, template: "<div\n  d-file-drop\n  [enableDrop]=\"enableDrop\"\n  (fileDrop)=\"onFileDrop($event)\"\n  (fileOver)=\"onFileOver($event)\"\n  (fileSelect)=\"onFileSelect($event)\"\n  [ngStyle]=\"{ border: isDropOVer ? '1px solid #15bf15' : '0' }\"\n  style=\"display: flex\"\n>\n  <div class=\"devui-input-group\" [class.disabled]=\"disabled\" (click)=\"onClick($event)\">\n    <div *ngIf=\"dMultipleUploadView.fileUploaders.length === 0\" class=\"devui-form-control devui-upload-placeholder\">\n      {{ placeholderText ? placeholderText : i18nText?.chooseFile }}\n    </div>\n    <ul *ngIf=\"dMultipleUploadView.fileUploaders.length > 0\" class=\"devui-form-control devui-files-list\">\n      <li\n        *ngFor=\"let fileUploader of dMultipleUploadView.fileUploaders; let index = index\"\n        class=\"devui-file-item devui-file-tag\"\n        style=\"display: inline-block; margin: 0 2px 2px 0\"\n        title=\"{{ fileUploader.file.name }}\"\n      >\n        <span class=\"devui-filename {{ fileUploader.status === UploadStatus.failed ? 'devui-failed-color' : '' }}\">\n          {{ fileUploader.file.name }}\n        </span>\n        <span\n          class=\"icon icon-close {{ fileUploader.status === UploadStatus.failed ? 'devui-upload-delete-file-button' : '' }}\n          {{\n            fileUploader.status === UploadStatus.uploading || fileUploader.status === UploadStatus.uploaded ? 'devui-uploading-delete' : ''\n          }}\"\n          (click)=\"deleteFile($event, fileUploader.file)\"\n        >\n        </span>\n        <div *ngIf=\"fileUploader.status === UploadStatus.uploading\" class=\"icon devui-upload-progress\">\n          <d-progress\n            [type]=\"'circle'\"\n            [percentage]=\"fileUploader.percentage\"\n            [strokeColor]=\"'#50D4AB'\"\n            [strokeWidth]=\"8\"\n            [showContent]=\"false\"\n          >\n          </d-progress>\n        </div>\n        <span *ngIf=\"fileUploader.status === UploadStatus.failed\" class=\"icon icon-running\" (click)=\"upload($event, fileUploader)\"> </span>\n        <span *ngIf=\"fileUploader.status === UploadStatus.uploaded\" class=\"icon icon-right\"></span>\n      </li>\n    </ul>\n    <span class=\"devui-input-group-addon\">\n      <svg class=\"svg-icon-dot\" height=\"1em\" width=\"1em\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"m400.31892 176.970574c0-61.574381 50.113351-111.680569 111.679545-111.680569 61.576427 0 111.680569 50.106188 111.680569 111.680569 0 61.568241-50.104141 111.679545-111.680569 111.679545-61.566194 0-111.679545-50.111304-111.679545-111.679545zm0 335.028403c0-61.568241 50.113351-111.678522 111.679545-111.678522 61.576427 0 111.680569 50.110281 111.680569 111.678522 0 61.574381-50.105165 111.682615-111.680569 111.682615-61.566194 0-111.679545-50.108235-111.679545-111.682615zm0 335.037612c0-61.572334 50.113351-111.679545 111.679545-111.679545 61.575404 0 111.680569 50.107211 111.680569 111.679545 0 61.567217-50.105165 111.672382-111.680569 111.672382-61.566194 0-111.679545-50.105164-111.679545-111.672382zm0 0\"\n        />\n      </svg>\n    </span>\n  </div>\n  <d-button\n    *ngIf=\"!autoUpload && !withoutBtn\"\n    [disabled]=\"disabled\"\n    (btnClick)=\"upload($event)\"\n    [style.margin-left.px]=\"8\"\n    bsStyle=\"common\"\n  >\n    {{ uploadText || i18nText?.upload }}\n  </d-button>\n</div>\n<ng-container *ngIf=\"showTip\">\n  <div class=\"devui-upload-tip\">\n    <span *ngIf=\"getStatus() === 'selected'\" class=\"devui-loading\">{{ uploadTips }}</span>\n    <span *ngIf=\"getStatus() === 'uploading'\" class=\"devui-loading\">\n      <span style=\"margin-right: 8px\">{{ uploadTips }}</span>\n      <a (click)=\"cancelUpload()\">{{ i18nText?.cancelUpload }}</a>\n    </span>\n    <div *ngIf=\"getStatus() === 'uploaded'\" class=\"devui-loaded\">\n      <i class=\"icon icon-right-o\"></i>\n      <span style=\"vertical-align: middle\">{{ i18nText?.uploadSuccess }}</span>\n    </div>\n    <div *ngIf=\"getStatus() === 'failed'\" class=\"devui-upload-failed\">\n      <i class=\"icon icon-info-o\"></i>\n      <span style=\"vertical-align: middle\">\n        <span style=\"margin-right: 8px\">{{ uploadTips }}</span>\n        <a (click)=\"upload($event)\">{{ i18nText?.reUpload }}</a>\n      </span>\n    </div>\n  </div>\n</ng-container>\n<d-multiple-upload-view\n  #dMultipleUploadView\n  [uploadedFiles]=\"uploadedFiles\"\n  [uploadedFilesRef]=\"uploadedFilesRef\"\n  [preloadFilesRef]=\"preloadFilesRef\"\n  [uploadOptions]=\"uploadOptions\"\n  [filePath]=\"filePath\"\n  [setCustomUploadOptions]=\"setCustomUploadOptions\"\n  (deleteUploadedFileEvent)=\"_onDeleteUploadedFile($event)\"\n>\n</d-multiple-upload-view>\n", styles: [".devui-font-size-base{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-font-base{font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400;line-height:1.5}.devui-font-size-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px)}.devui-font-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px);font-weight:700;line-height:1.5}.devui-font-size-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px)}.devui-font-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px);font-weight:700;line-height:1.5}.devui-font-size-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px)}.devui-font-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px);font-weight:700;line-height:1.5}.devui-input-group{position:relative;display:flex;align-items:center;border-collapse:separate;width:100%}.devui-input-group:not(.disabled):hover .devui-input-group-addon{border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0);background-color:#f2f2f3;background-color:var(--devui-dividing-line, #f2f2f3);font-weight:700}.devui-input-group:not(.disabled):hover .devui-form-control{border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0);border-right-color:#d7d8da;border-right-color:var(--devui-form-control-line, #d7d8da)}.devui-input-group:not(.disabled) .devui-input-group-addon:active{border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0);border-right-color:#d7d8da;border-right-color:var(--devui-form-control-line, #d7d8da);background-color:#f2f2f3;background-color:var(--devui-dividing-line, #f2f2f3)}.devui-input-group .devui-input-group-addon{width:36px;white-space:nowrap;font-size:16px;font-size:var(--devui-font-size-icon, 16px);font-weight:400;line-height:1;color:#252b3a;color:var(--devui-text, #252b3a);background-color:#f5f5f5;background-color:var(--devui-area, #f5f5f5);border-top:1px solid #d7d8da;border-top:1px solid var(--devui-form-control-line, #d7d8da);border-bottom:1px solid #d7d8da;border-bottom:1px solid var(--devui-form-control-line, #d7d8da);border-right:1px solid #d7d8da;border-right:1px solid var(--devui-form-control-line, #d7d8da);border-radius:0 2px 2px 0;border-radius:0 var(--devui-border-radius, 2px) var(--devui-border-radius, 2px) 0;transition:border-color .3s cubic-bezier(.645,.045,.355,1),background-color .3s cubic-bezier(.645,.045,.355,1);transition:border-color var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1)),background-color var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1));cursor:pointer;height:100%;position:relative;display:inline-block}.devui-input-group .devui-input-group-addon svg{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}.devui-input-group .devui-form-control{cursor:pointer;display:block;width:100%;min-height:28px;height:unset;padding:4px 8px;font-size:12px;font-size:var(--devui-font-size, 12px);line-height:1.5;background-image:none;border:1px solid #d7d8da;border:1px solid var(--devui-form-control-line, #d7d8da);border-radius:2px 0 0 2px;border-radius:var(--devui-border-radius, 2px) 0 0 var(--devui-border-radius, 2px);transition:border-color .3s cubic-bezier(.645,.045,.355,1),box-shadow .3s cubic-bezier(.645,.045,.355,1);transition:border-color var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1)),box-shadow var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1))}.devui-input-group .devui-form-control.devui-files-list{max-height:52px;padding:2px 2px 0;overflow-x:hidden;overflow-y:auto;max-width:100%}.devui-input-group .devui-form-control.devui-files-list .devui-file-item{height:22px;line-height:22px;padding:0 48px 0 12px}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag{position:relative;background-color:#e9edfa;background-color:var(--devui-label-bg, #e9edfa);border-radius:2px;border-radius:var(--devui-border-radius, 2px);max-width:100%}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .devui-filename{height:100%;display:inline-block;vertical-align:middle;max-width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .icon{position:absolute;cursor:pointer;right:8px;top:50%;transform:translateY(-50%)}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .icon.icon-right{color:#50d4ab;color:var(--devui-success, #50d4ab)}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .icon.icon-running{font-size:16px}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .icon.devui-upload-delete-file-button{margin-right:20px}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .icon.devui-uploading-delete,.devui-input-group .devui-form-control.devui-files-list .devui-file-tag:hover .devui-upload-progress,.devui-input-group .devui-form-control.devui-files-list .devui-file-tag:hover .icon-right{display:none}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag:hover .icon-close{display:inline-block}.devui-input-group.disabled .devui-upload-placeholder{color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-input-group .devui-upload-placeholder{max-height:28px;max-width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#babbc0;color:var(--devui-placeholder, #babbc0)}:host ::ng-deep .devui-upload-progress{width:16px;height:16px}.devui-input-group.disabled .devui-form-control,.devui-input-group.disabled .devui-input-group-addon{cursor:not-allowed;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-color:#dfe1e6;border-color:var(--devui-disabled-line, #dfe1e6);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}svg.svg-icon-dot>path{fill:#71757f;fill:var(--devui-icon-text, #71757f)}.devui-form-control{outline:none}.devui-input-group.disabled .devui-upload-delete-file-button{cursor:not-allowed;pointer-events:none}.devui-loading{color:#71757f;color:var(--devui-aide-text, #71757f)}.devui-failed-color{color:#f66f6a;color:var(--devui-danger, #f66f6a)}.devui-upload-tip{height:18px;margin-top:8px;font-size:12px}.devui-upload-tip .icon{margin-right:8px;font-size:16px;vertical-align:middle}.devui-upload-tip .icon-right-o{color:#50d4ab;color:var(--devui-success, #50d4ab)}.devui-upload-tip .devui-upload-failed{color:#f66f6a;color:var(--devui-danger, #f66f6a)}.devui-upload-tip a{color:#526ecc;color:var(--devui-link, #526ecc);cursor:pointer}\n"], components: [{ type: i4.ProgressComponent, selector: "d-progress", inputs: ["percentage", "percentageText", "barbgcolor", "strokeColor", "height", "strokeWidth", "isCircle", "type", "showContent"] }, { type: i5.ButtonComponent, selector: "d-button", inputs: ["id", "type", "bsStyle", "shape", "bsSize", "bsPosition", "bordered", "icon", "disabled", "showLoading", "width", "autofocus", "loadingTemplateRef"], outputs: ["btnClick"] }, { type: i6.MultipleUploadViewComponent, selector: "d-multiple-upload-view", inputs: ["uploadOptions", "preloadFilesRef", "uploadedFiles", "uploadedFilesRef", "filePath", "setCustomUploadOptions"], outputs: ["deleteUploadedFileEvent"] }], directives: [{ type: i7.FileDropDirective, selector: "[d-file-drop]", inputs: ["enableDrop", "isSingle"], outputs: ["fileOver", "fileDrop"] }, { type: i8.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i8.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: MultipleUploadComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-multiple-upload', exportAs: 'dMultipleUpload', preserveWhitespaces: false, providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => MultipleUploadComponent),
                            multi: true
                        }
                    ], template: "<div\n  d-file-drop\n  [enableDrop]=\"enableDrop\"\n  (fileDrop)=\"onFileDrop($event)\"\n  (fileOver)=\"onFileOver($event)\"\n  (fileSelect)=\"onFileSelect($event)\"\n  [ngStyle]=\"{ border: isDropOVer ? '1px solid #15bf15' : '0' }\"\n  style=\"display: flex\"\n>\n  <div class=\"devui-input-group\" [class.disabled]=\"disabled\" (click)=\"onClick($event)\">\n    <div *ngIf=\"dMultipleUploadView.fileUploaders.length === 0\" class=\"devui-form-control devui-upload-placeholder\">\n      {{ placeholderText ? placeholderText : i18nText?.chooseFile }}\n    </div>\n    <ul *ngIf=\"dMultipleUploadView.fileUploaders.length > 0\" class=\"devui-form-control devui-files-list\">\n      <li\n        *ngFor=\"let fileUploader of dMultipleUploadView.fileUploaders; let index = index\"\n        class=\"devui-file-item devui-file-tag\"\n        style=\"display: inline-block; margin: 0 2px 2px 0\"\n        title=\"{{ fileUploader.file.name }}\"\n      >\n        <span class=\"devui-filename {{ fileUploader.status === UploadStatus.failed ? 'devui-failed-color' : '' }}\">\n          {{ fileUploader.file.name }}\n        </span>\n        <span\n          class=\"icon icon-close {{ fileUploader.status === UploadStatus.failed ? 'devui-upload-delete-file-button' : '' }}\n          {{\n            fileUploader.status === UploadStatus.uploading || fileUploader.status === UploadStatus.uploaded ? 'devui-uploading-delete' : ''\n          }}\"\n          (click)=\"deleteFile($event, fileUploader.file)\"\n        >\n        </span>\n        <div *ngIf=\"fileUploader.status === UploadStatus.uploading\" class=\"icon devui-upload-progress\">\n          <d-progress\n            [type]=\"'circle'\"\n            [percentage]=\"fileUploader.percentage\"\n            [strokeColor]=\"'#50D4AB'\"\n            [strokeWidth]=\"8\"\n            [showContent]=\"false\"\n          >\n          </d-progress>\n        </div>\n        <span *ngIf=\"fileUploader.status === UploadStatus.failed\" class=\"icon icon-running\" (click)=\"upload($event, fileUploader)\"> </span>\n        <span *ngIf=\"fileUploader.status === UploadStatus.uploaded\" class=\"icon icon-right\"></span>\n      </li>\n    </ul>\n    <span class=\"devui-input-group-addon\">\n      <svg class=\"svg-icon-dot\" height=\"1em\" width=\"1em\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"m400.31892 176.970574c0-61.574381 50.113351-111.680569 111.679545-111.680569 61.576427 0 111.680569 50.106188 111.680569 111.680569 0 61.568241-50.104141 111.679545-111.680569 111.679545-61.566194 0-111.679545-50.111304-111.679545-111.679545zm0 335.028403c0-61.568241 50.113351-111.678522 111.679545-111.678522 61.576427 0 111.680569 50.110281 111.680569 111.678522 0 61.574381-50.105165 111.682615-111.680569 111.682615-61.566194 0-111.679545-50.108235-111.679545-111.682615zm0 335.037612c0-61.572334 50.113351-111.679545 111.679545-111.679545 61.575404 0 111.680569 50.107211 111.680569 111.679545 0 61.567217-50.105165 111.672382-111.680569 111.672382-61.566194 0-111.679545-50.105164-111.679545-111.672382zm0 0\"\n        />\n      </svg>\n    </span>\n  </div>\n  <d-button\n    *ngIf=\"!autoUpload && !withoutBtn\"\n    [disabled]=\"disabled\"\n    (btnClick)=\"upload($event)\"\n    [style.margin-left.px]=\"8\"\n    bsStyle=\"common\"\n  >\n    {{ uploadText || i18nText?.upload }}\n  </d-button>\n</div>\n<ng-container *ngIf=\"showTip\">\n  <div class=\"devui-upload-tip\">\n    <span *ngIf=\"getStatus() === 'selected'\" class=\"devui-loading\">{{ uploadTips }}</span>\n    <span *ngIf=\"getStatus() === 'uploading'\" class=\"devui-loading\">\n      <span style=\"margin-right: 8px\">{{ uploadTips }}</span>\n      <a (click)=\"cancelUpload()\">{{ i18nText?.cancelUpload }}</a>\n    </span>\n    <div *ngIf=\"getStatus() === 'uploaded'\" class=\"devui-loaded\">\n      <i class=\"icon icon-right-o\"></i>\n      <span style=\"vertical-align: middle\">{{ i18nText?.uploadSuccess }}</span>\n    </div>\n    <div *ngIf=\"getStatus() === 'failed'\" class=\"devui-upload-failed\">\n      <i class=\"icon icon-info-o\"></i>\n      <span style=\"vertical-align: middle\">\n        <span style=\"margin-right: 8px\">{{ uploadTips }}</span>\n        <a (click)=\"upload($event)\">{{ i18nText?.reUpload }}</a>\n      </span>\n    </div>\n  </div>\n</ng-container>\n<d-multiple-upload-view\n  #dMultipleUploadView\n  [uploadedFiles]=\"uploadedFiles\"\n  [uploadedFilesRef]=\"uploadedFilesRef\"\n  [preloadFilesRef]=\"preloadFilesRef\"\n  [uploadOptions]=\"uploadOptions\"\n  [filePath]=\"filePath\"\n  [setCustomUploadOptions]=\"setCustomUploadOptions\"\n  (deleteUploadedFileEvent)=\"_onDeleteUploadedFile($event)\"\n>\n</d-multiple-upload-view>\n", styles: [".devui-font-size-base{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-font-base{font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400;line-height:1.5}.devui-font-size-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px)}.devui-font-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px);font-weight:700;line-height:1.5}.devui-font-size-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px)}.devui-font-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px);font-weight:700;line-height:1.5}.devui-font-size-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px)}.devui-font-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px);font-weight:700;line-height:1.5}.devui-input-group{position:relative;display:flex;align-items:center;border-collapse:separate;width:100%}.devui-input-group:not(.disabled):hover .devui-input-group-addon{border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0);background-color:#f2f2f3;background-color:var(--devui-dividing-line, #f2f2f3);font-weight:700}.devui-input-group:not(.disabled):hover .devui-form-control{border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0);border-right-color:#d7d8da;border-right-color:var(--devui-form-control-line, #d7d8da)}.devui-input-group:not(.disabled) .devui-input-group-addon:active{border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0);border-right-color:#d7d8da;border-right-color:var(--devui-form-control-line, #d7d8da);background-color:#f2f2f3;background-color:var(--devui-dividing-line, #f2f2f3)}.devui-input-group .devui-input-group-addon{width:36px;white-space:nowrap;font-size:16px;font-size:var(--devui-font-size-icon, 16px);font-weight:400;line-height:1;color:#252b3a;color:var(--devui-text, #252b3a);background-color:#f5f5f5;background-color:var(--devui-area, #f5f5f5);border-top:1px solid #d7d8da;border-top:1px solid var(--devui-form-control-line, #d7d8da);border-bottom:1px solid #d7d8da;border-bottom:1px solid var(--devui-form-control-line, #d7d8da);border-right:1px solid #d7d8da;border-right:1px solid var(--devui-form-control-line, #d7d8da);border-radius:0 2px 2px 0;border-radius:0 var(--devui-border-radius, 2px) var(--devui-border-radius, 2px) 0;transition:border-color .3s cubic-bezier(.645,.045,.355,1),background-color .3s cubic-bezier(.645,.045,.355,1);transition:border-color var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1)),background-color var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1));cursor:pointer;height:100%;position:relative;display:inline-block}.devui-input-group .devui-input-group-addon svg{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}.devui-input-group .devui-form-control{cursor:pointer;display:block;width:100%;min-height:28px;height:unset;padding:4px 8px;font-size:12px;font-size:var(--devui-font-size, 12px);line-height:1.5;background-image:none;border:1px solid #d7d8da;border:1px solid var(--devui-form-control-line, #d7d8da);border-radius:2px 0 0 2px;border-radius:var(--devui-border-radius, 2px) 0 0 var(--devui-border-radius, 2px);transition:border-color .3s cubic-bezier(.645,.045,.355,1),box-shadow .3s cubic-bezier(.645,.045,.355,1);transition:border-color var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1)),box-shadow var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1))}.devui-input-group .devui-form-control.devui-files-list{max-height:52px;padding:2px 2px 0;overflow-x:hidden;overflow-y:auto;max-width:100%}.devui-input-group .devui-form-control.devui-files-list .devui-file-item{height:22px;line-height:22px;padding:0 48px 0 12px}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag{position:relative;background-color:#e9edfa;background-color:var(--devui-label-bg, #e9edfa);border-radius:2px;border-radius:var(--devui-border-radius, 2px);max-width:100%}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .devui-filename{height:100%;display:inline-block;vertical-align:middle;max-width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .icon{position:absolute;cursor:pointer;right:8px;top:50%;transform:translateY(-50%)}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .icon.icon-right{color:#50d4ab;color:var(--devui-success, #50d4ab)}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .icon.icon-running{font-size:16px}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .icon.devui-upload-delete-file-button{margin-right:20px}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag .icon.devui-uploading-delete,.devui-input-group .devui-form-control.devui-files-list .devui-file-tag:hover .devui-upload-progress,.devui-input-group .devui-form-control.devui-files-list .devui-file-tag:hover .icon-right{display:none}.devui-input-group .devui-form-control.devui-files-list .devui-file-tag:hover .icon-close{display:inline-block}.devui-input-group.disabled .devui-upload-placeholder{color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-input-group .devui-upload-placeholder{max-height:28px;max-width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#babbc0;color:var(--devui-placeholder, #babbc0)}:host ::ng-deep .devui-upload-progress{width:16px;height:16px}.devui-input-group.disabled .devui-form-control,.devui-input-group.disabled .devui-input-group-addon{cursor:not-allowed;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-color:#dfe1e6;border-color:var(--devui-disabled-line, #dfe1e6);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}svg.svg-icon-dot>path{fill:#71757f;fill:var(--devui-icon-text, #71757f)}.devui-form-control{outline:none}.devui-input-group.disabled .devui-upload-delete-file-button{cursor:not-allowed;pointer-events:none}.devui-loading{color:#71757f;color:var(--devui-aide-text, #71757f)}.devui-failed-color{color:#f66f6a;color:var(--devui-danger, #f66f6a)}.devui-upload-tip{height:18px;margin-top:8px;font-size:12px}.devui-upload-tip .icon{margin-right:8px;font-size:16px;vertical-align:middle}.devui-upload-tip .icon-right-o{color:#50d4ab;color:var(--devui-success, #50d4ab)}.devui-upload-tip .devui-upload-failed{color:#f66f6a;color:var(--devui-danger, #f66f6a)}.devui-upload-tip a{color:#526ecc;color:var(--devui-link, #526ecc);cursor:pointer}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.SelectFiles }, { type: i2.I18nService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i3.ToastService }]; }, propDecorators: { uploadOptions: [{
                type: Input
            }], fileOptions: [{
                type: Input
            }], autoUpload: [{
                type: Input
            }], withoutBtn: [{
                type: Input
            }], showTip: [{
                type: Input
            }], uploadedFiles: [{
                type: Input
            }], uploadedFilesRef: [{
                type: Input
            }], preloadFilesRef: [{
                type: Input
            }], filePath: [{
                type: Input
            }], placeholderText: [{
                type: Input
            }], uploadText: [{
                type: Input
            }], confirmText: [{
                type: Input
            }], oneTimeUpload: [{
                type: Input
            }], disabled: [{
                type: Input
            }], beforeUpload: [{
                type: Input
            }], setCustomUploadOptions: [{
                type: Input
            }], enableDrop: [{
                type: Input
            }], successEvent: [{
                type: Output
            }], errorEvent: [{
                type: Output
            }], deleteUploadedFileEvent: [{
                type: Output
            }], fileDrop: [{
                type: Output
            }], fileOver: [{
                type: Output
            }], fileSelect: [{
                type: Output
            }], multipleUploadViewComponent: [{
                type: ViewChild,
                args: ['dMultipleUploadView', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlwbGUtdXBsb2FkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RldnVpL3VwbG9hZC9tdWx0aXBsZS11cGxvYWQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vZGV2dWkvdXBsb2FkL211bHRpcGxlLXVwbG9hZC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDM0MsT0FBTyxFQUNMLFNBQVMsRUFBRSxZQUFZLEVBRXZCLFVBQVUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUVqQixNQUFNLEVBQUUsV0FBVyxFQUMzQixTQUFTLEVBQ1YsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbkQsT0FBTyxFQUFpQixXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxJQUFJLEVBQTRCLE1BQU0sTUFBTSxDQUFDO0FBQ3RELE9BQU8sRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuRSxPQUFPLEVBQ0wsWUFBWSxFQUNaLGNBQWMsRUFDZCxZQUFZLEVBQ2IsTUFBTSx1QkFBdUIsQ0FBQztBQUMvQixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMvRSxPQUFPLEVBQ0wsV0FBVyxFQUNaLE1BQU0sc0JBQXNCLENBQUM7Ozs7Ozs7Ozs7QUFnQjlCLE1BQU0sT0FBTyx1QkFBdUI7SUF1Q2xDLFlBQ1UsV0FBd0IsRUFDeEIsSUFBaUIsRUFDQyxHQUFRLEVBQzFCLFlBQTBCO1FBSDFCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLFNBQUksR0FBSixJQUFJLENBQWE7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QkFDRyxzQkFBc0I7c0JBQTlCLEtBQUs7Z0JBQ0csVUFBVTtzQkFBbEIsS0FBSztnQkFDSSxZQUFZO3NCQUFyQixNQUFNO2dCQUNHLFVBQVU7c0JBQW5CLE1BQU07Z0JBQ0csdUJBQXVCO3NCQUFoQyxNQUFNO2dCQUNHLFFBQVE7c0JBQWpCLE1BQU07Z0JBQ0csUUFBUTtzQkFBakIsTUFBTTtnQkFDRyxVQUFVO3NCQUFuQixNQUFNO2dCQUM2QywyQkFBMkI7c0JBQTlFLFNBQVM7dUJBQUMscUJBQXFCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcbiAgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsXG5cbiAgZm9yd2FyZFJlZiwgSW5qZWN0LCBJbnB1dCwgT25EZXN0cm95LFxuXG4gIE9uSW5pdCwgT3V0cHV0LCBUZW1wbGF0ZVJlZixcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBJMThuSW50ZXJmYWNlLCBJMThuU2VydmljZSB9IGZyb20gJ25nLWRldnVpL2kxOG4nO1xuaW1wb3J0IHsgVG9hc3RTZXJ2aWNlIH0gZnJvbSAnbmctZGV2dWkvdG9hc3QnO1xuaW1wb3J0IHsgZnJvbSwgT2JzZXJ2YWJsZSwgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBkZWJvdW5jZVRpbWUsIGxhc3QsIG1hcCwgbWVyZ2VNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge1xuICBJRmlsZU9wdGlvbnMsXG4gIElVcGxvYWRPcHRpb25zLFxuICBVcGxvYWRTdGF0dXNcbn0gZnJvbSAnLi9maWxlLXVwbG9hZGVyLnR5cGVzJztcbmltcG9ydCB7IE11bHRpcGxlVXBsb2FkVmlld0NvbXBvbmVudCB9IGZyb20gJy4vbXVsdGlwbGUtdXBsb2FkLXZpZXcuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIFNlbGVjdEZpbGVzXG59IGZyb20gJy4vc2VsZWN0LWZpbGVzLnV0aWxzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZC1tdWx0aXBsZS11cGxvYWQnLFxuICB0ZW1wbGF0ZVVybDogJy4vbXVsdGlwbGUtdXBsb2FkLmNvbXBvbmVudC5odG1sJyxcbiAgZXhwb3J0QXM6ICdkTXVsdGlwbGVVcGxvYWQnLFxuICBzdHlsZVVybHM6IFsnLi91cGxvYWQtdmlldy5jb21wb25lbnQuc2NzcyddLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBNdWx0aXBsZVVwbG9hZENvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBNdWx0aXBsZVVwbG9hZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0IHtcbiAgQElucHV0KCkgdXBsb2FkT3B0aW9uczogSVVwbG9hZE9wdGlvbnM7XG4gIEBJbnB1dCgpIGZpbGVPcHRpb25zOiBJRmlsZU9wdGlvbnM7XG4gIEBJbnB1dCgpIGF1dG9VcGxvYWQgPSBmYWxzZTtcbiAgQElucHV0KCkgd2l0aG91dEJ0biA9IGZhbHNlO1xuICBASW5wdXQoKSBzaG93VGlwID0gZmFsc2U7XG4gIEBJbnB1dCgpIHVwbG9hZGVkRmlsZXM6IEFycmF5PE9iamVjdD4gPSBbXTtcbiAgQElucHV0KCkgdXBsb2FkZWRGaWxlc1JlZjogVGVtcGxhdGVSZWY8YW55PjtcbiAgQElucHV0KCkgcHJlbG9hZEZpbGVzUmVmPzogVGVtcGxhdGVSZWY8YW55PjtcbiAgQElucHV0KCkgZmlsZVBhdGg6IHN0cmluZztcbiAgQElucHV0KCkgcGxhY2Vob2xkZXJUZXh0OiBzdHJpbmc7XG4gIEBJbnB1dCgpIHVwbG9hZFRleHQ6IHN0cmluZztcbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkXG4gICAqL1xuICBASW5wdXQoKSBjb25maXJtVGV4dDogc3RyaW5nO1xuICBASW5wdXQoKSBvbmVUaW1lVXBsb2FkID0gZmFsc2U7XG4gIEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2U7XG4gIEBJbnB1dCgpIGJlZm9yZVVwbG9hZDogKGZpbGVzKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPiB8IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gIEBJbnB1dCgpIHNldEN1c3RvbVVwbG9hZE9wdGlvbnM6IChmaWxlcywgdXBsb2FkT3B0aW9ucykgPT4gSVVwbG9hZE9wdGlvbnM7XG4gIEBJbnB1dCgpIGVuYWJsZURyb3AgPSBmYWxzZTtcbiAgQE91dHB1dCgpIHN1Y2Nlc3NFdmVudDogRXZlbnRFbWl0dGVyPEFycmF5PHsgZmlsZTogRmlsZTsgcmVzcG9uc2U6IGFueSB9Pj4gPSBuZXcgRXZlbnRFbWl0dGVyPEFycmF5PHsgZmlsZTogRmlsZTsgcmVzcG9uc2U6IGFueSB9Pj4oKTtcbiAgQE91dHB1dCgpIGVycm9yRXZlbnQ6IEV2ZW50RW1pdHRlcjxBcnJheTx7IGZpbGU6IEZpbGU7IHJlc3BvbnNlOiBhbnkgfT4+ID0gbmV3IEV2ZW50RW1pdHRlcjxBcnJheTx7IGZpbGU6IEZpbGU7IHJlc3BvbnNlOiBhbnkgfT4+KCk7XG4gIEBPdXRwdXQoKSBkZWxldGVVcGxvYWRlZEZpbGVFdmVudDogRXZlbnRFbWl0dGVyPHN0cmluZz4gPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcbiAgQE91dHB1dCgpIGZpbGVEcm9wOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KCkgZmlsZU92ZXI6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcbiAgQE91dHB1dCgpIGZpbGVTZWxlY3Q6IEV2ZW50RW1pdHRlcjxGaWxlW10+ID0gbmV3IEV2ZW50RW1pdHRlcjxGaWxlW10+KCk7XG4gIEBWaWV3Q2hpbGQoJ2RNdWx0aXBsZVVwbG9hZFZpZXcnLCB7IHN0YXRpYzogdHJ1ZSB9KSBtdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQ6IE11bHRpcGxlVXBsb2FkVmlld0NvbXBvbmVudDtcbiAgaTE4bkNvbW1vblRleHQ6IEkxOG5JbnRlcmZhY2VbJ2NvbW1vbiddO1xuICBpMThuVGV4dDogSTE4bkludGVyZmFjZVsndXBsb2FkJ107XG4gIGlzRHJvcE9WZXIgPSBmYWxzZTtcbiAgaTE4blN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICBlcnJvck1zZyA9IFtdO1xuICBVcGxvYWRTdGF0dXMgPSBVcGxvYWRTdGF0dXM7XG4gIHVwbG9hZFRpcHM6IHN0cmluZztcbiAgZG9jdW1lbnQ6IERvY3VtZW50O1xuICBwcml2YXRlIG9uQ2hhbmdlID0gKF86IGFueSkgPT4gbnVsbDtcbiAgcHJpdmF0ZSBvblRvdWNoZWQgPSAoKSA9PiBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgc2VsZWN0RmlsZXM6IFNlbGVjdEZpbGVzLFxuICAgIHByaXZhdGUgaTE4bjogSTE4blNlcnZpY2UsXG4gICAgQEluamVjdChET0NVTUVOVCkgcHJpdmF0ZSBkb2M6IGFueSxcbiAgICBwcml2YXRlIHRvYXN0U2VydmljZTogVG9hc3RTZXJ2aWNlKSB7XG4gICAgdGhpcy5kb2N1bWVudCA9IHRoaXMuZG9jO1xuICB9XG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuaTE4blRleHQgPSB0aGlzLmkxOG4uZ2V0STE4blRleHQoKS51cGxvYWQ7XG4gICAgdGhpcy5pMThuQ29tbW9uVGV4dCA9IHRoaXMuaTE4bi5nZXRJMThuVGV4dCgpLmNvbW1vbjtcbiAgICB0aGlzLmkxOG5TdWJzY3JpcHRpb24gPSB0aGlzLmkxOG4ubGFuZ0NoYW5nZSgpLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xuICAgICAgdGhpcy5pMThuVGV4dCA9IGRhdGEudXBsb2FkO1xuICAgICAgdGhpcy5pMThuQ29tbW9uVGV4dCA9IGRhdGEuY29tbW9uO1xuICAgIH0pO1xuICB9XG5cbiAgd3JpdGVWYWx1ZShmaWxlczogYW55KTogdm9pZCB7XG4gICAgaWYgKGZpbGVzKSB7XG4gICAgICBjb25zdCBzaW11bGF0ZUZpbGVzID0gZnJvbSh0aGlzLnNpbXVsYXRlU2VsZWN0RmlsZXMoZmlsZXMpKS5waXBlKG1lcmdlTWFwKGZpbGUgPT4gPGFueT5maWxlKSk7XG4gICAgICB0aGlzLl9kZWFsRmlsZXMoc2ltdWxhdGVGaWxlcyk7XG4gICAgfVxuICB9XG5cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vbkNoYW5nZSA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMub25Ub3VjaGVkID0gZm47XG4gIH1cblxuICBzaW11bGF0ZVNlbGVjdEZpbGVzKGZpbGVzKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICByZXNvbHZlKEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZpbGVzKSk7XG4gICAgfSk7XG4gIH1cblxuICBfZGVhbEZpbGVzKG9ic2VydmFsZSkge1xuICAgIHRoaXMubXVsdGlwbGVVcGxvYWRWaWV3Q29tcG9uZW50LnJlc2V0U2FtZU5hbWVGaWxlcygpO1xuICAgIG9ic2VydmFsZS5waXBlKFxuICAgICAgbWFwKGZpbGUgPT4gdGhpcy5tdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQuYWRkRmlsZShmaWxlKSksXG4gICAgICBkZWJvdW5jZVRpbWUoMTAwKVxuICAgIClcbiAgICAgIC5zdWJzY3JpYmUoXG4gICAgICAgICgpID0+IHtcbiAgICAgICAgICB0aGlzLmNoZWNrVmFsaWQoKTtcbiAgICAgICAgICBjb25zdCBzYW1lTmFtZUZpbGVzID0gdGhpcy5tdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQuZ2V0U2FtZU5hbWVGaWxlcygpO1xuICAgICAgICAgIGlmICh0aGlzLnVwbG9hZE9wdGlvbnMuY2hlY2tTYW1lTmFtZSAmJiBzYW1lTmFtZUZpbGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5hbGVydE1zZyh0aGlzLmkxOG5UZXh0LmdldEV4aXN0U2FtZU5hbWVGaWxlc01zZyhzYW1lTmFtZUZpbGVzKSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMub25DaGFuZ2UodGhpcy5tdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQuZmlsZVVwbG9hZGVycy5tYXAoZmlsZVVwbG9hZGVyID0+IGZpbGVVcGxvYWRlci5maWxlKSk7XG4gICAgICAgICAgY29uc3Qgc2VsZWN0ZWRGaWxlcyA9IHRoaXMubXVsdGlwbGVVcGxvYWRWaWV3Q29tcG9uZW50LmZpbGVVcGxvYWRlcnNcbiAgICAgICAgICAgIC5maWx0ZXIoZmlsZVVwbG9hZGVyID0+IGZpbGVVcGxvYWRlci5zdGF0dXMgPT09IFVwbG9hZFN0YXR1cy5wcmVMb2FkKVxuICAgICAgICAgICAgLm1hcChmaWxlVXBsb2FkZXIgPT4gZmlsZVVwbG9hZGVyLmZpbGUpO1xuICAgICAgICAgIHRoaXMub25GaWxlU2VsZWN0KHNlbGVjdGVkRmlsZXMpO1xuICAgICAgICAgIGlmICh0aGlzLmF1dG9VcGxvYWQpIHtcbiAgICAgICAgICAgIHRoaXMudXBsb2FkKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAoZXJyb3I6IEVycm9yKSA9PiB7XG4gICAgICAgICAgdGhpcy5hbGVydE1zZyhlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgfVxuXG4gIGNoZWNrVmFsaWQoKSB7XG4gICAgbGV0IHRvdGFsRmlsZVNpemUgPSAwO1xuICAgIHRoaXMubXVsdGlwbGVVcGxvYWRWaWV3Q29tcG9uZW50LmZpbGVVcGxvYWRlcnMuZm9yRWFjaChmaWxlVXBsb2FkZXIgPT4ge1xuICAgICAgdG90YWxGaWxlU2l6ZSArPSBmaWxlVXBsb2FkZXIuZmlsZS5zaXplO1xuICAgICAgY29uc3QgY2hlY2tSZXN1bHQgPSB0aGlzLnNlbGVjdEZpbGVzLl92YWxpZGF0ZUZpbGVzKGZpbGVVcGxvYWRlci5maWxlLCB0aGlzLmZpbGVPcHRpb25zLmFjY2VwdCwgZmlsZVVwbG9hZGVyLnVwbG9hZE9wdGlvbnMpO1xuICAgICAgaWYgKGNoZWNrUmVzdWx0ICYmIGNoZWNrUmVzdWx0LmNoZWNrRXJyb3IpIHtcbiAgICAgICAgdGhpcy5tdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQuZGVsZXRlUHJlVXBsb2FkRmlsZShmaWxlVXBsb2FkZXIuZmlsZSk7XG4gICAgICAgIHRoaXMuYWxlcnRNc2coY2hlY2tSZXN1bHQuZXJyb3JNc2cpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAodGhpcy5vbmVUaW1lVXBsb2FkKSB7XG4gICAgICBjb25zdCBjaGVja1Jlc3VsdCA9IHRoaXMuc2VsZWN0RmlsZXMuY2hlY2tBbGxGaWxlc1NpemUodG90YWxGaWxlU2l6ZSwgdGhpcy51cGxvYWRPcHRpb25zLm1heGltdW1TaXplKTtcbiAgICAgIGlmIChjaGVja1Jlc3VsdCAmJiBjaGVja1Jlc3VsdC5jaGVja0Vycm9yKSB7XG4gICAgICAgIHRoaXMubXVsdGlwbGVVcGxvYWRWaWV3Q29tcG9uZW50LnJlbW92ZUZpbGVzKCk7XG4gICAgICAgIHRoaXMuYWxlcnRNc2coY2hlY2tSZXN1bHQuZXJyb3JNc2cpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIG9uQ2xpY2soZXZlbnQpIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLl9kZWFsRmlsZXModGhpcy5zZWxlY3RGaWxlcy50cmlnZ2VyU2VsZWN0RmlsZXModGhpcy5maWxlT3B0aW9ucywgdGhpcy51cGxvYWRPcHRpb25zKSk7XG4gIH1cblxuICBvbkZpbGVEcm9wKGZpbGVzKSB7XG4gICAgdGhpcy5pc0Ryb3BPVmVyID0gZmFsc2U7XG4gICAgdGhpcy5fZGVhbEZpbGVzKHRoaXMuc2VsZWN0RmlsZXMudHJpZ2dlckRyb3BGaWxlcyh0aGlzLmZpbGVPcHRpb25zLCB0aGlzLnVwbG9hZE9wdGlvbnMsIGZpbGVzKSk7XG4gICAgdGhpcy5maWxlRHJvcC5lbWl0KGZpbGVzKTtcbiAgfVxuXG4gIG9uRmlsZU92ZXIoZXZlbnQpIHtcbiAgICB0aGlzLmlzRHJvcE9WZXIgPSBldmVudDtcbiAgICB0aGlzLmZpbGVPdmVyLmVtaXQoZXZlbnQpO1xuICB9XG5cbiAgb25GaWxlU2VsZWN0KGZpbGVzKSB7XG4gICAgdGhpcy5maWxlU2VsZWN0LmVtaXQoZmlsZXMpO1xuICB9XG5cbiAgaGFuZGxlT25lVGltZVVwbG9hZCh1cGxvYWRPYnNlcnZhYmxlKSB7XG4gICAgdXBsb2FkT2JzZXJ2YWJsZVxuICAgICAgLnBpcGUoXG4gICAgICAgIGxhc3QoKVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZShcbiAgICAgICAgKHJlc3VsdHM6IEFycmF5PHsgZmlsZTogRmlsZTsgcmVzcG9uc2U6IGFueSB9PikgPT4ge1xuICAgICAgICAgIHRoaXMuc3VjY2Vzc0V2ZW50LmVtaXQocmVzdWx0cyk7XG4gICAgICAgICAgcmVzdWx0cy5mb3JFYWNoKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgIHRoaXMubXVsdGlwbGVVcGxvYWRWaWV3Q29tcG9uZW50LnVwbG9hZGVkRmlsZXNDb21wb25lbnQuYWRkRmlsZShyZXN1bHQuZmlsZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIChlcnJvcikgPT4ge1xuICAgICAgICAgIHRoaXMuZXJyb3JFdmVudC5lbWl0KGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgfVxuXG4gIGhhbmRsZVVwbG9hZCh1cGxvYWRPYnNlcnZhYmxlKSB7XG4gICAgdXBsb2FkT2JzZXJ2YWJsZVxuICAgICAgLnBpcGUoXG4gICAgICAgIGxhc3QoKVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZShcbiAgICAgICAgKHJlc3VsdHM6IEFycmF5PHsgZmlsZTogRmlsZTsgcmVzcG9uc2U6IGFueTsgc3RhdHVzOiBVcGxvYWRTdGF0dXMgfT4pID0+IHtcbiAgICAgICAgICBjb25zdCBzdWNjZXNzUmVzdWx0ID0gcmVzdWx0cy5maWx0ZXIoaXRlbSA9PiBpdGVtLnN0YXR1cyA9PT0gVXBsb2FkU3RhdHVzLnVwbG9hZGVkKS5tYXAoaXRlbSA9PiB7XG4gICAgICAgICAgICByZXR1cm4ge2ZpbGU6IGl0ZW0uZmlsZSwgcmVzcG9uc2U6IGl0ZW0ucmVzcG9uc2V9O1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGNvbnN0IGZhaWxSZXN1bHQgPSByZXN1bHRzLmZpbHRlcihpdGVtID0+IGl0ZW0uc3RhdHVzID09PSBVcGxvYWRTdGF0dXMuZmFpbGVkKS5tYXAoaXRlbSA9PiB7XG4gICAgICAgICAgICByZXR1cm4ge2ZpbGU6IGl0ZW0uZmlsZSwgcmVzcG9uc2U6IGl0ZW0ucmVzcG9uc2V9O1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGlmKGZhaWxSZXN1bHQubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLmVycm9yRXZlbnQuZW1pdChmYWlsUmVzdWx0KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZihzdWNjZXNzUmVzdWx0Lmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5zdWNjZXNzRXZlbnQuZW1pdChzdWNjZXNzUmVzdWx0KTtcbiAgICAgICAgICAgIHN1Y2Nlc3NSZXN1bHQuZm9yRWFjaCgocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMubXVsdGlwbGVVcGxvYWRWaWV3Q29tcG9uZW50LnVwbG9hZGVkRmlsZXNDb21wb25lbnQuYWRkRmlsZShyZXN1bHQuZmlsZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICk7XG4gIH1cblxuICB1cGxvYWQoZXZlbnQ/LCBmaWxlVXBsb2FkZXI/KSB7XG4gICAgaWYgKGV2ZW50KSB7XG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG4gICAgdGhpcy5jYW5VcGxvYWQoKS50aGVuKChjYW5VcGxvYWQpID0+IHtcbiAgICAgIGlmICghY2FuVXBsb2FkKSB7XG4gICAgICAgIHRoaXMubXVsdGlwbGVVcGxvYWRWaWV3Q29tcG9uZW50LnJlbW92ZUZpbGVzKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHRlbXBOb2RlID0gdGhpcy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZC11cGxvYWQtdGVtcCcpO1xuICAgICAgaWYgKHRlbXBOb2RlKSB7XG4gICAgICAgIHRoaXMuZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0ZW1wTm9kZSk7XG4gICAgICB9XG4gICAgICBjb25zdCB1cGxvYWRPYnNlcnZhYmxlID0gdGhpcy5vbmVUaW1lVXBsb2FkID9cbiAgICAgICAgdGhpcy5tdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQub25lVGltZVVwbG9hZCgpIDpcbiAgICAgICAgdGhpcy5tdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQudXBsb2FkKGZpbGVVcGxvYWRlciwgdHJ1ZSk7XG4gICAgICBpZiAodGhpcy5vbmVUaW1lVXBsb2FkKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlT25lVGltZVVwbG9hZCh1cGxvYWRPYnNlcnZhYmxlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaGFuZGxlVXBsb2FkKHVwbG9hZE9ic2VydmFibGUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgY2FuVXBsb2FkKCkge1xuICAgIGxldCB1cGxvYWRSZXN1bHQgPSBQcm9taXNlLnJlc29sdmUodHJ1ZSk7XG4gICAgaWYgKHRoaXMuYmVmb3JlVXBsb2FkKSB7XG4gICAgICBjb25zdCByZXN1bHQ6IGFueSA9IHRoaXMuYmVmb3JlVXBsb2FkKHRoaXMubXVsdGlwbGVVcGxvYWRWaWV3Q29tcG9uZW50LmdldEZ1bGxGaWxlcygpKTtcbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpZiAocmVzdWx0LnRoZW4pIHtcbiAgICAgICAgICB1cGxvYWRSZXN1bHQgPSByZXN1bHQ7XG4gICAgICAgIH0gZWxzZSBpZiAocmVzdWx0LnN1YnNjcmliZSkge1xuICAgICAgICAgIHVwbG9hZFJlc3VsdCA9IChyZXN1bHQgYXMgT2JzZXJ2YWJsZTxib29sZWFuPikudG9Qcm9taXNlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdXBsb2FkUmVzdWx0ID0gUHJvbWlzZS5yZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHVwbG9hZFJlc3VsdDtcbiAgfVxuXG4gIF9vbkRlbGV0ZVVwbG9hZGVkRmlsZShmaWxlUGF0aDogc3RyaW5nKSB7XG4gICAgdGhpcy5kZWxldGVVcGxvYWRlZEZpbGVFdmVudC5lbWl0KGZpbGVQYXRoKTtcbiAgICB0aGlzLm9uQ2hhbmdlKHRoaXMubXVsdGlwbGVVcGxvYWRWaWV3Q29tcG9uZW50LmZpbGVVcGxvYWRlcnMubWFwKGZpbGVVcGxvYWRlciA9PiBmaWxlVXBsb2FkZXIuZmlsZSkpO1xuICB9XG5cbiAgZGVsZXRlRmlsZSgkZXZlbnQsIGZpbGUpIHtcbiAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgdGhpcy5tdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQuZGVsZXRlRmlsZShmaWxlKTtcbiAgfVxuXG4gIGFsZXJ0TXNnKGVycm9yTXNnKSB7XG4gICAgdGhpcy50b2FzdFNlcnZpY2Uub3Blbih7XG4gICAgICB2YWx1ZTogW3sgc2V2ZXJpdHk6ICd3YXJuJywgY29udGVudDogZXJyb3JNc2cgfV0sXG4gICAgfSk7XG4gIH1cblxuICBnZXRTdGF0dXMoKSB7XG4gICAgbGV0IHVwbG9hZGluZ0NvdW50ID0gMDtcbiAgICBsZXQgdXBsb2FkZWRDb3VudCA9IDA7XG4gICAgbGV0IGZhaWxlZENvdW50ID0gMDtcbiAgICBjb25zdCBmaWxlc0NvdW50ID0gdGhpcy5tdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQuZmlsZVVwbG9hZGVycy5sZW5ndGg7XG4gICAgdGhpcy5tdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQuZmlsZVVwbG9hZGVycy5mb3JFYWNoKChmaWxlVXBsb2FkZXIpID0+IHtcbiAgICAgIGlmIChmaWxlVXBsb2FkZXIuc3RhdHVzID09PSBVcGxvYWRTdGF0dXMudXBsb2FkaW5nKSB7XG4gICAgICAgIHVwbG9hZGluZ0NvdW50Kys7XG4gICAgICB9IGVsc2UgaWYgKGZpbGVVcGxvYWRlci5zdGF0dXMgPT09IFVwbG9hZFN0YXR1cy51cGxvYWRlZCkge1xuICAgICAgICB1cGxvYWRlZENvdW50Kys7XG4gICAgICB9IGVsc2UgaWYgKGZpbGVVcGxvYWRlci5zdGF0dXMgPT09IFVwbG9hZFN0YXR1cy5mYWlsZWQpIHtcbiAgICAgICAgZmFpbGVkQ291bnQrKztcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoZmFpbGVkQ291bnQgPiAwKSB7XG4gICAgICB0aGlzLnVwbG9hZFRpcHMgPSB0aGlzLmkxOG5UZXh0LmdldEZhaWxlZEZpbGVzQ291bnQoZmFpbGVkQ291bnQpO1xuICAgICAgcmV0dXJuICdmYWlsZWQnO1xuICAgIH1cbiAgICBpZiAodXBsb2FkaW5nQ291bnQgPiAwKSB7XG4gICAgICB0aGlzLnVwbG9hZFRpcHMgPSB0aGlzLmkxOG5UZXh0LmdldFVwbG9hZGluZ0ZpbGVzQ291bnQodXBsb2FkaW5nQ291bnQsIGZpbGVzQ291bnQpO1xuICAgICAgcmV0dXJuICd1cGxvYWRpbmcnO1xuICAgIH1cbiAgICBpZiAodXBsb2FkZWRDb3VudCA9PT0gZmlsZXNDb3VudCAmJiB1cGxvYWRlZENvdW50ICE9PSAwKSB7XG4gICAgICByZXR1cm4gJ3VwbG9hZGVkJztcbiAgICB9XG4gICAgaWYgKGZpbGVzQ291bnQgIT09IDApIHtcbiAgICAgIHRoaXMudXBsb2FkVGlwcyA9IHRoaXMuaTE4blRleHQuZ2V0U2VsZWN0ZWRGaWxlc0NvdW50KGZpbGVzQ291bnQpO1xuICAgICAgcmV0dXJuICdzZWxlY3RlZCc7XG4gICAgfVxuICB9XG5cbiAgY2FuY2VsVXBsb2FkKCkge1xuICAgIHRoaXMubXVsdGlwbGVVcGxvYWRWaWV3Q29tcG9uZW50LmZpbGVVcGxvYWRlcnMuZmlsdGVyKChmaWxlVXBsb2FkZXIpID0+IGZpbGVVcGxvYWRlci5zdGF0dXMgPT09IFVwbG9hZFN0YXR1cy51cGxvYWRpbmcpXG4gICAgICAuZm9yRWFjaCgoZmlsZVVwbG9hZGVyKSA9PiB7XG4gICAgICAgIGZpbGVVcGxvYWRlci5zdGF0dXMgPSBVcGxvYWRTdGF0dXMuZmFpbGVkO1xuICAgICAgfSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5pMThuU3Vic2NyaXB0aW9uKSB7XG4gICAgICB0aGlzLmkxOG5TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcblxuICAgIH1cbiAgfVxufVxuIiwiPGRpdlxuICBkLWZpbGUtZHJvcFxuICBbZW5hYmxlRHJvcF09XCJlbmFibGVEcm9wXCJcbiAgKGZpbGVEcm9wKT1cIm9uRmlsZURyb3AoJGV2ZW50KVwiXG4gIChmaWxlT3Zlcik9XCJvbkZpbGVPdmVyKCRldmVudClcIlxuICAoZmlsZVNlbGVjdCk9XCJvbkZpbGVTZWxlY3QoJGV2ZW50KVwiXG4gIFtuZ1N0eWxlXT1cInsgYm9yZGVyOiBpc0Ryb3BPVmVyID8gJzFweCBzb2xpZCAjMTViZjE1JyA6ICcwJyB9XCJcbiAgc3R5bGU9XCJkaXNwbGF5OiBmbGV4XCJcbj5cbiAgPGRpdiBjbGFzcz1cImRldnVpLWlucHV0LWdyb3VwXCIgW2NsYXNzLmRpc2FibGVkXT1cImRpc2FibGVkXCIgKGNsaWNrKT1cIm9uQ2xpY2soJGV2ZW50KVwiPlxuICAgIDxkaXYgKm5nSWY9XCJkTXVsdGlwbGVVcGxvYWRWaWV3LmZpbGVVcGxvYWRlcnMubGVuZ3RoID09PSAwXCIgY2xhc3M9XCJkZXZ1aS1mb3JtLWNvbnRyb2wgZGV2dWktdXBsb2FkLXBsYWNlaG9sZGVyXCI+XG4gICAgICB7eyBwbGFjZWhvbGRlclRleHQgPyBwbGFjZWhvbGRlclRleHQgOiBpMThuVGV4dD8uY2hvb3NlRmlsZSB9fVxuICAgIDwvZGl2PlxuICAgIDx1bCAqbmdJZj1cImRNdWx0aXBsZVVwbG9hZFZpZXcuZmlsZVVwbG9hZGVycy5sZW5ndGggPiAwXCIgY2xhc3M9XCJkZXZ1aS1mb3JtLWNvbnRyb2wgZGV2dWktZmlsZXMtbGlzdFwiPlxuICAgICAgPGxpXG4gICAgICAgICpuZ0Zvcj1cImxldCBmaWxlVXBsb2FkZXIgb2YgZE11bHRpcGxlVXBsb2FkVmlldy5maWxlVXBsb2FkZXJzOyBsZXQgaW5kZXggPSBpbmRleFwiXG4gICAgICAgIGNsYXNzPVwiZGV2dWktZmlsZS1pdGVtIGRldnVpLWZpbGUtdGFnXCJcbiAgICAgICAgc3R5bGU9XCJkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMCAycHggMnB4IDBcIlxuICAgICAgICB0aXRsZT1cInt7IGZpbGVVcGxvYWRlci5maWxlLm5hbWUgfX1cIlxuICAgICAgPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImRldnVpLWZpbGVuYW1lIHt7IGZpbGVVcGxvYWRlci5zdGF0dXMgPT09IFVwbG9hZFN0YXR1cy5mYWlsZWQgPyAnZGV2dWktZmFpbGVkLWNvbG9yJyA6ICcnIH19XCI+XG4gICAgICAgICAge3sgZmlsZVVwbG9hZGVyLmZpbGUubmFtZSB9fVxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDxzcGFuXG4gICAgICAgICAgY2xhc3M9XCJpY29uIGljb24tY2xvc2Uge3sgZmlsZVVwbG9hZGVyLnN0YXR1cyA9PT0gVXBsb2FkU3RhdHVzLmZhaWxlZCA/ICdkZXZ1aS11cGxvYWQtZGVsZXRlLWZpbGUtYnV0dG9uJyA6ICcnIH19XG4gICAgICAgICAge3tcbiAgICAgICAgICAgIGZpbGVVcGxvYWRlci5zdGF0dXMgPT09IFVwbG9hZFN0YXR1cy51cGxvYWRpbmcgfHwgZmlsZVVwbG9hZGVyLnN0YXR1cyA9PT0gVXBsb2FkU3RhdHVzLnVwbG9hZGVkID8gJ2RldnVpLXVwbG9hZGluZy1kZWxldGUnIDogJydcbiAgICAgICAgICB9fVwiXG4gICAgICAgICAgKGNsaWNrKT1cImRlbGV0ZUZpbGUoJGV2ZW50LCBmaWxlVXBsb2FkZXIuZmlsZSlcIlxuICAgICAgICA+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPGRpdiAqbmdJZj1cImZpbGVVcGxvYWRlci5zdGF0dXMgPT09IFVwbG9hZFN0YXR1cy51cGxvYWRpbmdcIiBjbGFzcz1cImljb24gZGV2dWktdXBsb2FkLXByb2dyZXNzXCI+XG4gICAgICAgICAgPGQtcHJvZ3Jlc3NcbiAgICAgICAgICAgIFt0eXBlXT1cIidjaXJjbGUnXCJcbiAgICAgICAgICAgIFtwZXJjZW50YWdlXT1cImZpbGVVcGxvYWRlci5wZXJjZW50YWdlXCJcbiAgICAgICAgICAgIFtzdHJva2VDb2xvcl09XCInIzUwRDRBQidcIlxuICAgICAgICAgICAgW3N0cm9rZVdpZHRoXT1cIjhcIlxuICAgICAgICAgICAgW3Nob3dDb250ZW50XT1cImZhbHNlXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgPC9kLXByb2dyZXNzPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHNwYW4gKm5nSWY9XCJmaWxlVXBsb2FkZXIuc3RhdHVzID09PSBVcGxvYWRTdGF0dXMuZmFpbGVkXCIgY2xhc3M9XCJpY29uIGljb24tcnVubmluZ1wiIChjbGljayk9XCJ1cGxvYWQoJGV2ZW50LCBmaWxlVXBsb2FkZXIpXCI+IDwvc3Bhbj5cbiAgICAgICAgPHNwYW4gKm5nSWY9XCJmaWxlVXBsb2FkZXIuc3RhdHVzID09PSBVcGxvYWRTdGF0dXMudXBsb2FkZWRcIiBjbGFzcz1cImljb24gaWNvbi1yaWdodFwiPjwvc3Bhbj5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8c3BhbiBjbGFzcz1cImRldnVpLWlucHV0LWdyb3VwLWFkZG9uXCI+XG4gICAgICA8c3ZnIGNsYXNzPVwic3ZnLWljb24tZG90XCIgaGVpZ2h0PVwiMWVtXCIgd2lkdGg9XCIxZW1cIiB2aWV3Qm94PVwiMCAwIDEwMjQgMTAyNFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICAgICAgPHBhdGhcbiAgICAgICAgICBkPVwibTQwMC4zMTg5MiAxNzYuOTcwNTc0YzAtNjEuNTc0MzgxIDUwLjExMzM1MS0xMTEuNjgwNTY5IDExMS42Nzk1NDUtMTExLjY4MDU2OSA2MS41NzY0MjcgMCAxMTEuNjgwNTY5IDUwLjEwNjE4OCAxMTEuNjgwNTY5IDExMS42ODA1NjkgMCA2MS41NjgyNDEtNTAuMTA0MTQxIDExMS42Nzk1NDUtMTExLjY4MDU2OSAxMTEuNjc5NTQ1LTYxLjU2NjE5NCAwLTExMS42Nzk1NDUtNTAuMTExMzA0LTExMS42Nzk1NDUtMTExLjY3OTU0NXptMCAzMzUuMDI4NDAzYzAtNjEuNTY4MjQxIDUwLjExMzM1MS0xMTEuNjc4NTIyIDExMS42Nzk1NDUtMTExLjY3ODUyMiA2MS41NzY0MjcgMCAxMTEuNjgwNTY5IDUwLjExMDI4MSAxMTEuNjgwNTY5IDExMS42Nzg1MjIgMCA2MS41NzQzODEtNTAuMTA1MTY1IDExMS42ODI2MTUtMTExLjY4MDU2OSAxMTEuNjgyNjE1LTYxLjU2NjE5NCAwLTExMS42Nzk1NDUtNTAuMTA4MjM1LTExMS42Nzk1NDUtMTExLjY4MjYxNXptMCAzMzUuMDM3NjEyYzAtNjEuNTcyMzM0IDUwLjExMzM1MS0xMTEuNjc5NTQ1IDExMS42Nzk1NDUtMTExLjY3OTU0NSA2MS41NzU0MDQgMCAxMTEuNjgwNTY5IDUwLjEwNzIxMSAxMTEuNjgwNTY5IDExMS42Nzk1NDUgMCA2MS41NjcyMTctNTAuMTA1MTY1IDExMS42NzIzODItMTExLjY4MDU2OSAxMTEuNjcyMzgyLTYxLjU2NjE5NCAwLTExMS42Nzk1NDUtNTAuMTA1MTY0LTExMS42Nzk1NDUtMTExLjY3MjM4MnptMCAwXCJcbiAgICAgICAgLz5cbiAgICAgIDwvc3ZnPlxuICAgIDwvc3Bhbj5cbiAgPC9kaXY+XG4gIDxkLWJ1dHRvblxuICAgICpuZ0lmPVwiIWF1dG9VcGxvYWQgJiYgIXdpdGhvdXRCdG5cIlxuICAgIFtkaXNhYmxlZF09XCJkaXNhYmxlZFwiXG4gICAgKGJ0bkNsaWNrKT1cInVwbG9hZCgkZXZlbnQpXCJcbiAgICBbc3R5bGUubWFyZ2luLWxlZnQucHhdPVwiOFwiXG4gICAgYnNTdHlsZT1cImNvbW1vblwiXG4gID5cbiAgICB7eyB1cGxvYWRUZXh0IHx8IGkxOG5UZXh0Py51cGxvYWQgfX1cbiAgPC9kLWJ1dHRvbj5cbjwvZGl2PlxuPG5nLWNvbnRhaW5lciAqbmdJZj1cInNob3dUaXBcIj5cbiAgPGRpdiBjbGFzcz1cImRldnVpLXVwbG9hZC10aXBcIj5cbiAgICA8c3BhbiAqbmdJZj1cImdldFN0YXR1cygpID09PSAnc2VsZWN0ZWQnXCIgY2xhc3M9XCJkZXZ1aS1sb2FkaW5nXCI+e3sgdXBsb2FkVGlwcyB9fTwvc3Bhbj5cbiAgICA8c3BhbiAqbmdJZj1cImdldFN0YXR1cygpID09PSAndXBsb2FkaW5nJ1wiIGNsYXNzPVwiZGV2dWktbG9hZGluZ1wiPlxuICAgICAgPHNwYW4gc3R5bGU9XCJtYXJnaW4tcmlnaHQ6IDhweFwiPnt7IHVwbG9hZFRpcHMgfX08L3NwYW4+XG4gICAgICA8YSAoY2xpY2spPVwiY2FuY2VsVXBsb2FkKClcIj57eyBpMThuVGV4dD8uY2FuY2VsVXBsb2FkIH19PC9hPlxuICAgIDwvc3Bhbj5cbiAgICA8ZGl2ICpuZ0lmPVwiZ2V0U3RhdHVzKCkgPT09ICd1cGxvYWRlZCdcIiBjbGFzcz1cImRldnVpLWxvYWRlZFwiPlxuICAgICAgPGkgY2xhc3M9XCJpY29uIGljb24tcmlnaHQtb1wiPjwvaT5cbiAgICAgIDxzcGFuIHN0eWxlPVwidmVydGljYWwtYWxpZ246IG1pZGRsZVwiPnt7IGkxOG5UZXh0Py51cGxvYWRTdWNjZXNzIH19PC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgKm5nSWY9XCJnZXRTdGF0dXMoKSA9PT0gJ2ZhaWxlZCdcIiBjbGFzcz1cImRldnVpLXVwbG9hZC1mYWlsZWRcIj5cbiAgICAgIDxpIGNsYXNzPVwiaWNvbiBpY29uLWluZm8tb1wiPjwvaT5cbiAgICAgIDxzcGFuIHN0eWxlPVwidmVydGljYWwtYWxpZ246IG1pZGRsZVwiPlxuICAgICAgICA8c3BhbiBzdHlsZT1cIm1hcmdpbi1yaWdodDogOHB4XCI+e3sgdXBsb2FkVGlwcyB9fTwvc3Bhbj5cbiAgICAgICAgPGEgKGNsaWNrKT1cInVwbG9hZCgkZXZlbnQpXCI+e3sgaTE4blRleHQ/LnJlVXBsb2FkIH19PC9hPlxuICAgICAgPC9zcGFuPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvbmctY29udGFpbmVyPlxuPGQtbXVsdGlwbGUtdXBsb2FkLXZpZXdcbiAgI2RNdWx0aXBsZVVwbG9hZFZpZXdcbiAgW3VwbG9hZGVkRmlsZXNdPVwidXBsb2FkZWRGaWxlc1wiXG4gIFt1cGxvYWRlZEZpbGVzUmVmXT1cInVwbG9hZGVkRmlsZXNSZWZcIlxuICBbcHJlbG9hZEZpbGVzUmVmXT1cInByZWxvYWRGaWxlc1JlZlwiXG4gIFt1cGxvYWRPcHRpb25zXT1cInVwbG9hZE9wdGlvbnNcIlxuICBbZmlsZVBhdGhdPVwiZmlsZVBhdGhcIlxuICBbc2V0Q3VzdG9tVXBsb2FkT3B0aW9uc109XCJzZXRDdXN0b21VcGxvYWRPcHRpb25zXCJcbiAgKGRlbGV0ZVVwbG9hZGVkRmlsZUV2ZW50KT1cIl9vbkRlbGV0ZVVwbG9hZGVkRmlsZSgkZXZlbnQpXCJcbj5cbjwvZC1tdWx0aXBsZS11cGxvYWQtdmlldz5cbiJdfQ==