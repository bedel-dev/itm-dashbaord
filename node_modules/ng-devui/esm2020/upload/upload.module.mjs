import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ButtonModule } from 'ng-devui/button';
import { ProgressModule } from 'ng-devui/progress';
import { ToastModule } from 'ng-devui/toast';
import { FileDropDirective } from './file-drop.directive';
import { MultipleUploadViewComponent } from './multiple-upload-view.component';
import { MultipleUploadComponent } from './multiple-upload.component';
import { SelectFiles } from './select-files.utils';
import { SingleUploadViewComponent } from './single-upload-view.component';
import { SingleUploadComponent } from './single-upload.component';
import { UploadDirective } from './upload.directive';
import { UploadedFilesComponent } from './uploaded-files.component';
import * as i0 from "@angular/core";
export class UploadModule {
}
UploadModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: UploadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UploadModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: UploadModule, declarations: [MultipleUploadViewComponent,
        SingleUploadViewComponent,
        SingleUploadComponent,
        MultipleUploadComponent,
        UploadedFilesComponent,
        FileDropDirective,
        UploadDirective], imports: [CommonModule,
        ButtonModule,
        ToastModule,
        ProgressModule], exports: [MultipleUploadViewComponent,
        SingleUploadViewComponent,
        SingleUploadComponent,
        MultipleUploadComponent,
        UploadedFilesComponent,
        FileDropDirective,
        UploadDirective] });
UploadModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: UploadModule, providers: [SelectFiles], imports: [[
            CommonModule,
            ButtonModule,
            ToastModule,
            ProgressModule
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: UploadModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        ButtonModule,
                        ToastModule,
                        ProgressModule
                    ],
                    exports: [
                        MultipleUploadViewComponent,
                        SingleUploadViewComponent,
                        SingleUploadComponent,
                        MultipleUploadComponent,
                        UploadedFilesComponent,
                        FileDropDirective,
                        UploadDirective
                    ],
                    declarations: [
                        MultipleUploadViewComponent,
                        SingleUploadViewComponent,
                        SingleUploadComponent,
                        MultipleUploadComponent,
                        UploadedFilesComponent,
                        FileDropDirective,
                        UploadDirective
                    ],
                    providers: [SelectFiles],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RldnVpL3VwbG9hZC91cGxvYWQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFdkMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7O0FBNkJwRSxNQUFNLE9BQU8sWUFBWTs7eUdBQVosWUFBWTswR0FBWixZQUFZLGlCQVhyQiwyQkFBMkI7UUFDM0IseUJBQXlCO1FBQ3pCLHFCQUFxQjtRQUNyQix1QkFBdUI7UUFDdkIsc0JBQXNCO1FBQ3RCLGlCQUFpQjtRQUNqQixlQUFlLGFBckJmLFlBQVk7UUFDWixZQUFZO1FBQ1osV0FBVztRQUNYLGNBQWMsYUFHZCwyQkFBMkI7UUFDM0IseUJBQXlCO1FBQ3pCLHFCQUFxQjtRQUNyQix1QkFBdUI7UUFDdkIsc0JBQXNCO1FBQ3RCLGlCQUFpQjtRQUNqQixlQUFlOzBHQWNOLFlBQVksYUFGWixDQUFDLFdBQVcsQ0FBQyxZQXpCZjtZQUNQLFlBQVk7WUFDWixZQUFZO1lBQ1osV0FBVztZQUNYLGNBQWM7U0FDZjsyRkFzQlUsWUFBWTtrQkE1QnhCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osWUFBWTt3QkFDWixXQUFXO3dCQUNYLGNBQWM7cUJBQ2Y7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLDJCQUEyQjt3QkFDM0IseUJBQXlCO3dCQUN6QixxQkFBcUI7d0JBQ3JCLHVCQUF1Qjt3QkFDdkIsc0JBQXNCO3dCQUN0QixpQkFBaUI7d0JBQ2pCLGVBQWU7cUJBQ2hCO29CQUNELFlBQVksRUFBRTt3QkFDWiwyQkFBMkI7d0JBQzNCLHlCQUF5Qjt3QkFDekIscUJBQXFCO3dCQUNyQix1QkFBdUI7d0JBQ3ZCLHNCQUFzQjt3QkFDdEIsaUJBQWlCO3dCQUNqQixlQUFlO3FCQUNoQjtvQkFFRCxTQUFTLEVBQUUsQ0FBQyxXQUFXLENBQUM7aUJBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOZ01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBCdXR0b25Nb2R1bGUgfSBmcm9tICduZy1kZXZ1aS9idXR0b24nO1xuaW1wb3J0IHsgUHJvZ3Jlc3NNb2R1bGUgfSBmcm9tICduZy1kZXZ1aS9wcm9ncmVzcyc7XG5pbXBvcnQgeyBUb2FzdE1vZHVsZSB9IGZyb20gJ25nLWRldnVpL3RvYXN0JztcbmltcG9ydCB7IEZpbGVEcm9wRGlyZWN0aXZlIH0gZnJvbSAnLi9maWxlLWRyb3AuZGlyZWN0aXZlJztcbmltcG9ydCB7IE11bHRpcGxlVXBsb2FkVmlld0NvbXBvbmVudCB9IGZyb20gJy4vbXVsdGlwbGUtdXBsb2FkLXZpZXcuY29tcG9uZW50JztcbmltcG9ydCB7IE11bHRpcGxlVXBsb2FkQ29tcG9uZW50IH0gZnJvbSAnLi9tdWx0aXBsZS11cGxvYWQuY29tcG9uZW50JztcbmltcG9ydCB7IFNlbGVjdEZpbGVzIH0gZnJvbSAnLi9zZWxlY3QtZmlsZXMudXRpbHMnO1xuaW1wb3J0IHsgU2luZ2xlVXBsb2FkVmlld0NvbXBvbmVudCB9IGZyb20gJy4vc2luZ2xlLXVwbG9hZC12aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTaW5nbGVVcGxvYWRDb21wb25lbnQgfSBmcm9tICcuL3NpbmdsZS11cGxvYWQuY29tcG9uZW50JztcbmltcG9ydCB7IFVwbG9hZERpcmVjdGl2ZSB9IGZyb20gJy4vdXBsb2FkLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBVcGxvYWRlZEZpbGVzQ29tcG9uZW50IH0gZnJvbSAnLi91cGxvYWRlZC1maWxlcy5jb21wb25lbnQnO1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBCdXR0b25Nb2R1bGUsXG4gICAgVG9hc3RNb2R1bGUsXG4gICAgUHJvZ3Jlc3NNb2R1bGVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIE11bHRpcGxlVXBsb2FkVmlld0NvbXBvbmVudCxcbiAgICBTaW5nbGVVcGxvYWRWaWV3Q29tcG9uZW50LFxuICAgIFNpbmdsZVVwbG9hZENvbXBvbmVudCxcbiAgICBNdWx0aXBsZVVwbG9hZENvbXBvbmVudCxcbiAgICBVcGxvYWRlZEZpbGVzQ29tcG9uZW50LFxuICAgIEZpbGVEcm9wRGlyZWN0aXZlLFxuICAgIFVwbG9hZERpcmVjdGl2ZVxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBNdWx0aXBsZVVwbG9hZFZpZXdDb21wb25lbnQsXG4gICAgU2luZ2xlVXBsb2FkVmlld0NvbXBvbmVudCxcbiAgICBTaW5nbGVVcGxvYWRDb21wb25lbnQsXG4gICAgTXVsdGlwbGVVcGxvYWRDb21wb25lbnQsXG4gICAgVXBsb2FkZWRGaWxlc0NvbXBvbmVudCxcbiAgICBGaWxlRHJvcERpcmVjdGl2ZSxcbiAgICBVcGxvYWREaXJlY3RpdmVcbiAgXSxcblxuICBwcm92aWRlcnM6IFtTZWxlY3RGaWxlc10sXG59KVxuZXhwb3J0IGNsYXNzIFVwbG9hZE1vZHVsZSB7XG59XG4iXX0=