import { Component, HostBinding, HostListener, Inject, ViewChild, ViewEncapsulation } from '@angular/core';
import { Router, RouterLinkActive } from '@angular/router';
import { AccordionBaseLinkComponent } from './accordion-base-link-component.class';
import { ACCORDION } from './accordion-token';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@angular/common";
export class AccordionItemRouterlinkComponent extends AccordionBaseLinkComponent {
    constructor(accordion, router) {
        super(accordion);
        this.accordion = accordion;
        this.router = router;
    }
    get routerLinkActived() {
        return !!(this.routerLinkActiveDirective && this.routerLinkActiveDirective.isActive);
    }
    set urlTree(urlTree) {
        if (urlTree) {
            this.queryParams = urlTree.queryParams;
            this.fragment = urlTree.fragment;
        }
        else {
            this.queryParams = undefined;
            this.fragment = undefined;
        }
    }
    onClick(event) {
        if (!this.disabled) {
            this.accordion.linkItemClickFn({
                item: this.item,
                parent: this.parent,
                event: event
            });
        }
    }
    ngOnChanges(changes) {
        if (changes['item']) {
            if (this.link) {
                this.urlTree = this.router.parseUrl(this.link);
                const handelPath = (url) => {
                    let path = url;
                    const index = url.indexOf('?');
                    if (index > -1) {
                        path = url.slice(0, index);
                    }
                    return path;
                };
                this.path = handelPath(this.link);
            }
            else {
                this.urlTree = undefined;
                this.path = undefined;
            }
        }
    }
}
AccordionItemRouterlinkComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: AccordionItemRouterlinkComponent, deps: [{ token: ACCORDION }, { token: i1.Router }], target: i0.ɵɵFactoryTarget.Component });
AccordionItemRouterlinkComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: AccordionItemRouterlinkComponent, selector: "d-accordion-item-routerlink", host: { listeners: { "click": "onClick($event)" }, properties: { "class.devui-router-active": "this.routerLinkActived" } }, viewQueries: [{ propertyName: "routerLinkActiveDirective", first: true, predicate: RouterLinkActive, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<ng-container *ngIf=\"!disabled\">\n  <a\n    class=\"devui-over-flow-ellipsis\"\n    [routerLink]=\"path\"\n    [queryParams]=\"queryParams\"\n    [fragment]=\"fragment\"\n    [routerLinkActive]=\"'devui-router-active'\"\n    target=\"{{ target }}\"\n    rel=\"noopener\"\n    title=\"{{ title }}\"\n  >\n    <div\n      class=\"devui-accordion-splitter\"\n      [ngClass]=\"{ 'devui-parent-list': deepth === 0 }\"\n      [ngStyle]=\"{ left: deepth * 20 + 10 + 'px' }\"\n    ></div>\n    <ng-container *ngIf=\"!itemTemplate\">\n      {{ title }}\n    </ng-container>\n    <ng-template\n      *ngIf=\"itemTemplate\"\n      [ngTemplateOutlet]=\"itemTemplate\"\n      [ngTemplateOutletContext]=\"{\n        parent: parent,\n        item: item,\n        deepth: deepth\n      }\"\n    ></ng-template>\n  </a>\n</ng-container>\n<ng-container *ngIf=\"disabled\">\n  <a class=\"devui-over-flow-ellipsis\" title=\"{{ title }}\">\n    <div\n      class=\"devui-accordion-splitter\"\n      [ngClass]=\"{ 'devui-parent-list': deepth === 0 }\"\n      [ngStyle]=\"{ left: deepth * 20 + 10 + 'px' }\"\n    ></div>\n    <ng-container *ngIf=\"!itemTemplate\">\n      {{ title }}\n    </ng-container>\n    <ng-template\n      *ngIf=\"itemTemplate\"\n      [ngTemplateOutlet]=\"itemTemplate\"\n      [ngTemplateOutletContext]=\"{\n        parent: parent,\n        item: item,\n        deepth: deepth\n      }\"\n    ></ng-template>\n  </a>\n</ng-container>\n", directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo", "routerLink"] }, { type: i1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: AccordionItemRouterlinkComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-accordion-item-routerlink', encapsulation: ViewEncapsulation.None, preserveWhitespaces: false, template: "<ng-container *ngIf=\"!disabled\">\n  <a\n    class=\"devui-over-flow-ellipsis\"\n    [routerLink]=\"path\"\n    [queryParams]=\"queryParams\"\n    [fragment]=\"fragment\"\n    [routerLinkActive]=\"'devui-router-active'\"\n    target=\"{{ target }}\"\n    rel=\"noopener\"\n    title=\"{{ title }}\"\n  >\n    <div\n      class=\"devui-accordion-splitter\"\n      [ngClass]=\"{ 'devui-parent-list': deepth === 0 }\"\n      [ngStyle]=\"{ left: deepth * 20 + 10 + 'px' }\"\n    ></div>\n    <ng-container *ngIf=\"!itemTemplate\">\n      {{ title }}\n    </ng-container>\n    <ng-template\n      *ngIf=\"itemTemplate\"\n      [ngTemplateOutlet]=\"itemTemplate\"\n      [ngTemplateOutletContext]=\"{\n        parent: parent,\n        item: item,\n        deepth: deepth\n      }\"\n    ></ng-template>\n  </a>\n</ng-container>\n<ng-container *ngIf=\"disabled\">\n  <a class=\"devui-over-flow-ellipsis\" title=\"{{ title }}\">\n    <div\n      class=\"devui-accordion-splitter\"\n      [ngClass]=\"{ 'devui-parent-list': deepth === 0 }\"\n      [ngStyle]=\"{ left: deepth * 20 + 10 + 'px' }\"\n    ></div>\n    <ng-container *ngIf=\"!itemTemplate\">\n      {{ title }}\n    </ng-container>\n    <ng-template\n      *ngIf=\"itemTemplate\"\n      [ngTemplateOutlet]=\"itemTemplate\"\n      [ngTemplateOutletContext]=\"{\n        parent: parent,\n        item: item,\n        deepth: deepth\n      }\"\n    ></ng-template>\n  </a>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [ACCORDION]
                }] }, { type: i1.Router }]; }, propDecorators: { routerLinkActiveDirective: [{
                type: ViewChild,
                args: [RouterLinkActive]
            }], routerLinkActived: [{
                type: HostBinding,
                args: ['class.devui-router-active']
            }], onClick: [{
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWl0ZW0tcm91dGVybGluay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kZXZ1aS9hY2NvcmRpb24vYWNjb3JkaW9uLWl0ZW0tcm91dGVybGluay5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9kZXZ1aS9hY2NvcmRpb24vYWNjb3JkaW9uLWl0ZW0tcm91dGVybGluay5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUE0QixTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckksT0FBTyxFQUFVLE1BQU0sRUFBRSxnQkFBZ0IsRUFBVyxNQUFNLGlCQUFpQixDQUFDO0FBQzVFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7OztBQVE5QyxNQUFNLE9BQU8sZ0NBQWlDLFNBQVEsMEJBQTBCO0lBb0I5RSxZQUF5QyxTQUFjLEVBQVUsTUFBYztRQUM3RSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFEc0IsY0FBUyxHQUFULFNBQVMsQ0FBSztRQUFVLFdBQU0sR0FBTixNQUFNLENBQVE7SUFFL0UsQ0FBQztJQXBCRCxJQUNJLGlCQUFpQjtRQUNuQixPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx5QkFBeUIsSUFBSSxJQUFJLENBQUMseUJBQXlCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkYsQ0FBQztJQUNELElBQVksT0FBTyxDQUFDLE9BQWdCO1FBQ2xDLElBQUksT0FBTyxFQUFFO1lBQ1gsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQztTQUNsQzthQUFNO1lBQ0wsSUFBSSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUM7WUFDN0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUM7U0FDM0I7SUFDSCxDQUFDO0lBV0QsT0FBTyxDQUFDLEtBQWlCO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDO2dCQUM3QixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7Z0JBQ2YsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO2dCQUNuQixLQUFLLEVBQUUsS0FBSzthQUNiLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUNuQixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQ2IsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQy9DLE1BQU0sVUFBVSxHQUFHLENBQUMsR0FBVyxFQUFFLEVBQUU7b0JBQ2pDLElBQUksSUFBSSxHQUFHLEdBQUcsQ0FBQztvQkFDZixNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUMvQixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsRUFBRTt3QkFDZCxJQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7cUJBQzVCO29CQUNELE9BQU8sSUFBSSxDQUFDO2dCQUNkLENBQUMsQ0FBQztnQkFDRixJQUFJLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDbkM7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUM7Z0JBQ3pCLElBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDO2FBQ3ZCO1NBQ0Y7SUFDSCxDQUFDOzs2SEFyRFUsZ0NBQWdDLGtCQW9CdkIsU0FBUztpSEFwQmxCLGdDQUFnQywwUEFDaEMsZ0JBQWdCLDRGQ1o3QixtNkNBbURBOzJGRHhDYSxnQ0FBZ0M7a0JBTjVDLFNBQVM7K0JBQ0UsNkJBQTZCLGlCQUV4QixpQkFBaUIsQ0FBQyxJQUFJLHVCQUNoQixLQUFLOzswQkFzQmIsTUFBTTsyQkFBQyxTQUFTO2lFQW5CQSx5QkFBeUI7c0JBQXJELFNBQVM7dUJBQUMsZ0JBQWdCO2dCQUV2QixpQkFBaUI7c0JBRHBCLFdBQVc7dUJBQUMsMkJBQTJCO2dCQXVCeEMsT0FBTztzQkFETixZQUFZO3VCQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIEhvc3RMaXN0ZW5lciwgSW5qZWN0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIFZpZXdDaGlsZCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBhcmFtcywgUm91dGVyLCBSb3V0ZXJMaW5rQWN0aXZlLCBVcmxUcmVlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEFjY29yZGlvbkJhc2VMaW5rQ29tcG9uZW50IH0gZnJvbSAnLi9hY2NvcmRpb24tYmFzZS1saW5rLWNvbXBvbmVudC5jbGFzcyc7XG5pbXBvcnQgeyBBQ0NPUkRJT04gfSBmcm9tICcuL2FjY29yZGlvbi10b2tlbic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2QtYWNjb3JkaW9uLWl0ZW0tcm91dGVybGluaycsXG4gIHRlbXBsYXRlVXJsOiAnLi9hY2NvcmRpb24taXRlbS1yb3V0ZXJsaW5rLmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIEFjY29yZGlvbkl0ZW1Sb3V0ZXJsaW5rQ29tcG9uZW50IGV4dGVuZHMgQWNjb3JkaW9uQmFzZUxpbmtDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBAVmlld0NoaWxkKFJvdXRlckxpbmtBY3RpdmUpIHJvdXRlckxpbmtBY3RpdmVEaXJlY3RpdmU6IFJvdXRlckxpbmtBY3RpdmU7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuZGV2dWktcm91dGVyLWFjdGl2ZScpXG4gIGdldCByb3V0ZXJMaW5rQWN0aXZlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gISEodGhpcy5yb3V0ZXJMaW5rQWN0aXZlRGlyZWN0aXZlICYmIHRoaXMucm91dGVyTGlua0FjdGl2ZURpcmVjdGl2ZS5pc0FjdGl2ZSk7XG4gIH1cbiAgcHJpdmF0ZSBzZXQgdXJsVHJlZSh1cmxUcmVlOiBVcmxUcmVlKSB7XG4gICAgaWYgKHVybFRyZWUpIHtcbiAgICAgIHRoaXMucXVlcnlQYXJhbXMgPSB1cmxUcmVlLnF1ZXJ5UGFyYW1zO1xuICAgICAgdGhpcy5mcmFnbWVudCA9IHVybFRyZWUuZnJhZ21lbnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucXVlcnlQYXJhbXMgPSB1bmRlZmluZWQ7XG4gICAgICB0aGlzLmZyYWdtZW50ID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBwYXRoOiBzdHJpbmc7XG4gIHB1YmxpYyBxdWVyeVBhcmFtczogUGFyYW1zO1xuICBwdWJsaWMgZnJhZ21lbnQ6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihASW5qZWN0KEFDQ09SRElPTikgcHJvdGVjdGVkIGFjY29yZGlvbjogYW55LCBwcml2YXRlIHJvdXRlcjogUm91dGVyKSB7XG4gICAgc3VwZXIoYWNjb3JkaW9uKTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSlcbiAgb25DbGljayhldmVudDogTW91c2VFdmVudCkge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5hY2NvcmRpb24ubGlua0l0ZW1DbGlja0ZuKHtcbiAgICAgICAgaXRlbTogdGhpcy5pdGVtLFxuICAgICAgICBwYXJlbnQ6IHRoaXMucGFyZW50LFxuICAgICAgICBldmVudDogZXZlbnRcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoY2hhbmdlc1snaXRlbSddKSB7XG4gICAgICBpZiAodGhpcy5saW5rKSB7XG4gICAgICAgIHRoaXMudXJsVHJlZSA9IHRoaXMucm91dGVyLnBhcnNlVXJsKHRoaXMubGluayk7XG4gICAgICAgIGNvbnN0IGhhbmRlbFBhdGggPSAodXJsOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICBsZXQgcGF0aCA9IHVybDtcbiAgICAgICAgICBjb25zdCBpbmRleCA9IHVybC5pbmRleE9mKCc/Jyk7XG4gICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgIHBhdGggPSB1cmwuc2xpY2UoMCwgaW5kZXgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcGF0aDtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5wYXRoID0gaGFuZGVsUGF0aCh0aGlzLmxpbmspO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy51cmxUcmVlID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnBhdGggPSB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiIWRpc2FibGVkXCI+XG4gIDxhXG4gICAgY2xhc3M9XCJkZXZ1aS1vdmVyLWZsb3ctZWxsaXBzaXNcIlxuICAgIFtyb3V0ZXJMaW5rXT1cInBhdGhcIlxuICAgIFtxdWVyeVBhcmFtc109XCJxdWVyeVBhcmFtc1wiXG4gICAgW2ZyYWdtZW50XT1cImZyYWdtZW50XCJcbiAgICBbcm91dGVyTGlua0FjdGl2ZV09XCInZGV2dWktcm91dGVyLWFjdGl2ZSdcIlxuICAgIHRhcmdldD1cInt7IHRhcmdldCB9fVwiXG4gICAgcmVsPVwibm9vcGVuZXJcIlxuICAgIHRpdGxlPVwie3sgdGl0bGUgfX1cIlxuICA+XG4gICAgPGRpdlxuICAgICAgY2xhc3M9XCJkZXZ1aS1hY2NvcmRpb24tc3BsaXR0ZXJcIlxuICAgICAgW25nQ2xhc3NdPVwieyAnZGV2dWktcGFyZW50LWxpc3QnOiBkZWVwdGggPT09IDAgfVwiXG4gICAgICBbbmdTdHlsZV09XCJ7IGxlZnQ6IGRlZXB0aCAqIDIwICsgMTAgKyAncHgnIH1cIlxuICAgID48L2Rpdj5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiIWl0ZW1UZW1wbGF0ZVwiPlxuICAgICAge3sgdGl0bGUgfX1cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8bmctdGVtcGxhdGVcbiAgICAgICpuZ0lmPVwiaXRlbVRlbXBsYXRlXCJcbiAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cIml0ZW1UZW1wbGF0ZVwiXG4gICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwie1xuICAgICAgICBwYXJlbnQ6IHBhcmVudCxcbiAgICAgICAgaXRlbTogaXRlbSxcbiAgICAgICAgZGVlcHRoOiBkZWVwdGhcbiAgICAgIH1cIlxuICAgID48L25nLXRlbXBsYXRlPlxuICA8L2E+XG48L25nLWNvbnRhaW5lcj5cbjxuZy1jb250YWluZXIgKm5nSWY9XCJkaXNhYmxlZFwiPlxuICA8YSBjbGFzcz1cImRldnVpLW92ZXItZmxvdy1lbGxpcHNpc1wiIHRpdGxlPVwie3sgdGl0bGUgfX1cIj5cbiAgICA8ZGl2XG4gICAgICBjbGFzcz1cImRldnVpLWFjY29yZGlvbi1zcGxpdHRlclwiXG4gICAgICBbbmdDbGFzc109XCJ7ICdkZXZ1aS1wYXJlbnQtbGlzdCc6IGRlZXB0aCA9PT0gMCB9XCJcbiAgICAgIFtuZ1N0eWxlXT1cInsgbGVmdDogZGVlcHRoICogMjAgKyAxMCArICdweCcgfVwiXG4gICAgPjwvZGl2PlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhaXRlbVRlbXBsYXRlXCI+XG4gICAgICB7eyB0aXRsZSB9fVxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgKm5nSWY9XCJpdGVtVGVtcGxhdGVcIlxuICAgICAgW25nVGVtcGxhdGVPdXRsZXRdPVwiaXRlbVRlbXBsYXRlXCJcbiAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7XG4gICAgICAgIHBhcmVudDogcGFyZW50LFxuICAgICAgICBpdGVtOiBpdGVtLFxuICAgICAgICBkZWVwdGg6IGRlZXB0aFxuICAgICAgfVwiXG4gICAgPjwvbmctdGVtcGxhdGU+XG4gIDwvYT5cbjwvbmctY29udGFpbmVyPlxuIl19