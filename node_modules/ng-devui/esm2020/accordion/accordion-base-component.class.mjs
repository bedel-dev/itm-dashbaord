import { Directive, HostBinding, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class AccordionBaseComponent {
    constructor(accordion) {
        this.accordion = accordion;
        this.deepth = 0;
    }
    get disabled() {
        return this.item && this.item[this.accordion.disabledKey];
    }
    get title() {
        return this.item && this.item[this.accordion.titleKey];
    }
    get textIndent() {
        return this.deepth * 20 + 'px';
    }
}
AccordionBaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: AccordionBaseComponent, deps: "invalid", target: i0.ɵɵFactoryTarget.Directive });
AccordionBaseComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.3", type: AccordionBaseComponent, inputs: { item: "item", deepth: "deepth", parent: "parent" }, host: { properties: { "class.disabled": "this.disabled", "attr.title": "this.title", "style.textIndent": "this.textIndent" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: AccordionBaseComponent, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: undefined }]; }, propDecorators: { item: [{
                type: Input
            }], deepth: [{
                type: Input
            }], parent: [{
                type: Input
            }], disabled: [{
                type: HostBinding,
                args: ['class.disabled']
            }], title: [{
                type: HostBinding,
                args: ['attr.title']
            }], textIndent: [{
                type: HostBinding,
                args: ['style.textIndent']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWJhc2UtY29tcG9uZW50LmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGV2dWkvYWNjb3JkaW9uL2FjY29yZGlvbi1iYXNlLWNvbXBvbmVudC5jbGFzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSTlELE1BQU0sT0FBZ0Isc0JBQXNCO0lBa0IxQyxZQUFzQixTQUEyQjtRQUEzQixjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQWhCeEMsV0FBTSxHQUFHLENBQUMsQ0FBQztJQWdCaUMsQ0FBQztJQWJ0RCxJQUNJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFDRCxJQUNXLEtBQUs7UUFDZCxPQUFPLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFDRCxJQUNJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQztJQUNqQyxDQUFDOzttSEFoQm1CLHNCQUFzQjt1R0FBdEIsc0JBQXNCOzJGQUF0QixzQkFBc0I7a0JBRDNDLFNBQVM7NkZBRUMsSUFBSTtzQkFBWixLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBR0YsUUFBUTtzQkFEWCxXQUFXO3VCQUFDLGdCQUFnQjtnQkFLbEIsS0FBSztzQkFEZixXQUFXO3VCQUFDLFlBQVk7Z0JBS3JCLFVBQVU7c0JBRGIsV0FBVzt1QkFBQyxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWNjb3JkaW9uQmFzZSwgQWNjb3JkaW9uT3B0aW9ucyB9IGZyb20gJy4vYWNjb3JkaW9uLnR5cGUnO1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBY2NvcmRpb25CYXNlQ29tcG9uZW50PFQgZXh0ZW5kcyBBY2NvcmRpb25CYXNlPiB7XG4gIEBJbnB1dCgpIGl0ZW06IGFueSB8IFQ7XG4gIEBJbnB1dCgpIGRlZXB0aCA9IDA7XG4gIEBJbnB1dCgpIHBhcmVudDogYW55IHwgVDtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmRpc2FibGVkJylcbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLml0ZW0gJiYgdGhpcy5pdGVtW3RoaXMuYWNjb3JkaW9uLmRpc2FibGVkS2V5XTtcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2F0dHIudGl0bGUnKVxuICBwdWJsaWMgZ2V0IHRpdGxlKCkge1xuICAgIHJldHVybiB0aGlzLml0ZW0gJiYgdGhpcy5pdGVtW3RoaXMuYWNjb3JkaW9uLnRpdGxlS2V5XTtcbiAgfVxuICBASG9zdEJpbmRpbmcoJ3N0eWxlLnRleHRJbmRlbnQnKVxuICBnZXQgdGV4dEluZGVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5kZWVwdGggKiAyMCArICdweCc7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgYWNjb3JkaW9uOiBBY2NvcmRpb25PcHRpb25zKSB7IH1cbn1cbiJdfQ==