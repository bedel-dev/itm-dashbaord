import { Directive, HostBinding } from '@angular/core';
import { AccordionBaseComponent } from './accordion-base-component.class';
import * as i0 from "@angular/core";
export class AccordionBaseItemComponent extends AccordionBaseComponent {
    constructor(accordion) {
        super(accordion);
        this.accordion = accordion;
        this.defaultClasses = true;
    }
    get itemTemplate() {
        return this.accordion.itemTemplate;
    }
    get active() {
        return this.item && this.item[this.accordion.activeKey];
    }
}
AccordionBaseItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: AccordionBaseItemComponent, deps: "invalid", target: i0.ɵɵFactoryTarget.Directive });
AccordionBaseItemComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.3", type: AccordionBaseItemComponent, host: { properties: { "class.active": "this.active", "class.devui-accordion-item-title": "this.defaultClasses", "class.devui-over-flow-ellipsis": "this.defaultClasses" } }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: AccordionBaseItemComponent, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: undefined }]; }, propDecorators: { active: [{
                type: HostBinding,
                args: ['class.active']
            }], defaultClasses: [{
                type: HostBinding,
                args: ['class.devui-accordion-item-title']
            }, {
                type: HostBinding,
                args: ['class.devui-over-flow-ellipsis']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWJhc2UtaXRlbS1jb21wb25lbnQuY2xhc3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kZXZ1aS9hY2NvcmRpb24vYWNjb3JkaW9uLWJhc2UtaXRlbS1jb21wb25lbnQuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7O0FBSTFFLE1BQU0sT0FBZ0IsMEJBQXdELFNBQVEsc0JBQXlCO0lBVzdHLFlBQXNCLFNBQTJCO1FBQy9DLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztRQURHLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBRGpELG1CQUFjLEdBQUcsSUFBSSxDQUFDO0lBR3RCLENBQUM7SUFaRCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDO0lBQ3JDLENBQUM7SUFDRCxJQUNJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzFELENBQUM7O3VIQVBtQiwwQkFBMEI7MkdBQTFCLDBCQUEwQjsyRkFBMUIsMEJBQTBCO2tCQUQvQyxTQUFTOzZGQU1KLE1BQU07c0JBRFQsV0FBVzt1QkFBQyxjQUFjO2dCQU0zQixjQUFjO3NCQUZiLFdBQVc7dUJBQUMsa0NBQWtDOztzQkFDOUMsV0FBVzt1QkFBQyxnQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY2NvcmRpb25CYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9hY2NvcmRpb24tYmFzZS1jb21wb25lbnQuY2xhc3MnO1xuaW1wb3J0IHsgQWNjb3JkaW9uQmFzZUl0ZW0sIEFjY29yZGlvbk9wdGlvbnMgfSBmcm9tICcuL2FjY29yZGlvbi50eXBlJztcblxuQERpcmVjdGl2ZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQWNjb3JkaW9uQmFzZUl0ZW1Db21wb25lbnQ8VCBleHRlbmRzIEFjY29yZGlvbkJhc2VJdGVtPiBleHRlbmRzIEFjY29yZGlvbkJhc2VDb21wb25lbnQ8VD4ge1xuICBnZXQgaXRlbVRlbXBsYXRlKCkge1xuICAgIHJldHVybiB0aGlzLmFjY29yZGlvbi5pdGVtVGVtcGxhdGU7XG4gIH1cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hY3RpdmUnKVxuICBnZXQgYWN0aXZlKCkge1xuICAgIHJldHVybiB0aGlzLml0ZW0gJiYgdGhpcy5pdGVtW3RoaXMuYWNjb3JkaW9uLmFjdGl2ZUtleV07XG4gIH1cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5kZXZ1aS1hY2NvcmRpb24taXRlbS10aXRsZScpXG4gIEBIb3N0QmluZGluZygnY2xhc3MuZGV2dWktb3Zlci1mbG93LWVsbGlwc2lzJylcbiAgZGVmYXVsdENsYXNzZXMgPSB0cnVlO1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgYWNjb3JkaW9uOiBBY2NvcmRpb25PcHRpb25zKSB7XG4gICAgc3VwZXIoYWNjb3JkaW9uKTtcbiAgfVxufVxuIl19