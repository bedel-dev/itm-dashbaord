import { Component, ContentChild, ElementRef, EventEmitter, forwardRef, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { I18nService } from 'ng-devui/i18n';
import { DefaultDateConverter } from 'ng-devui/utils';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { DatepickerProService } from './datepicker-pro.service';
import * as i0 from "@angular/core";
import * as i1 from "./datepicker-pro.service";
import * as i2 from "ng-devui/i18n";
import * as i3 from "./datepicker-panel.component";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
export class DatepickerProCalendarComponent {
    constructor(pickerSrv, i18n) {
        this.pickerSrv = pickerSrv;
        this.i18n = i18n;
        this.isRangeType = false;
        this.showTime = false;
        this.mode = 'date';
        this.startIndexOfWeek = 0;
        this.splitter = '-';
        this.showRangeHeader = true;
        this.allowClear = true;
        this.confirmEvent = new EventEmitter();
        this.cancelEvent = new EventEmitter();
        this.strWidth = 0;
        this._dateValue = [];
        this.unsubscribe$ = new Subject();
        this.onChange = (_) => null;
        this.onTouched = () => null;
        this.i18nText = this.i18n.getI18nText().datePickerPro;
        this.datepickerConvert = new DefaultDateConverter();
    }
    set activeRangeType(type) {
        this.pickerSrv.currentActiveInput = type;
        this.focusChange(type);
        this.pickerSrv.activeInputChange.next(type);
    }
    get curActiveDate() {
        if (this.pickerSrv.currentActiveInput === 'start') {
            return this.pickerSrv.curRangeDate[0] || this.pickerSrv.curRangeDate[1] || new Date();
        }
        else {
            return this.pickerSrv.curRangeDate[1] || this.pickerSrv.curRangeDate[0] || new Date();
        }
    }
    set currentActiveInput(value) {
        this.pickerSrv.currentActiveInput = value;
    }
    get currentActiveInput() {
        return this.pickerSrv.currentActiveInput;
    }
    get dateValue() {
        return this._dateValue;
    }
    set dateValue(value) {
        this._dateValue = value;
        this.getStrWidth();
    }
    get curFormat() {
        if (this.mode === 'year') {
            return 'y';
        }
        else if (this.mode === 'month') {
            return 'y-MM';
        }
        else {
            return this.showTime ? 'y/MM/dd HH:mm:ss' : 'y/MM/dd';
        }
    }
    set minDate(value) {
        if (!value) {
            return;
        }
        this.pickerSrv.minDate = value;
    }
    set maxDate(value) {
        if (!value) {
            return;
        }
        this.pickerSrv.maxDate = value;
    }
    set markedRangeDateList(value) {
        this.pickerSrv.markedRangeDateList = value;
    }
    ;
    set markedDateList(value) {
        this.pickerSrv.markedDateList = value;
    }
    set markDateInfoTemplate(tmp) {
        this.pickerSrv.markDateInfoTemplate = tmp;
    }
    ;
    setI18nText() {
        this.i18nLocale = this.i18n.getI18nText().locale;
        this.i18n.langChange().pipe(takeUntil(this.unsubscribe$)).subscribe((data) => {
            this.i18nLocale = data.locale;
            this.i18nText = data.datePickerPro;
        });
    }
    ngOnInit() {
        this.setI18nText();
        this.initSrvStatus();
        this.initObservable();
    }
    ngAfterViewInit() {
        this.updateCurPosition();
    }
    updateCurPosition() {
        this.pickerSrv.toggleEvent.next(true);
    }
    clear(event) {
        if (event) {
            event.stopPropagation();
        }
        this.pickerSrv.updateDateValue.next({
            type: this.isRangeType ? 'range' : 'single',
            value: this.isRangeType ? [] : null
        });
        this.pickerSrv.updateTimeChange.next({
            hour: null,
            min: null,
            seconds: null
        });
        if (this.isRangeType) {
            this.dateValue = [];
            this.pickerSrv.curRangeDate = [];
            this.currentActiveInput = 'start';
            if (event) {
                this.onChange(this.pickerSrv.curRangeDate);
            }
        }
        else {
            this.pickerSrv.curDate = null;
            if (event) {
                this.onChange(this.pickerSrv.curDate);
            }
        }
    }
    initSrvStatus() {
        this.pickerSrv.showTime = this.showTime;
        this.pickerSrv.isRange = this.isRangeType;
        this.pickerSrv.startIndexOfWeek = this.startIndexOfWeek;
    }
    formatDateToString(date) {
        if (!date) {
            return '';
        }
        return this.datepickerConvert.format(date, this.curFormat);
    }
    initObservable() {
        this.pickerSrv.selectedDateChange.pipe(takeUntil(this.unsubscribe$)).subscribe(change => {
            if (this.isRangeType) {
                this.pickerSrv.curRangeDate = change.value;
                this.dateValue = change.value.map(d => this.formatDateToString(d));
                this.onChange(this.pickerSrv.curRangeDate);
            }
            else {
                this.pickerSrv.curDate = change.value;
                this.onChange(change.value);
            }
        });
        this.pickerSrv.selectedTimeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(time => {
            if (this.isRangeType) {
                const curTime = new Date(this.curActiveDate.getTime()).setHours(time.hour, time.min, time.seconds);
                const curDate = new Date(curTime);
                if (time.activeInput === 'start') {
                    this.pickerSrv.curRangeDate[0] = curDate;
                    if (this.isSameDateAndTimeWrong()) {
                        this.pickerSrv.curRangeDate[1] = curDate;
                        this.dateValue[1] = this.formatDateToString(curDate);
                    }
                    this.dateValue = [this.formatDateToString(curDate), this.dateValue[1]];
                }
                else {
                    this.pickerSrv.curRangeDate[1] = curDate;
                    if (this.isSameDateAndTimeWrong()) {
                        this.pickerSrv.curRangeDate[0] = curDate;
                        this.dateValue[0] = this.formatDateToString(curDate);
                    }
                    this.dateValue = [this.dateValue[0], this.formatDateToString(curDate)];
                }
                this.onChange(this.pickerSrv.curRangeDate);
            }
            else {
                const curDate = new Date((this.pickerSrv.curDate || new Date()).setHours(time.hour, time.min, time.seconds));
                this.pickerSrv.curDate = curDate;
                this.onChange(curDate);
            }
        });
        this.pickerSrv.closeDropdownEvent.pipe(takeUntil(this.unsubscribe$)).subscribe(isConfirm => {
            if (isConfirm) {
                this.confirmEvent.emit(this.pickerSrv.curDate || this.pickerSrv.curRangeDate);
            }
            else {
                this.cancelEvent.emit();
            }
        });
    }
    focusChange(type) {
        this.currentActiveInput = type;
        this.pickerSrv.activeInputChange.next(type);
        if (type === 'start') {
            setTimeout(() => {
                if (this.datepickerInputStart?.nativeElement) {
                    this.datepickerInputStart.nativeElement.focus();
                }
            });
        }
        else {
            setTimeout(() => {
                if (this.datepickerInputEnd?.nativeElement) {
                    this.datepickerInputEnd.nativeElement.focus();
                }
            });
        }
    }
    isSameDateAndTimeWrong() {
        if (this.pickerSrv.curRangeDate[0]?.toDateString() === this.pickerSrv.curRangeDate[1]?.toDateString()) {
            return this.pickerSrv.curRangeDate[0].getTime() > this.pickerSrv.curRangeDate[1].getTime();
        }
        return false;
    }
    writeValue(value) {
        if (this.isRangeType) {
            this.writeRangeValue(value);
        }
        else {
            this.writeSingleValue(value);
        }
    }
    writeRangeValue(value) {
        if (!value || !value.length) {
            this.clear();
            return;
        }
        if (value.find(t => !this.pickerSrv.dateInRange(t))) {
            return;
        }
        this.dateValue = value.map(d => {
            return d ? this.datepickerConvert.format(d, this.curFormat) : '';
        });
        this.pickerSrv.curRangeDate = value;
        this.pickerSrv.updateDateValue.next({
            type: 'range',
            value
        });
    }
    writeSingleValue(value) {
        if (!value || !this.pickerSrv.dateInRange(new Date(value))) {
            this.clear();
            return;
        }
        this.pickerSrv.curDate = value;
        this.pickerSrv.updateDateValue.next({
            type: 'single',
            value
        });
        if (this.showTime) {
            this.pickerSrv.updateTimeChange.next({
                hour: value.getHours(),
                min: value.getMinutes(),
                seconds: value.getSeconds()
            });
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
    getStrWidth() {
        let str = this.pickerSrv.currentActiveInput === 'start' ? this.dateValue[0] : this.dateValue[1];
        if (!str || !str.length) {
            str = this.pickerSrv.currentActiveInput === 'start' ? this.i18nText.startPlaceholder : this.i18nText.endPlaceholder;
        }
        this.strWidth = this.pickerSrv.mearsureStrWidth(str);
    }
}
DatepickerProCalendarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DatepickerProCalendarComponent, deps: [{ token: i1.DatepickerProService }, { token: i2.I18nService }], target: i0.ɵɵFactoryTarget.Component });
DatepickerProCalendarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: DatepickerProCalendarComponent, selector: "d-datepicker-calendar", inputs: { activeRangeType: "activeRangeType", isRangeType: "isRangeType", showTime: "showTime", mode: "mode", startIndexOfWeek: "startIndexOfWeek", splitter: "splitter", showRangeHeader: "showRangeHeader", placeholder: "placeholder", allowClear: "allowClear", minDate: "minDate", maxDate: "maxDate", markedRangeDateList: "markedRangeDateList", markedDateList: "markedDateList" }, outputs: { confirmEvent: "confirmEvent", cancelEvent: "cancelEvent" }, providers: [
        DatepickerProService,
        {
            provide: NG_VALUE_ACCESSOR,
            useExisting: forwardRef(() => DatepickerProCalendarComponent),
            multi: true
        }
    ], queries: [{ propertyName: "customTemplate", first: true, predicate: ["customTemplate"], descendants: true }, { propertyName: "footerTemplate", first: true, predicate: ["footerTemplate"], descendants: true }, { propertyName: "markDateInfoTemplate", first: true, predicate: ["markDateInfoTemplate"], descendants: true }], viewQueries: [{ propertyName: "datepickerInputStart", first: true, predicate: ["dateInputStart"], descendants: true }, { propertyName: "datepickerInputEnd", first: true, predicate: ["dateInputEnd"], descendants: true }], ngImport: i0, template: "<div class=\"devui-calendar-header\" *ngIf=\"showRangeHeader && isRangeType\" [ngStyle]=\"{ width: showTime ? 'auto' : '330px' }\">\n  <div\n    class=\"devui-range-picker devui-input-group devui-dropdown-origin\"\n    [ngClass]=\"{\n      'devui-has-value': dateValue[0] || dateValue[1]\n    }\"\n  >\n    <i class=\"devui-range-picker-icon\">\n      <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" version=\"1.1\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <path\n            d=\"M5,0 L5,1 L11,1 L11,0 L12,0 L12,1 L14,1 C15.1045695,1 16,1.8954305 16,3 L16,14 C16,15.1045695 15.1045695,16 14,16 L2,16 C0.8954305,16 0,15.1045695 0,14 L0,3 C0,1.8954305 0.8954305,1 2,1 L4,1 L4,0 L5,0 Z M15,5 L1,5 L1,14 C1,14.5522847 1.44771525,15 2,15 L14,15 C14.5522847,15 15,14.5522847 15,14 L15,5 Z M6,7 C6.55228475,7 7,7.44771525 7,8 L7,10 C7,10.5522847 6.55228475,11 6,11 L4,11 C3.44771525,11 3,10.5522847 3,10 L3,8 C3,7.44771525 3.44771525,7 4,7 L6,7 Z M6,8 L4,8 L4,10 L6,10 L6,8 Z M4,2 L2,2 C1.44771525,2 1,2.44771525 1,3 L1,4 L15,4 L15,3 C15,2.44771525 14.5522847,2 14,2 L12,2 L12,3 L11,3 L11,2 L5,2 L5,3 L4,3 L4,2 Z\"\n            fill=\"#BABBC0\"\n          ></path>\n        </g>\n      </svg>\n    </i>\n    <input\n      #dateInputStart\n      class=\"devui-input devui-form-control devui-date-start\"\n      [ngClass]=\"{ 'devui-active-input': currentActiveInput === 'start' }\"\n      [placeholder]=\"(placeholder && placeholder[0]) || i18nText.startPlaceholder\"\n      [(ngModel)]=\"dateValue[0]\"\n      (click)=\"focusChange('start')\"\n      autocomplete=\"off\"\n    />\n    <span> {{ splitter }} </span>\n    <input\n      #dateInputEnd\n      class=\"devui-input devui-form-control devui-date-end\"\n      [ngClass]=\"{ 'devui-active-input': currentActiveInput === 'end' }\"\n      [placeholder]=\"(placeholder && placeholder[1]) || i18nText.endPlaceholder\"\n      [(ngModel)]=\"dateValue[1]\"\n      (click)=\"focusChange('end')\"\n      autocomplete=\"off\"\n    />\n    <div\n      class=\"devui-date-input-active-bar\"\n      [style.width.px]=\"strWidth\"\n      [ngClass]=\"{\n        'devui-start-side': currentActiveInput === 'start',\n        'devui-end-side': currentActiveInput === 'end'\n      }\"\n    ></div>\n    <div *ngIf=\"allowClear\" class=\"devui-input-group-addon close-icon-wrapper\" (click)=\"clear($event)\">\n      <div class=\"close-icon\">\n        <svg\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <path\n              d=\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M5.87867966,5.17157288 C5.68341751,4.97631073 5.36683502,4.97631073 5.17157288,5.17157288 C4.99800652,5.34513923 4.97872137,5.61456363 5.11371742,5.80943177 L5.17157288,5.87867966 L7.29218611,7.99929289 L5.17157288,10.1213203 C4.97631073,10.3165825 4.97631073,10.633165 5.17157288,10.8284271 C5.34513923,11.0019935 5.61456363,11.0212786 5.80943177,10.8862826 L5.87867966,10.8284271 L7.99929289,8.70639967 L10.1213203,10.8284271 C10.3165825,11.0236893 10.633165,11.0236893 10.8284271,10.8284271 C11.0019935,10.6548608 11.0212786,10.3854364 10.8862826,10.1905682 L10.8284271,10.1213203 L8.70710678,8 L10.8284271,5.87867966 C11.0236893,5.68341751 11.0236893,5.36683502 10.8284271,5.17157288 C10.6548608,4.99800652 10.3854364,4.97872137 10.1905682,5.11371742 L10.1213203,5.17157288 L8,7.29289322 L5.87867966,5.17157288 Z\"\n              fill-rule=\"nonzero\"\n            ></path>\n          </g>\n        </svg>\n      </div>\n    </div>\n  </div>\n</div>\n<d-datepicker-panel\n  [isRangeType]=\"isRangeType\"\n  [showTime]=\"showTime\"\n  [customTemplate]=\"customTemplate\"\n  [footerTemplate]=\"footerTemplate\"\n></d-datepicker-panel>\n", styles: [":host{display:inline-block}.devui-calendar-header{padding:8px 16px;border-bottom:1px solid #f2f2f3;border-bottom:1px solid var(--devui-dividing-line, #f2f2f3)}.devui-range-picker{padding:0 8px;position:relative;box-sizing:border-box;width:100%;min-height:24px}.devui-range-picker .devui-input{height:26px;padding:4px 8px;width:calc(50% - 18px)}.devui-range-picker .devui-input.devui-active-input{color:#5e7ce0;color:var(--devui-brand, #5e7ce0)}.devui-range-picker .devui-date-input-active-bar{display:block;max-width:calc(50% - 48px);height:1px;background-color:#f2f2f3;background-color:var(--devui-brand-foil, #f2f2f3);position:absolute;bottom:0}.devui-range-picker .devui-date-input-active-bar.devui-start-side{left:35px}.devui-range-picker .devui-date-input-active-bar.devui-end-side{left:calc(50% + 20px)}.devui-range-picker-icon{vertical-align:bottom}.devui-range-picker .close-icon-wrapper{padding:0 8px;visibility:hidden;position:absolute;right:0;top:0;line-height:25px}.devui-range-picker .close-icon-wrapper .close-icon{width:16px;height:16px;display:inline-block;line-height:16px}.devui-range-picker .close-icon-wrapper .close-icon svg{vertical-align:middle;position:relative;top:-.1em}.devui-range-picker .close-icon-wrapper .close-icon svg path{fill:#d7d8da;fill:var(--devui-shape-icon-fill, #d7d8da)}.devui-range-picker .close-icon-wrapper .close-icon:hover svg path{fill:#babbc0;fill:var(--devui-shape-icon-fill-active, #babbc0)}.devui-range-picker.devui-has-value:hover .close-icon-wrapper{visibility:visible}.devui-range-picker:not(.devui-disabled) .close-icon-wrapper{cursor:pointer}.devui-input-group>.devui-input{display:inline-block}.devui-input-group>.devui-input::-ms-clear{display:none}\n"], components: [{ type: i3.DatepickerPanelComponent, selector: "d-datepicker-panel", inputs: ["isRangeType", "showTime", "showCustom", "customTemplate", "footerTemplate", "mode"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DatepickerProCalendarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-datepicker-calendar', providers: [
                        DatepickerProService,
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => DatepickerProCalendarComponent),
                            multi: true
                        }
                    ], preserveWhitespaces: false, template: "<div class=\"devui-calendar-header\" *ngIf=\"showRangeHeader && isRangeType\" [ngStyle]=\"{ width: showTime ? 'auto' : '330px' }\">\n  <div\n    class=\"devui-range-picker devui-input-group devui-dropdown-origin\"\n    [ngClass]=\"{\n      'devui-has-value': dateValue[0] || dateValue[1]\n    }\"\n  >\n    <i class=\"devui-range-picker-icon\">\n      <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" version=\"1.1\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <path\n            d=\"M5,0 L5,1 L11,1 L11,0 L12,0 L12,1 L14,1 C15.1045695,1 16,1.8954305 16,3 L16,14 C16,15.1045695 15.1045695,16 14,16 L2,16 C0.8954305,16 0,15.1045695 0,14 L0,3 C0,1.8954305 0.8954305,1 2,1 L4,1 L4,0 L5,0 Z M15,5 L1,5 L1,14 C1,14.5522847 1.44771525,15 2,15 L14,15 C14.5522847,15 15,14.5522847 15,14 L15,5 Z M6,7 C6.55228475,7 7,7.44771525 7,8 L7,10 C7,10.5522847 6.55228475,11 6,11 L4,11 C3.44771525,11 3,10.5522847 3,10 L3,8 C3,7.44771525 3.44771525,7 4,7 L6,7 Z M6,8 L4,8 L4,10 L6,10 L6,8 Z M4,2 L2,2 C1.44771525,2 1,2.44771525 1,3 L1,4 L15,4 L15,3 C15,2.44771525 14.5522847,2 14,2 L12,2 L12,3 L11,3 L11,2 L5,2 L5,3 L4,3 L4,2 Z\"\n            fill=\"#BABBC0\"\n          ></path>\n        </g>\n      </svg>\n    </i>\n    <input\n      #dateInputStart\n      class=\"devui-input devui-form-control devui-date-start\"\n      [ngClass]=\"{ 'devui-active-input': currentActiveInput === 'start' }\"\n      [placeholder]=\"(placeholder && placeholder[0]) || i18nText.startPlaceholder\"\n      [(ngModel)]=\"dateValue[0]\"\n      (click)=\"focusChange('start')\"\n      autocomplete=\"off\"\n    />\n    <span> {{ splitter }} </span>\n    <input\n      #dateInputEnd\n      class=\"devui-input devui-form-control devui-date-end\"\n      [ngClass]=\"{ 'devui-active-input': currentActiveInput === 'end' }\"\n      [placeholder]=\"(placeholder && placeholder[1]) || i18nText.endPlaceholder\"\n      [(ngModel)]=\"dateValue[1]\"\n      (click)=\"focusChange('end')\"\n      autocomplete=\"off\"\n    />\n    <div\n      class=\"devui-date-input-active-bar\"\n      [style.width.px]=\"strWidth\"\n      [ngClass]=\"{\n        'devui-start-side': currentActiveInput === 'start',\n        'devui-end-side': currentActiveInput === 'end'\n      }\"\n    ></div>\n    <div *ngIf=\"allowClear\" class=\"devui-input-group-addon close-icon-wrapper\" (click)=\"clear($event)\">\n      <div class=\"close-icon\">\n        <svg\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <path\n              d=\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M5.87867966,5.17157288 C5.68341751,4.97631073 5.36683502,4.97631073 5.17157288,5.17157288 C4.99800652,5.34513923 4.97872137,5.61456363 5.11371742,5.80943177 L5.17157288,5.87867966 L7.29218611,7.99929289 L5.17157288,10.1213203 C4.97631073,10.3165825 4.97631073,10.633165 5.17157288,10.8284271 C5.34513923,11.0019935 5.61456363,11.0212786 5.80943177,10.8862826 L5.87867966,10.8284271 L7.99929289,8.70639967 L10.1213203,10.8284271 C10.3165825,11.0236893 10.633165,11.0236893 10.8284271,10.8284271 C11.0019935,10.6548608 11.0212786,10.3854364 10.8862826,10.1905682 L10.8284271,10.1213203 L8.70710678,8 L10.8284271,5.87867966 C11.0236893,5.68341751 11.0236893,5.36683502 10.8284271,5.17157288 C10.6548608,4.99800652 10.3854364,4.97872137 10.1905682,5.11371742 L10.1213203,5.17157288 L8,7.29289322 L5.87867966,5.17157288 Z\"\n              fill-rule=\"nonzero\"\n            ></path>\n          </g>\n        </svg>\n      </div>\n    </div>\n  </div>\n</div>\n<d-datepicker-panel\n  [isRangeType]=\"isRangeType\"\n  [showTime]=\"showTime\"\n  [customTemplate]=\"customTemplate\"\n  [footerTemplate]=\"footerTemplate\"\n></d-datepicker-panel>\n", styles: [":host{display:inline-block}.devui-calendar-header{padding:8px 16px;border-bottom:1px solid #f2f2f3;border-bottom:1px solid var(--devui-dividing-line, #f2f2f3)}.devui-range-picker{padding:0 8px;position:relative;box-sizing:border-box;width:100%;min-height:24px}.devui-range-picker .devui-input{height:26px;padding:4px 8px;width:calc(50% - 18px)}.devui-range-picker .devui-input.devui-active-input{color:#5e7ce0;color:var(--devui-brand, #5e7ce0)}.devui-range-picker .devui-date-input-active-bar{display:block;max-width:calc(50% - 48px);height:1px;background-color:#f2f2f3;background-color:var(--devui-brand-foil, #f2f2f3);position:absolute;bottom:0}.devui-range-picker .devui-date-input-active-bar.devui-start-side{left:35px}.devui-range-picker .devui-date-input-active-bar.devui-end-side{left:calc(50% + 20px)}.devui-range-picker-icon{vertical-align:bottom}.devui-range-picker .close-icon-wrapper{padding:0 8px;visibility:hidden;position:absolute;right:0;top:0;line-height:25px}.devui-range-picker .close-icon-wrapper .close-icon{width:16px;height:16px;display:inline-block;line-height:16px}.devui-range-picker .close-icon-wrapper .close-icon svg{vertical-align:middle;position:relative;top:-.1em}.devui-range-picker .close-icon-wrapper .close-icon svg path{fill:#d7d8da;fill:var(--devui-shape-icon-fill, #d7d8da)}.devui-range-picker .close-icon-wrapper .close-icon:hover svg path{fill:#babbc0;fill:var(--devui-shape-icon-fill-active, #babbc0)}.devui-range-picker.devui-has-value:hover .close-icon-wrapper{visibility:visible}.devui-range-picker:not(.devui-disabled) .close-icon-wrapper{cursor:pointer}.devui-input-group>.devui-input{display:inline-block}.devui-input-group>.devui-input::-ms-clear{display:none}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.DatepickerProService }, { type: i2.I18nService }]; }, propDecorators: { activeRangeType: [{
                type: Input
            }], isRangeType: [{
                type: Input
            }], showTime: [{
                type: Input
            }], mode: [{
                type: Input
            }], startIndexOfWeek: [{
                type: Input
            }], splitter: [{
                type: Input
            }], showRangeHeader: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], allowClear: [{
                type: Input
            }], minDate: [{
                type: Input
            }], maxDate: [{
                type: Input
            }], markedRangeDateList: [{
                type: Input
            }], markedDateList: [{
                type: Input
            }], confirmEvent: [{
                type: Output
            }], cancelEvent: [{
                type: Output
            }], customTemplate: [{
                type: ContentChild,
                args: ['customTemplate']
            }], footerTemplate: [{
                type: ContentChild,
                args: ['footerTemplate']
            }], markDateInfoTemplate: [{
                type: ContentChild,
                args: ['markDateInfoTemplate']
            }], datepickerInputStart: [{
                type: ViewChild,
                args: ['dateInputStart']
            }], datepickerInputEnd: [{
                type: ViewChild,
                args: ['dateInputEnd']
            }] } });
//# sourceMappingURL=data:application/json;base64,