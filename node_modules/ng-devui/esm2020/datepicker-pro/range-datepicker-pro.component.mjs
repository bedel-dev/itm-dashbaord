import { ChangeDetectorRef, Component, ContentChild, ElementRef, EventEmitter, forwardRef, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { I18nService } from 'ng-devui/i18n';
import { DefaultDateConverter } from 'ng-devui/utils';
import { fromEvent, Subject } from 'rxjs';
import { debounceTime, map, takeUntil } from 'rxjs/operators';
import { DatepickerProService } from './datepicker-pro.service';
import * as i0 from "@angular/core";
import * as i1 from "ng-devui/i18n";
import * as i2 from "./datepicker-pro.service";
import * as i3 from "ng-devui/dropdown";
import * as i4 from "./datepicker-panel.component";
import * as i5 from "@angular/common";
import * as i6 from "@angular/forms";
export class RangeDatepickerProComponent {
    constructor(i18n, pickerSrv, cdr) {
        this.i18n = i18n;
        this.pickerSrv = pickerSrv;
        this.cdr = cdr;
        this.mode = 'date';
        this.showTime = false;
        this.disabled = false;
        this.autoOpen = false;
        this.splitter = '-';
        this.startIndexOfWeek = 0;
        this.appendToBody = true;
        this.allowClear = true;
        this.dropdownToggle = new EventEmitter();
        this.confirmEvent = new EventEmitter();
        this._dateValue = [];
        this.unsubscribe$ = new Subject();
        this.isOpen = false;
        this.strWidth = 0;
        this.onChange = (_) => null;
        this.onTouched = () => null;
        this.inputChangeCallback = (type) => {
            const targetValue = type === 'start' ? this.dateValue[0] : this.dateValue[1];
            if (!targetValue) {
                return;
            }
            const inputDate = this.datepickerConvert.parse(targetValue, this.curFormat);
            const curDate = type === 'start' ? this.pickerSrv.curRangeDate[0] : this.pickerSrv.curRangeDate[1];
            if (inputDate instanceof Date && inputDate.getTime() === curDate?.getTime()) {
                return;
            }
            if (this.validateDate(targetValue)) {
                if (type === 'start') {
                    this.pickerSrv.curRangeDate[0] = inputDate;
                }
                else {
                    this.pickerSrv.curRangeDate[1] = inputDate;
                }
                this.pickerSrv.updateDateValue.next({
                    type: 'range',
                    value: this.pickerSrv.curRangeDate
                });
                if (this.showTime) {
                    this.pickerSrv.updateTimeChange.next({
                        activeInput: type,
                        hour: inputDate.getHours(),
                        min: inputDate.getMinutes(),
                        seconds: inputDate.getSeconds()
                    });
                }
            }
        };
        this.inputBlurCallback = (type) => {
            const targetValue = type === 'start' ? this.dateValue[0] : this.dateValue[1];
            if (!this.validateDate(targetValue)) {
                if (type === 'start') {
                    this.dateValue[0] = this.pickerSrv.curRangeDate[0] ?
                        this.datepickerConvert.format(this.pickerSrv.curRangeDate[0], this.curFormat, this.locale || this.i18nLocale) :
                        '';
                }
                else {
                    this.dateValue[1] = this.pickerSrv.curRangeDate[1] ?
                        this.datepickerConvert.format(this.pickerSrv.curRangeDate[1], this.curFormat, this.locale || this.i18nLocale) :
                        '';
                }
            }
            this.getStrWidth();
        };
        this.i18nText = this.i18n.getI18nText().datePickerPro;
        this.datepickerConvert = new DefaultDateConverter();
    }
    set calenderRange(value) {
        this.pickerSrv.calendarRange = value || [1970, 2099];
    }
    set minDate(value) {
        if (!value) {
            return;
        }
        this.pickerSrv.minDate = value;
    }
    set maxDate(value) {
        if (!value) {
            return;
        }
        this.pickerSrv.maxDate = value;
    }
    set markedRangeDateList(value) {
        this.pickerSrv.markedRangeDateList = value;
    }
    ;
    set markedDateList(value) {
        this.pickerSrv.markedDateList = value;
    }
    set markDateInfoTemplate(tmp) {
        this.pickerSrv.markDateInfoTemplate = tmp;
    }
    ;
    get dateValue() {
        return this._dateValue;
    }
    set dateValue(value) {
        this._dateValue = value;
        this.getStrWidth();
    }
    set currentActiveInput(value) {
        this.pickerSrv.currentActiveInput = value;
    }
    get currentActiveInput() {
        return this.pickerSrv.currentActiveInput;
    }
    get dateConfig() {
        return {
            dateConverter: this.datepickerConvert,
            min: this.pickerSrv.minDate || new Date(this.pickerSrv.calendarRange[0] + '/01/01'),
            max: this.pickerSrv.maxDate || new Date(this.pickerSrv.calendarRange[1] + '/12/31'),
            format: {
                date: this.format || 'y/MM/dd',
                time: this.format || 'y/MM/dd HH:mm:ss',
                month: this.format || 'y-MM',
                year: 'y'
            }
        };
    }
    get curFormat() {
        if (this.mode === 'year') {
            return this.dateConfig.format.year;
        }
        else if (this.mode === 'month') {
            return this.dateConfig.format.month;
        }
        else {
            return this.showTime ? this.dateConfig.format.time : this.dateConfig.format.date;
        }
    }
    get curActiveDate() {
        if (this.pickerSrv.currentActiveInput === 'start') {
            return this.pickerSrv.curRangeDate[0] || this.pickerSrv.curRangeDate[1] || new Date();
        }
        else {
            return this.pickerSrv.curRangeDate[1] || this.pickerSrv.curRangeDate[0] || new Date();
        }
    }
    ngOnInit() {
        this.initSrvStatus();
        this.setI18nText();
        setTimeout(() => {
            this.isOpen = this.autoOpen;
        });
    }
    ngAfterViewInit() {
        this.initObservable();
    }
    initSrvStatus() {
        this.pickerSrv.showTime = this.showTime;
        this.pickerSrv.isRange = true;
        this.pickerSrv.startIndexOfWeek = this.startIndexOfWeek;
    }
    initObservable() {
        this.pickerSrv.selectedDateChange.pipe(takeUntil(this.unsubscribe$)).subscribe(change => {
            this.pickerSrv.curRangeDate = change.value;
            this.dateValue = change.value.map(d => this.formatDateToString(d));
            this.onChange(change.value);
        });
        this.pickerSrv.closeDropdownEvent.pipe(takeUntil(this.unsubscribe$)).subscribe(isConfirm => {
            this.isOpen = false;
            this.dropdownToggle.emit(false);
            if (isConfirm) {
                this.confirmEvent.emit(this.pickerSrv.curRangeDate);
            }
        });
        this.pickerSrv.activeInputChange.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {
            this.getStrWidth();
        });
        if (!this.hostTemplate) {
            fromEvent(this.datepickerInputStart.nativeElement, 'input').pipe(takeUntil(this.unsubscribe$), map(t => {
                this.getStrWidth();
                return 'start';
            }), debounceTime(300)).subscribe(this.inputChangeCallback);
            fromEvent(this.datepickerInputEnd.nativeElement, 'input').pipe(takeUntil(this.unsubscribe$), map(t => {
                this.getStrWidth();
                return 'end';
            }), debounceTime(300)).subscribe(this.inputChangeCallback);
            fromEvent(this.datepickerInputStart.nativeElement, 'blur').pipe(takeUntil(this.unsubscribe$), map(t => 'start')).subscribe(this.inputBlurCallback);
            fromEvent(this.datepickerInputEnd.nativeElement, 'blur').pipe(takeUntil(this.unsubscribe$), map(t => 'end')).subscribe(this.inputBlurCallback);
        }
        if (this.showTime) {
            this.pickerSrv.selectedTimeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(change => {
                const curTime = new Date(this.curActiveDate.getTime()).setHours(change.hour, change.min, change.seconds);
                const curDate = new Date(curTime);
                if (change.activeInput === 'start') {
                    this.pickerSrv.curRangeDate[0] = curDate;
                    if (this.isSameDateAndTimeWrong()) {
                        this.pickerSrv.curRangeDate[1] = curDate;
                        this.dateValue[1] = this.formatDateToString(curDate);
                    }
                    this.dateValue = [this.formatDateToString(curDate), this.dateValue[1]];
                }
                else {
                    this.pickerSrv.curRangeDate[1] = curDate;
                    if (this.isSameDateAndTimeWrong()) {
                        this.pickerSrv.curRangeDate[0] = curDate;
                        this.dateValue[0] = this.formatDateToString(curDate);
                    }
                    this.dateValue = [this.dateValue[0], this.formatDateToString(curDate)];
                }
                this.onChange(this.pickerSrv.curRangeDate);
            });
        }
    }
    isSameDateAndTimeWrong() {
        if (this.pickerSrv.curRangeDate[0]?.toDateString() === this.pickerSrv.curRangeDate[1]?.toDateString()) {
            return this.pickerSrv.curRangeDate[0].getTime() > this.pickerSrv.curRangeDate[1].getTime();
        }
        return false;
    }
    getStrWidth() {
        let str = this.pickerSrv.currentActiveInput === 'start' ? this.dateValue[0] : this.dateValue[1];
        if (!str || !str.length) {
            str = this.pickerSrv.currentActiveInput === 'start' ? this.i18nText.startPlaceholder : this.i18nText.endPlaceholder;
        }
        this.strWidth = this.pickerSrv.mearsureStrWidth(str);
    }
    formatDateToString(date) {
        if (!date) {
            return '';
        }
        return this.datepickerConvert.format(date, this.curFormat);
    }
    setI18nText() {
        this.i18nLocale = this.i18n.getI18nText().locale;
        this.i18n.langChange().pipe(takeUntil(this.unsubscribe$)).subscribe((data) => {
            this.i18nLocale = data.locale;
            this.i18nText = data.datePickerPro;
        });
    }
    focusChange(type) {
        if (!this.isOpen) {
            type = 'start';
        }
        this.currentActiveInput = type;
        this.pickerSrv.activeInputChange.next(type);
        if (type === 'start') {
            setTimeout(() => {
                if (this.datepickerInputStart?.nativeElement) {
                    this.datepickerInputStart.nativeElement.focus();
                }
            });
        }
        else {
            setTimeout(() => {
                if (this.datepickerInputEnd?.nativeElement) {
                    this.datepickerInputEnd.nativeElement.focus();
                }
            });
        }
    }
    validateDate(value) {
        const valueDate = this.datepickerConvert.parse(value, this.curFormat);
        const valueFormat = valueDate && !isNaN(valueDate.getTime()) &&
            this.datepickerConvert.format(valueDate, this.curFormat, this.locale || this.i18nLocale);
        if (!valueDate || value !== valueFormat ||
            (value === valueFormat && !this.pickerSrv.dateInRange(valueDate))) {
            return false;
        }
        else {
            return true;
        }
    }
    onToggle(isOpen) {
        if (isOpen !== this.isOpen || isOpen) {
            this.dropdownToggle.emit(isOpen);
        }
        this.isOpen = isOpen;
        this.pickerSrv.toggleEvent.next(isOpen);
    }
    openDropdown(event) {
        if (this.isOpen) {
            event.stopPropagation();
        }
        this.isOpen = true;
    }
    clear(event, isHandle) {
        if (event) {
            event.stopPropagation();
        }
        if (this.disabled && isHandle) {
            return;
        }
        this.pickerSrv.updateDateValue.next({
            type: 'range',
            value: []
        });
        this.pickerSrv.updateTimeChange.next({
            hour: null,
            min: null,
            seconds: null
        });
        this.dateValue = [];
        this.pickerSrv.curRangeDate = [];
        this.currentActiveInput = 'start';
        if (event) {
            this.onChange(this.pickerSrv.curRangeDate);
        }
    }
    writeValue(value) {
        if (!value || !value.length) {
            this.clear();
            return;
        }
        if (value.find(t => !this.pickerSrv.dateInRange(t))) {
            return;
        }
        this.dateValue = value.map(d => {
            return d ? this.datepickerConvert.format(d, this.curFormat) : '';
        });
        this.pickerSrv.curRangeDate = value;
        this.pickerSrv.updateDateValue.next({
            type: 'range',
            value
        });
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
}
RangeDatepickerProComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: RangeDatepickerProComponent, deps: [{ token: i1.I18nService }, { token: i2.DatepickerProService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
RangeDatepickerProComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: RangeDatepickerProComponent, selector: "d-range-datepicker-pro", inputs: { mode: "mode", showTime: "showTime", disabled: "disabled", autoOpen: "autoOpen", format: "format", locale: "locale", cssClass: "cssClass", splitter: "splitter", width: "width", startIndexOfWeek: "startIndexOfWeek", appendToBody: "appendToBody", placeholder: "placeholder", allowClear: "allowClear", calenderRange: "calenderRange", minDate: "minDate", maxDate: "maxDate", markedRangeDateList: "markedRangeDateList", markedDateList: "markedDateList" }, outputs: { dropdownToggle: "dropdownToggle", confirmEvent: "confirmEvent" }, providers: [
        DatepickerProService,
        {
            provide: NG_VALUE_ACCESSOR,
            useExisting: forwardRef(() => RangeDatepickerProComponent),
            multi: true
        }
    ], queries: [{ propertyName: "customTemplate", first: true, predicate: ["customTemplate"], descendants: true }, { propertyName: "footerTemplate", first: true, predicate: ["footerTemplate"], descendants: true }, { propertyName: "hostTemplate", first: true, predicate: ["hostTemplate"], descendants: true }, { propertyName: "markDateInfoTemplate", first: true, predicate: ["markDateInfoTemplate"], descendants: true }], viewQueries: [{ propertyName: "datepickerInputStart", first: true, predicate: ["dateInputStart"], descendants: true }, { propertyName: "datepickerInputEnd", first: true, predicate: ["dateInputEnd"], descendants: true }], ngImport: i0, template: "<div\n  class=\"devui-datepicker-pro-wrapper {{ cssClass }}\"\n  *ngIf=\"appendToBody; else normal\"\n  dDropDown\n  appendToBody\n  [disabled]=\"disabled\"\n  [isOpen]=\"isOpen\"\n  [trigger]=\"'manually'\"\n  (toggleEvent)=\"onToggle($event)\"\n  (click)=\"openDropdown($event)\"\n  [closeScope]=\"'blank'\"\n  [ngStyle]=\"{ width: width || (showTime ? '400px' : '300px') }\"\n>\n  <div dDropDownToggle>\n    <ng-template [ngTemplateOutlet]=\"hostTemplate || default\" [ngTemplateOutletContext]=\"{ values: dateValue }\"></ng-template>\n  </div>\n\n  <div class=\"devui-datepicker-pro-dropdown-panel\" [ngStyle]=\"{ paddingBottom: !showTime && !footerTemplate ? 0 : '4px' }\" dDropDownMenu>\n    <d-datepicker-panel\n      [isRangeType]=\"true\"\n      [showTime]=\"showTime\"\n      [customTemplate]=\"customTemplate\"\n      [footerTemplate]=\"footerTemplate\"\n      [mode]=\"mode\"\n    >\n    </d-datepicker-panel>\n  </div>\n</div>\n\n<ng-template #normal>\n  <div\n    class=\"devui-datepicker-pro-wrapper {{ cssClass }}\"\n    dDropDown\n    [disabled]=\"disabled\"\n    [isOpen]=\"isOpen\"\n    [trigger]=\"'manually'\"\n    (toggleEvent)=\"onToggle($event)\"\n    (click)=\"openDropdown($event)\"\n    [closeScope]=\"'blank'\"\n    [ngStyle]=\"{ width: width || (showTime ? '400px' : '300px') }\"\n  >\n    <div dDropDownToggle>\n      <ng-template [ngTemplateOutlet]=\"hostTemplate || default\" [ngTemplateOutletContext]=\"{ values: dateValue }\"></ng-template>\n    </div>\n\n    <div class=\"devui-datepicker-pro-dropdown-panel\" [ngStyle]=\"{ paddingBottom: !showTime && !footerTemplate ? 0 : '4px' }\" dDropDownMenu>\n      <d-datepicker-panel\n        [isRangeType]=\"true\"\n        [showTime]=\"showTime\"\n        [customTemplate]=\"customTemplate\"\n        [footerTemplate]=\"footerTemplate\"\n        [mode]=\"mode\"\n      >\n      </d-datepicker-panel>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #default>\n  <div\n    class=\"devui-range-picker devui-input-group devui-dropdown-origin\"\n    [ngClass]=\"{\n      'devui-disabled': disabled,\n      'devui-has-value': dateValue[0] || dateValue[1]\n    }\"\n  >\n    <i class=\"devui-range-picker-icon\">\n      <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" version=\"1.1\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <path\n            d=\"M5,0 L5,1 L11,1 L11,0 L12,0 L12,1 L14,1 C15.1045695,1 16,1.8954305 16,3 L16,14 C16,15.1045695 15.1045695,16 14,16 L2,16 C0.8954305,16 0,15.1045695 0,14 L0,3 C0,1.8954305 0.8954305,1 2,1 L4,1 L4,0 L5,0 Z M15,5 L1,5 L1,14 C1,14.5522847 1.44771525,15 2,15 L14,15 C14.5522847,15 15,14.5522847 15,14 L15,5 Z M6,7 C6.55228475,7 7,7.44771525 7,8 L7,10 C7,10.5522847 6.55228475,11 6,11 L4,11 C3.44771525,11 3,10.5522847 3,10 L3,8 C3,7.44771525 3.44771525,7 4,7 L6,7 Z M6,8 L4,8 L4,10 L6,10 L6,8 Z M4,2 L2,2 C1.44771525,2 1,2.44771525 1,3 L1,4 L15,4 L15,3 C15,2.44771525 14.5522847,2 14,2 L12,2 L12,3 L11,3 L11,2 L5,2 L5,3 L4,3 L4,2 Z\"\n            fill=\"#BABBC0\"\n          ></path>\n        </g>\n      </svg>\n    </i>\n    <input\n      #dateInputStart\n      class=\"devui-input devui-form-control devui-date-start\"\n      [ngClass]=\"{ 'devui-active-input': currentActiveInput === 'start' && isOpen }\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"(placeholder && placeholder[0]) || i18nText.startPlaceholder\"\n      [(ngModel)]=\"dateValue[0]\"\n      (click)=\"focusChange('start')\"\n      autocomplete=\"off\"\n    />\n    <span> {{ splitter }} </span>\n    <input\n      #dateInputEnd\n      class=\"devui-input devui-form-control devui-date-end\"\n      [ngClass]=\"{ 'devui-active-input': currentActiveInput === 'end' && isOpen }\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"(placeholder && placeholder[1]) || i18nText.endPlaceholder\"\n      [(ngModel)]=\"dateValue[1]\"\n      (click)=\"focusChange('end')\"\n      autocomplete=\"off\"\n    />\n    <div\n      class=\"devui-date-input-active-bar\"\n      *ngIf=\"isOpen\"\n      [style.width.px]=\"strWidth\"\n      [ngClass]=\"{\n        'devui-start-side': currentActiveInput === 'start',\n        'devui-end-side': currentActiveInput === 'end'\n      }\"\n    ></div>\n    <div *ngIf=\"allowClear\" class=\"devui-input-group-addon close-icon-wrapper\" (click)=\"clear($event, true)\">\n      <div class=\"close-icon\">\n        <svg\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <path\n              d=\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M5.87867966,5.17157288 C5.68341751,4.97631073 5.36683502,4.97631073 5.17157288,5.17157288 C4.99800652,5.34513923 4.97872137,5.61456363 5.11371742,5.80943177 L5.17157288,5.87867966 L7.29218611,7.99929289 L5.17157288,10.1213203 C4.97631073,10.3165825 4.97631073,10.633165 5.17157288,10.8284271 C5.34513923,11.0019935 5.61456363,11.0212786 5.80943177,10.8862826 L5.87867966,10.8284271 L7.99929289,8.70639967 L10.1213203,10.8284271 C10.3165825,11.0236893 10.633165,11.0236893 10.8284271,10.8284271 C11.0019935,10.6548608 11.0212786,10.3854364 10.8862826,10.1905682 L10.8284271,10.1213203 L8.70710678,8 L10.8284271,5.87867966 C11.0236893,5.68341751 11.0236893,5.36683502 10.8284271,5.17157288 C10.6548608,4.99800652 10.3854364,4.97872137 10.1905682,5.11371742 L10.1213203,5.17157288 L8,7.29289322 L5.87867966,5.17157288 Z\"\n              fill-rule=\"nonzero\"\n            ></path>\n          </g>\n        </svg>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", styles: [".devui-datepicker-pro-wrapper{display:inline-block;background-color:#fff;background-color:var(--devui-base-bg, #ffffff)}.devui-datepicker-pro-wrapper .devui-range-picker{padding:0 8px;position:relative;box-sizing:border-box;width:100%;min-height:24px}.devui-datepicker-pro-wrapper .devui-range-picker .devui-input{padding:4px 8px;width:calc(50% - 18px)}.devui-datepicker-pro-wrapper .devui-range-picker .devui-input.devui-active-input{color:#5e7ce0;color:var(--devui-brand, #5e7ce0)}.devui-datepicker-pro-wrapper .devui-range-picker .devui-date-input-active-bar{display:block;max-width:calc(50% - 48px);height:1px;background-color:#f2f2f3;background-color:var(--devui-brand-foil, #f2f2f3);position:absolute;bottom:0}.devui-datepicker-pro-wrapper .devui-range-picker .devui-date-input-active-bar.devui-start-side{left:35px}.devui-datepicker-pro-wrapper .devui-range-picker .devui-date-input-active-bar.devui-end-side{left:calc(50% + 20px)}.devui-datepicker-pro-wrapper .devui-range-picker-icon{vertical-align:bottom}.devui-datepicker-pro-wrapper .devui-range-picker .close-icon-wrapper{padding:0 8px;visibility:hidden;position:absolute;right:0;top:0;line-height:25px}.devui-datepicker-pro-wrapper .devui-range-picker .close-icon-wrapper .close-icon{width:16px;height:16px;display:inline-block;line-height:16px}.devui-datepicker-pro-wrapper .devui-range-picker .close-icon-wrapper .close-icon svg{vertical-align:middle;position:relative;top:-.1em}.devui-datepicker-pro-wrapper .devui-range-picker .close-icon-wrapper .close-icon svg path{fill:#d7d8da;fill:var(--devui-shape-icon-fill, #d7d8da)}.devui-datepicker-pro-wrapper .devui-range-picker .close-icon-wrapper .close-icon:hover svg path{fill:#babbc0;fill:var(--devui-shape-icon-fill-active, #babbc0)}.devui-datepicker-pro-wrapper .devui-range-picker.devui-has-value:hover .close-icon-wrapper{visibility:visible}.devui-datepicker-pro-wrapper .devui-range-picker:not(.devui-disabled) .close-icon-wrapper{cursor:pointer}.devui-datepicker-pro-wrapper .devui-input-group>.devui-input{display:inline-block}.devui-datepicker-pro-wrapper .devui-input-group>.devui-input::-ms-clear{display:none}\n"], components: [{ type: i3.DropDownAppendToBodyComponent, selector: "[dDropDown][appendToBody]", inputs: ["alignOrigin", "appendToBodyDirections"] }, { type: i4.DatepickerPanelComponent, selector: "d-datepicker-panel", inputs: ["isRangeType", "showTime", "showCustom", "customTemplate", "footerTemplate", "mode"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.DropDownDirective, selector: "[dDropDown]", inputs: ["isOpen", "disabled", "showAnimation", "trigger", "closeScope", "closeOnMouseLeaveMenu"], outputs: ["toggleEvent"], exportAs: ["d-dropdown"] }, { type: i5.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i3.DropDownToggleDirective, selector: "[dDropDownToggle]", inputs: ["toggleOnFocus", "autoFocus"], exportAs: ["d-dropdown-toggle"] }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i3.DropDownMenuDirective, selector: "[dDropDownMenu]", exportAs: ["d-dropdown-menu"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i6.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: RangeDatepickerProComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-range-datepicker-pro', providers: [
                        DatepickerProService,
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => RangeDatepickerProComponent),
                            multi: true
                        }
                    ], preserveWhitespaces: false, template: "<div\n  class=\"devui-datepicker-pro-wrapper {{ cssClass }}\"\n  *ngIf=\"appendToBody; else normal\"\n  dDropDown\n  appendToBody\n  [disabled]=\"disabled\"\n  [isOpen]=\"isOpen\"\n  [trigger]=\"'manually'\"\n  (toggleEvent)=\"onToggle($event)\"\n  (click)=\"openDropdown($event)\"\n  [closeScope]=\"'blank'\"\n  [ngStyle]=\"{ width: width || (showTime ? '400px' : '300px') }\"\n>\n  <div dDropDownToggle>\n    <ng-template [ngTemplateOutlet]=\"hostTemplate || default\" [ngTemplateOutletContext]=\"{ values: dateValue }\"></ng-template>\n  </div>\n\n  <div class=\"devui-datepicker-pro-dropdown-panel\" [ngStyle]=\"{ paddingBottom: !showTime && !footerTemplate ? 0 : '4px' }\" dDropDownMenu>\n    <d-datepicker-panel\n      [isRangeType]=\"true\"\n      [showTime]=\"showTime\"\n      [customTemplate]=\"customTemplate\"\n      [footerTemplate]=\"footerTemplate\"\n      [mode]=\"mode\"\n    >\n    </d-datepicker-panel>\n  </div>\n</div>\n\n<ng-template #normal>\n  <div\n    class=\"devui-datepicker-pro-wrapper {{ cssClass }}\"\n    dDropDown\n    [disabled]=\"disabled\"\n    [isOpen]=\"isOpen\"\n    [trigger]=\"'manually'\"\n    (toggleEvent)=\"onToggle($event)\"\n    (click)=\"openDropdown($event)\"\n    [closeScope]=\"'blank'\"\n    [ngStyle]=\"{ width: width || (showTime ? '400px' : '300px') }\"\n  >\n    <div dDropDownToggle>\n      <ng-template [ngTemplateOutlet]=\"hostTemplate || default\" [ngTemplateOutletContext]=\"{ values: dateValue }\"></ng-template>\n    </div>\n\n    <div class=\"devui-datepicker-pro-dropdown-panel\" [ngStyle]=\"{ paddingBottom: !showTime && !footerTemplate ? 0 : '4px' }\" dDropDownMenu>\n      <d-datepicker-panel\n        [isRangeType]=\"true\"\n        [showTime]=\"showTime\"\n        [customTemplate]=\"customTemplate\"\n        [footerTemplate]=\"footerTemplate\"\n        [mode]=\"mode\"\n      >\n      </d-datepicker-panel>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #default>\n  <div\n    class=\"devui-range-picker devui-input-group devui-dropdown-origin\"\n    [ngClass]=\"{\n      'devui-disabled': disabled,\n      'devui-has-value': dateValue[0] || dateValue[1]\n    }\"\n  >\n    <i class=\"devui-range-picker-icon\">\n      <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" version=\"1.1\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <path\n            d=\"M5,0 L5,1 L11,1 L11,0 L12,0 L12,1 L14,1 C15.1045695,1 16,1.8954305 16,3 L16,14 C16,15.1045695 15.1045695,16 14,16 L2,16 C0.8954305,16 0,15.1045695 0,14 L0,3 C0,1.8954305 0.8954305,1 2,1 L4,1 L4,0 L5,0 Z M15,5 L1,5 L1,14 C1,14.5522847 1.44771525,15 2,15 L14,15 C14.5522847,15 15,14.5522847 15,14 L15,5 Z M6,7 C6.55228475,7 7,7.44771525 7,8 L7,10 C7,10.5522847 6.55228475,11 6,11 L4,11 C3.44771525,11 3,10.5522847 3,10 L3,8 C3,7.44771525 3.44771525,7 4,7 L6,7 Z M6,8 L4,8 L4,10 L6,10 L6,8 Z M4,2 L2,2 C1.44771525,2 1,2.44771525 1,3 L1,4 L15,4 L15,3 C15,2.44771525 14.5522847,2 14,2 L12,2 L12,3 L11,3 L11,2 L5,2 L5,3 L4,3 L4,2 Z\"\n            fill=\"#BABBC0\"\n          ></path>\n        </g>\n      </svg>\n    </i>\n    <input\n      #dateInputStart\n      class=\"devui-input devui-form-control devui-date-start\"\n      [ngClass]=\"{ 'devui-active-input': currentActiveInput === 'start' && isOpen }\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"(placeholder && placeholder[0]) || i18nText.startPlaceholder\"\n      [(ngModel)]=\"dateValue[0]\"\n      (click)=\"focusChange('start')\"\n      autocomplete=\"off\"\n    />\n    <span> {{ splitter }} </span>\n    <input\n      #dateInputEnd\n      class=\"devui-input devui-form-control devui-date-end\"\n      [ngClass]=\"{ 'devui-active-input': currentActiveInput === 'end' && isOpen }\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"(placeholder && placeholder[1]) || i18nText.endPlaceholder\"\n      [(ngModel)]=\"dateValue[1]\"\n      (click)=\"focusChange('end')\"\n      autocomplete=\"off\"\n    />\n    <div\n      class=\"devui-date-input-active-bar\"\n      *ngIf=\"isOpen\"\n      [style.width.px]=\"strWidth\"\n      [ngClass]=\"{\n        'devui-start-side': currentActiveInput === 'start',\n        'devui-end-side': currentActiveInput === 'end'\n      }\"\n    ></div>\n    <div *ngIf=\"allowClear\" class=\"devui-input-group-addon close-icon-wrapper\" (click)=\"clear($event, true)\">\n      <div class=\"close-icon\">\n        <svg\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <path\n              d=\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M5.87867966,5.17157288 C5.68341751,4.97631073 5.36683502,4.97631073 5.17157288,5.17157288 C4.99800652,5.34513923 4.97872137,5.61456363 5.11371742,5.80943177 L5.17157288,5.87867966 L7.29218611,7.99929289 L5.17157288,10.1213203 C4.97631073,10.3165825 4.97631073,10.633165 5.17157288,10.8284271 C5.34513923,11.0019935 5.61456363,11.0212786 5.80943177,10.8862826 L5.87867966,10.8284271 L7.99929289,8.70639967 L10.1213203,10.8284271 C10.3165825,11.0236893 10.633165,11.0236893 10.8284271,10.8284271 C11.0019935,10.6548608 11.0212786,10.3854364 10.8862826,10.1905682 L10.8284271,10.1213203 L8.70710678,8 L10.8284271,5.87867966 C11.0236893,5.68341751 11.0236893,5.36683502 10.8284271,5.17157288 C10.6548608,4.99800652 10.3854364,4.97872137 10.1905682,5.11371742 L10.1213203,5.17157288 L8,7.29289322 L5.87867966,5.17157288 Z\"\n              fill-rule=\"nonzero\"\n            ></path>\n          </g>\n        </svg>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", styles: [".devui-datepicker-pro-wrapper{display:inline-block;background-color:#fff;background-color:var(--devui-base-bg, #ffffff)}.devui-datepicker-pro-wrapper .devui-range-picker{padding:0 8px;position:relative;box-sizing:border-box;width:100%;min-height:24px}.devui-datepicker-pro-wrapper .devui-range-picker .devui-input{padding:4px 8px;width:calc(50% - 18px)}.devui-datepicker-pro-wrapper .devui-range-picker .devui-input.devui-active-input{color:#5e7ce0;color:var(--devui-brand, #5e7ce0)}.devui-datepicker-pro-wrapper .devui-range-picker .devui-date-input-active-bar{display:block;max-width:calc(50% - 48px);height:1px;background-color:#f2f2f3;background-color:var(--devui-brand-foil, #f2f2f3);position:absolute;bottom:0}.devui-datepicker-pro-wrapper .devui-range-picker .devui-date-input-active-bar.devui-start-side{left:35px}.devui-datepicker-pro-wrapper .devui-range-picker .devui-date-input-active-bar.devui-end-side{left:calc(50% + 20px)}.devui-datepicker-pro-wrapper .devui-range-picker-icon{vertical-align:bottom}.devui-datepicker-pro-wrapper .devui-range-picker .close-icon-wrapper{padding:0 8px;visibility:hidden;position:absolute;right:0;top:0;line-height:25px}.devui-datepicker-pro-wrapper .devui-range-picker .close-icon-wrapper .close-icon{width:16px;height:16px;display:inline-block;line-height:16px}.devui-datepicker-pro-wrapper .devui-range-picker .close-icon-wrapper .close-icon svg{vertical-align:middle;position:relative;top:-.1em}.devui-datepicker-pro-wrapper .devui-range-picker .close-icon-wrapper .close-icon svg path{fill:#d7d8da;fill:var(--devui-shape-icon-fill, #d7d8da)}.devui-datepicker-pro-wrapper .devui-range-picker .close-icon-wrapper .close-icon:hover svg path{fill:#babbc0;fill:var(--devui-shape-icon-fill-active, #babbc0)}.devui-datepicker-pro-wrapper .devui-range-picker.devui-has-value:hover .close-icon-wrapper{visibility:visible}.devui-datepicker-pro-wrapper .devui-range-picker:not(.devui-disabled) .close-icon-wrapper{cursor:pointer}.devui-datepicker-pro-wrapper .devui-input-group>.devui-input{display:inline-block}.devui-datepicker-pro-wrapper .devui-input-group>.devui-input::-ms-clear{display:none}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.I18nService }, { type: i2.DatepickerProService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { mode: [{
                type: Input
            }], showTime: [{
                type: Input
            }], disabled: [{
                type: Input
            }], autoOpen: [{
                type: Input
            }], format: [{
                type: Input
            }], locale: [{
                type: Input
            }], cssClass: [{
                type: Input
            }], splitter: [{
                type: Input
            }], width: [{
                type: Input
            }], startIndexOfWeek: [{
                type: Input
            }], appendToBody: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], allowClear: [{
                type: Input
            }], calenderRange: [{
                type: Input
            }], minDate: [{
                type: Input
            }], maxDate: [{
                type: Input
            }], markedRangeDateList: [{
                type: Input
            }], markedDateList: [{
                type: Input
            }], dropdownToggle: [{
                type: Output
            }], confirmEvent: [{
                type: Output
            }], customTemplate: [{
                type: ContentChild,
                args: ['customTemplate']
            }], footerTemplate: [{
                type: ContentChild,
                args: ['footerTemplate']
            }], hostTemplate: [{
                type: ContentChild,
                args: ['hostTemplate']
            }], markDateInfoTemplate: [{
                type: ContentChild,
                args: ['markDateInfoTemplate']
            }], datepickerInputStart: [{
                type: ViewChild,
                args: ['dateInputStart']
            }], datepickerInputEnd: [{
                type: ViewChild,
                args: ['dateInputEnd']
            }] } });
//# sourceMappingURL=data:application/json;base64,