import { Component, ContentChild, ElementRef, EventEmitter, forwardRef, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { I18nService } from 'ng-devui/i18n';
import { DefaultDateConverter } from 'ng-devui/utils';
import { fromEvent, Subject } from 'rxjs';
import { debounceTime, takeUntil } from 'rxjs/operators';
import { DatepickerProService } from './datepicker-pro.service';
import * as i0 from "@angular/core";
import * as i1 from "ng-devui/i18n";
import * as i2 from "./datepicker-pro.service";
import * as i3 from "ng-devui/dropdown";
import * as i4 from "./datepicker-panel.component";
import * as i5 from "@angular/common";
import * as i6 from "@angular/forms";
export class DatepickerProComponent {
    constructor(i18n, pickerSrv) {
        this.i18n = i18n;
        this.pickerSrv = pickerSrv;
        this.mode = 'date';
        this.showTime = false;
        this.disabled = false;
        this.autoOpen = false;
        this.showAnimation = true;
        this.appendToBody = true;
        this.allowClear = true;
        this.dropdownToggle = new EventEmitter();
        this.confirmEvent = new EventEmitter();
        this.dateValue = '';
        this.unsubscribe$ = new Subject();
        this.isOpen = false;
        this.onChange = (_) => null;
        this.onTouched = () => null;
        this.i18nText = this.i18n.getI18nText().datePickerPro;
        this.datepickerConvert = new DefaultDateConverter();
    }
    set calenderRange(value) {
        this.pickerSrv.calendarRange = value || [1970, 2099];
    }
    set minDate(value) {
        if (!value) {
            return;
        }
        this.pickerSrv.minDate = value;
    }
    set maxDate(value) {
        if (!value) {
            return;
        }
        this.pickerSrv.maxDate = value;
    }
    set markedRangeDateList(value) {
        this.pickerSrv.markedRangeDateList = value;
    }
    ;
    set markedDateList(value) {
        this.pickerSrv.markedDateList = value;
    }
    set markDateInfoTemplate(tmp) {
        this.pickerSrv.markDateInfoTemplate = tmp;
    }
    ;
    get dateConfig() {
        return {
            dateConverter: this.datepickerConvert,
            min: this.pickerSrv.minDate || new Date(this.pickerSrv.calendarRange[0] + '/01/01'),
            max: this.pickerSrv.maxDate || new Date(this.pickerSrv.calendarRange[1] + '/12/31'),
            format: {
                date: this.format || 'y/MM/dd',
                time: this.format || 'y/MM/dd HH:mm:ss',
                month: this.format || 'y-MM',
                year: 'y'
            }
        };
    }
    get curFormat() {
        if (this.mode === 'year') {
            return this.dateConfig.format.year;
        }
        else if (this.mode === 'month') {
            return this.dateConfig.format.month;
        }
        else {
            return this.showTime ? this.dateConfig.format.time : this.dateConfig.format.date;
        }
    }
    ngOnInit() {
        this.initSrvStatus();
        this.setI18nText();
        setTimeout(() => {
            this.isOpen = this.autoOpen;
        });
    }
    ngAfterViewInit() {
        this.initObservable();
    }
    initSrvStatus() {
        this.pickerSrv.showTime = this.showTime;
        this.pickerSrv.isRange = false;
    }
    initObservable() {
        this.pickerSrv.selectedDateChange.pipe(takeUntil(this.unsubscribe$)).subscribe(change => {
            this.dateValue = this.formatDateToString(change.value);
            this.pickerSrv.curDate = change.value;
            this.onChange(change.value);
        });
        this.pickerSrv.selectedTimeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(time => {
            if (this.dateValue) {
                const curTime = this.datepickerConvert.parse(this.dateValue, this.curFormat).setHours(time.hour, time.min, time.seconds);
                const curDate = new Date(curTime);
                this.pickerSrv.curDate = curDate;
                this.dateValue = this.formatDateToString(curDate);
                this.onChange(curDate);
            }
            else {
                this.writeValue(new Date(new Date().setHours(time.hour, time.min, time.seconds)));
                this.onChange(this.pickerSrv.curDate);
            }
        });
        this.pickerSrv.closeDropdownEvent.pipe(takeUntil(this.unsubscribe$)).subscribe(isConfirm => {
            this.isOpen = false;
            this.dropdownToggle.emit(false);
            if (isConfirm) {
                this.confirmEvent.emit(this.pickerSrv.curDate);
            }
        });
        if (!this.hostTemplate) {
            fromEvent(this.datepickerInput.nativeElement, 'input').pipe(takeUntil(this.unsubscribe$), debounceTime(300)).subscribe((event) => {
                if (!this.dateValue) {
                    return;
                }
                const inputDate = this.datepickerConvert.parse(this.dateValue, this.curFormat);
                if (inputDate instanceof Date && inputDate.getTime() === this.pickerSrv.curDate.getTime()) {
                    return;
                }
                if (this.validateDate(this.dateValue)) {
                    this.pickerSrv.curDate = inputDate;
                    this.pickerSrv.updateDateValue.next({
                        type: 'single',
                        value: inputDate
                    });
                    if (this.showTime) {
                        this.pickerSrv.updateTimeChange.next({
                            hour: inputDate.getHours(),
                            min: inputDate.getMinutes(),
                            seconds: inputDate.getSeconds()
                        });
                    }
                }
            });
            fromEvent(this.datepickerInput.nativeElement, 'blur').pipe(takeUntil(this.unsubscribe$)).subscribe(() => {
                if (!this.validateDate(this.dateValue)) {
                    this.dateValue = this.pickerSrv.curDate ?
                        this.datepickerConvert.format(this.pickerSrv.curDate, this.curFormat, this.i18nLocale) :
                        '';
                }
            });
        }
    }
    setI18nText() {
        this.i18nLocale = this.i18n.getI18nText().locale;
        this.i18n.langChange().pipe(takeUntil(this.unsubscribe$)).subscribe((data) => {
            this.i18nLocale = data.locale;
            this.i18nText = data.datePickerPro;
        });
    }
    validateDate(value) {
        const valueDate = this.datepickerConvert.parse(value, this.curFormat);
        const valueFormat = valueDate && !isNaN(valueDate.getTime()) &&
            this.datepickerConvert.format(valueDate, this.curFormat, this.i18nLocale);
        if (!valueDate || value !== valueFormat ||
            (value === valueFormat && !this.pickerSrv.dateInRange(valueDate))) {
            return false;
        }
        else {
            return true;
        }
    }
    formatDateToString(date) {
        return this.datepickerConvert.format(date, this.curFormat);
    }
    clear(event, isHandle) {
        if (event) {
            event.stopPropagation();
        }
        if (this.disabled && isHandle) {
            return;
        }
        this.pickerSrv.updateDateValue.next({
            type: 'single',
            value: null
        });
        this.pickerSrv.updateTimeChange.next({
            hour: null,
            min: null,
            seconds: null
        });
        this.dateValue = null;
        this.pickerSrv.curDate = null;
        if (event) {
            this.onChange(this.pickerSrv.curDate);
        }
    }
    onToggle(isOpen) {
        if (isOpen !== this.isOpen || isOpen) {
            this.dropdownToggle.emit(isOpen);
        }
        this.isOpen = isOpen;
        this.pickerSrv.toggleEvent.next(isOpen);
    }
    openDropdown(event) {
        if (this.isOpen) {
            event.stopPropagation();
        }
        this.isOpen = true;
        setTimeout(() => {
            if (this.datepickerInput?.nativeElement) {
                this.datepickerInput.nativeElement.focus();
            }
        });
    }
    writeValue(value) {
        if (!value || !this.pickerSrv.dateInRange(new Date(value))) {
            this.clear();
            return;
        }
        this.dateValue = this.formatDateToString(value);
        this.pickerSrv.curDate = value;
        this.pickerSrv.updateDateValue.next({
            type: 'single',
            value
        });
        if (this.showTime) {
            this.pickerSrv.updateTimeChange.next({
                hour: value.getHours(),
                min: value.getMinutes(),
                seconds: value.getSeconds()
            });
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
}
DatepickerProComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DatepickerProComponent, deps: [{ token: i1.I18nService }, { token: i2.DatepickerProService }], target: i0.ɵɵFactoryTarget.Component });
DatepickerProComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: DatepickerProComponent, selector: "d-datepicker-pro", inputs: { mode: "mode", showTime: "showTime", disabled: "disabled", autoOpen: "autoOpen", format: "format", cssClass: "cssClass", showAnimation: "showAnimation", appendToBody: "appendToBody", width: "width", placeholder: "placeholder", allowClear: "allowClear", calenderRange: "calenderRange", minDate: "minDate", maxDate: "maxDate", markedRangeDateList: "markedRangeDateList", markedDateList: "markedDateList" }, outputs: { dropdownToggle: "dropdownToggle", confirmEvent: "confirmEvent" }, providers: [
        DatepickerProService,
        {
            provide: NG_VALUE_ACCESSOR,
            useExisting: forwardRef(() => DatepickerProComponent),
            multi: true
        }
    ], queries: [{ propertyName: "customTemplate", first: true, predicate: ["customTemplate"], descendants: true }, { propertyName: "footerTemplate", first: true, predicate: ["footerTemplate"], descendants: true }, { propertyName: "hostTemplate", first: true, predicate: ["hostTemplate"], descendants: true }, { propertyName: "markDateInfoTemplate", first: true, predicate: ["markDateInfoTemplate"], descendants: true }], viewQueries: [{ propertyName: "datepickerInput", first: true, predicate: ["dateInput"], descendants: true }], ngImport: i0, template: "<div\n  class=\"devui-datepicker-pro-wrapper {{ cssClass }}\"\n  *ngIf=\"appendToBody; else normal\"\n  dDropDown\n  appendToBody\n  [disabled]=\"disabled\"\n  [isOpen]=\"isOpen\"\n  [trigger]=\"'manually'\"\n  (toggleEvent)=\"onToggle($event)\"\n  (click)=\"openDropdown($event)\"\n  [closeScope]=\"'blank'\"\n  [showAnimation]=\"showAnimation\"\n  [ngStyle]=\"{ width: width || '250px' }\"\n>\n  <div dDropDownToggle>\n    <ng-template [ngTemplateOutlet]=\"hostTemplate || default\" [ngTemplateOutletContext]=\"{ value: dateValue }\"></ng-template>\n  </div>\n\n  <div class=\"devui-datepicker-pro-dropdown-panel\" [ngStyle]=\"{ paddingBottom: !showTime && !footerTemplate ? 0 : '4px' }\" dDropDownMenu>\n    <d-datepicker-panel\n      [isRangeType]=\"false\"\n      [showTime]=\"showTime\"\n      [customTemplate]=\"customTemplate\"\n      [footerTemplate]=\"footerTemplate\"\n      [mode]=\"mode\"\n    >\n    </d-datepicker-panel>\n  </div>\n</div>\n\n<ng-template #normal>\n  <div\n    class=\"devui-datepicker-pro-wrapper {{ cssClass }}\"\n    dDropDown\n    [disabled]=\"disabled\"\n    [isOpen]=\"isOpen\"\n    [trigger]=\"'manually'\"\n    (toggleEvent)=\"onToggle($event)\"\n    (click)=\"openDropdown($event)\"\n    [closeScope]=\"'blank'\"\n    [showAnimation]=\"showAnimation\"\n    [ngStyle]=\"{ width: width || '250px' }\"\n  >\n    <div dDropDownToggle>\n      <ng-template [ngTemplateOutlet]=\"hostTemplate || default\" [ngTemplateOutletContext]=\"{ value: dateValue }\"></ng-template>\n    </div>\n\n    <div class=\"devui-datepicker-pro-dropdown-panel\" [ngStyle]=\"{ paddingBottom: !showTime && !footerTemplate ? 0 : '4px' }\" dDropDownMenu>\n      <d-datepicker-panel\n        [isRangeType]=\"false\"\n        [showTime]=\"showTime\"\n        [customTemplate]=\"customTemplate\"\n        [footerTemplate]=\"footerTemplate\"\n        [mode]=\"mode\"\n      >\n      </d-datepicker-panel>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #default>\n  <div\n    class=\"devui-single-picker devui-input-group devui-dropdown-origin\"\n    [ngClass]=\"{\n      'devui-disabled': disabled,\n      'devui-has-value': dateValue\n    }\"\n  >\n    <i class=\"devui-single-picker-icon\">\n      <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" version=\"1.1\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <path\n            d=\"M5,0 L5,1 L11,1 L11,0 L12,0 L12,1 L14,1 C15.1045695,1 16,1.8954305 16,3 L16,14 C16,15.1045695 15.1045695,16 14,16 L2,16 C0.8954305,16 0,15.1045695 0,14 L0,3 C0,1.8954305 0.8954305,1 2,1 L4,1 L4,0 L5,0 Z M15,5 L1,5 L1,14 C1,14.5522847 1.44771525,15 2,15 L14,15 C14.5522847,15 15,14.5522847 15,14 L15,5 Z M6,7 C6.55228475,7 7,7.44771525 7,8 L7,10 C7,10.5522847 6.55228475,11 6,11 L4,11 C3.44771525,11 3,10.5522847 3,10 L3,8 C3,7.44771525 3.44771525,7 4,7 L6,7 Z M6,8 L4,8 L4,10 L6,10 L6,8 Z M4,2 L2,2 C1.44771525,2 1,2.44771525 1,3 L1,4 L15,4 L15,3 C15,2.44771525 14.5522847,2 14,2 L12,2 L12,3 L11,3 L11,2 L5,2 L5,3 L4,3 L4,2 Z\"\n            fill=\"#BABBC0\"\n          ></path>\n        </g>\n      </svg>\n    </i>\n    <input\n      #dateInput\n      class=\"devui-input devui-form-control\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder || i18nText?.placeholder\"\n      [(ngModel)]=\"dateValue\"\n      autocomplete=\"off\"\n    />\n    <div *ngIf=\"allowClear\" class=\"devui-input-group-addon close-icon-wrapper\" (click)=\"clear($event, true)\">\n      <div class=\"close-icon\">\n        <svg\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <path\n              d=\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M5.87867966,5.17157288 C5.68341751,4.97631073 5.36683502,4.97631073 5.17157288,5.17157288 C4.99800652,5.34513923 4.97872137,5.61456363 5.11371742,5.80943177 L5.17157288,5.87867966 L7.29218611,7.99929289 L5.17157288,10.1213203 C4.97631073,10.3165825 4.97631073,10.633165 5.17157288,10.8284271 C5.34513923,11.0019935 5.61456363,11.0212786 5.80943177,10.8862826 L5.87867966,10.8284271 L7.99929289,8.70639967 L10.1213203,10.8284271 C10.3165825,11.0236893 10.633165,11.0236893 10.8284271,10.8284271 C11.0019935,10.6548608 11.0212786,10.3854364 10.8862826,10.1905682 L10.8284271,10.1213203 L8.70710678,8 L10.8284271,5.87867966 C11.0236893,5.68341751 11.0236893,5.36683502 10.8284271,5.17157288 C10.6548608,4.99800652 10.3854364,4.97872137 10.1905682,5.11371742 L10.1213203,5.17157288 L8,7.29289322 L5.87867966,5.17157288 Z\"\n              fill-rule=\"nonzero\"\n            ></path>\n          </g>\n        </svg>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", styles: [".devui-datepicker-pro-wrapper{display:inline-block;background-color:#fff;background-color:var(--devui-base-bg, #ffffff)}.devui-datepicker-pro-wrapper .devui-single-picker{padding-left:8px;position:relative;box-sizing:border-box;width:100%;min-height:24px}.devui-datepicker-pro-wrapper .devui-single-picker .devui-input{padding:4px 8px;width:calc(100% - 16px)}.devui-datepicker-pro-wrapper .devui-single-picker-icon{vertical-align:bottom}.devui-datepicker-pro-wrapper .devui-single-picker .close-icon-wrapper{padding:0 8px;vertical-align:baseline;visibility:hidden}.devui-datepicker-pro-wrapper .devui-single-picker .close-icon-wrapper .close-icon{width:16px;height:16px;display:inline-block;line-height:12px}.devui-datepicker-pro-wrapper .devui-single-picker .close-icon-wrapper .close-icon svg{vertical-align:middle;position:relative;top:-.1em}.devui-datepicker-pro-wrapper .devui-single-picker .close-icon-wrapper .close-icon svg path{fill:#d7d8da;fill:var(--devui-shape-icon-fill, #d7d8da)}.devui-datepicker-pro-wrapper .devui-single-picker .close-icon-wrapper .close-icon:hover svg path{fill:#babbc0;fill:var(--devui-shape-icon-fill-active, #babbc0)}.devui-datepicker-pro-wrapper .devui-single-picker.devui-has-value:hover:not(.devui-disabled) .close-icon-wrapper{visibility:visible}.devui-datepicker-pro-wrapper .devui-single-picker:not(.devui-disabled) .close-icon-wrapper{cursor:pointer}.devui-datepicker-pro-wrapper .devui-input-group>.devui-input{display:inline-block}.devui-datepicker-pro-wrapper .devui-input-group>.devui-input::-ms-clear{display:none}\n"], components: [{ type: i3.DropDownAppendToBodyComponent, selector: "[dDropDown][appendToBody]", inputs: ["alignOrigin", "appendToBodyDirections"] }, { type: i4.DatepickerPanelComponent, selector: "d-datepicker-panel", inputs: ["isRangeType", "showTime", "showCustom", "customTemplate", "footerTemplate", "mode"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.DropDownDirective, selector: "[dDropDown]", inputs: ["isOpen", "disabled", "showAnimation", "trigger", "closeScope", "closeOnMouseLeaveMenu"], outputs: ["toggleEvent"], exportAs: ["d-dropdown"] }, { type: i5.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i3.DropDownToggleDirective, selector: "[dDropDownToggle]", inputs: ["toggleOnFocus", "autoFocus"], exportAs: ["d-dropdown-toggle"] }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i3.DropDownMenuDirective, selector: "[dDropDownMenu]", exportAs: ["d-dropdown-menu"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i6.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: DatepickerProComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-datepicker-pro', providers: [
                        DatepickerProService,
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => DatepickerProComponent),
                            multi: true
                        }
                    ], preserveWhitespaces: false, template: "<div\n  class=\"devui-datepicker-pro-wrapper {{ cssClass }}\"\n  *ngIf=\"appendToBody; else normal\"\n  dDropDown\n  appendToBody\n  [disabled]=\"disabled\"\n  [isOpen]=\"isOpen\"\n  [trigger]=\"'manually'\"\n  (toggleEvent)=\"onToggle($event)\"\n  (click)=\"openDropdown($event)\"\n  [closeScope]=\"'blank'\"\n  [showAnimation]=\"showAnimation\"\n  [ngStyle]=\"{ width: width || '250px' }\"\n>\n  <div dDropDownToggle>\n    <ng-template [ngTemplateOutlet]=\"hostTemplate || default\" [ngTemplateOutletContext]=\"{ value: dateValue }\"></ng-template>\n  </div>\n\n  <div class=\"devui-datepicker-pro-dropdown-panel\" [ngStyle]=\"{ paddingBottom: !showTime && !footerTemplate ? 0 : '4px' }\" dDropDownMenu>\n    <d-datepicker-panel\n      [isRangeType]=\"false\"\n      [showTime]=\"showTime\"\n      [customTemplate]=\"customTemplate\"\n      [footerTemplate]=\"footerTemplate\"\n      [mode]=\"mode\"\n    >\n    </d-datepicker-panel>\n  </div>\n</div>\n\n<ng-template #normal>\n  <div\n    class=\"devui-datepicker-pro-wrapper {{ cssClass }}\"\n    dDropDown\n    [disabled]=\"disabled\"\n    [isOpen]=\"isOpen\"\n    [trigger]=\"'manually'\"\n    (toggleEvent)=\"onToggle($event)\"\n    (click)=\"openDropdown($event)\"\n    [closeScope]=\"'blank'\"\n    [showAnimation]=\"showAnimation\"\n    [ngStyle]=\"{ width: width || '250px' }\"\n  >\n    <div dDropDownToggle>\n      <ng-template [ngTemplateOutlet]=\"hostTemplate || default\" [ngTemplateOutletContext]=\"{ value: dateValue }\"></ng-template>\n    </div>\n\n    <div class=\"devui-datepicker-pro-dropdown-panel\" [ngStyle]=\"{ paddingBottom: !showTime && !footerTemplate ? 0 : '4px' }\" dDropDownMenu>\n      <d-datepicker-panel\n        [isRangeType]=\"false\"\n        [showTime]=\"showTime\"\n        [customTemplate]=\"customTemplate\"\n        [footerTemplate]=\"footerTemplate\"\n        [mode]=\"mode\"\n      >\n      </d-datepicker-panel>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #default>\n  <div\n    class=\"devui-single-picker devui-input-group devui-dropdown-origin\"\n    [ngClass]=\"{\n      'devui-disabled': disabled,\n      'devui-has-value': dateValue\n    }\"\n  >\n    <i class=\"devui-single-picker-icon\">\n      <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" version=\"1.1\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <path\n            d=\"M5,0 L5,1 L11,1 L11,0 L12,0 L12,1 L14,1 C15.1045695,1 16,1.8954305 16,3 L16,14 C16,15.1045695 15.1045695,16 14,16 L2,16 C0.8954305,16 0,15.1045695 0,14 L0,3 C0,1.8954305 0.8954305,1 2,1 L4,1 L4,0 L5,0 Z M15,5 L1,5 L1,14 C1,14.5522847 1.44771525,15 2,15 L14,15 C14.5522847,15 15,14.5522847 15,14 L15,5 Z M6,7 C6.55228475,7 7,7.44771525 7,8 L7,10 C7,10.5522847 6.55228475,11 6,11 L4,11 C3.44771525,11 3,10.5522847 3,10 L3,8 C3,7.44771525 3.44771525,7 4,7 L6,7 Z M6,8 L4,8 L4,10 L6,10 L6,8 Z M4,2 L2,2 C1.44771525,2 1,2.44771525 1,3 L1,4 L15,4 L15,3 C15,2.44771525 14.5522847,2 14,2 L12,2 L12,3 L11,3 L11,2 L5,2 L5,3 L4,3 L4,2 Z\"\n            fill=\"#BABBC0\"\n          ></path>\n        </g>\n      </svg>\n    </i>\n    <input\n      #dateInput\n      class=\"devui-input devui-form-control\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder || i18nText?.placeholder\"\n      [(ngModel)]=\"dateValue\"\n      autocomplete=\"off\"\n    />\n    <div *ngIf=\"allowClear\" class=\"devui-input-group-addon close-icon-wrapper\" (click)=\"clear($event, true)\">\n      <div class=\"close-icon\">\n        <svg\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <path\n              d=\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M5.87867966,5.17157288 C5.68341751,4.97631073 5.36683502,4.97631073 5.17157288,5.17157288 C4.99800652,5.34513923 4.97872137,5.61456363 5.11371742,5.80943177 L5.17157288,5.87867966 L7.29218611,7.99929289 L5.17157288,10.1213203 C4.97631073,10.3165825 4.97631073,10.633165 5.17157288,10.8284271 C5.34513923,11.0019935 5.61456363,11.0212786 5.80943177,10.8862826 L5.87867966,10.8284271 L7.99929289,8.70639967 L10.1213203,10.8284271 C10.3165825,11.0236893 10.633165,11.0236893 10.8284271,10.8284271 C11.0019935,10.6548608 11.0212786,10.3854364 10.8862826,10.1905682 L10.8284271,10.1213203 L8.70710678,8 L10.8284271,5.87867966 C11.0236893,5.68341751 11.0236893,5.36683502 10.8284271,5.17157288 C10.6548608,4.99800652 10.3854364,4.97872137 10.1905682,5.11371742 L10.1213203,5.17157288 L8,7.29289322 L5.87867966,5.17157288 Z\"\n              fill-rule=\"nonzero\"\n            ></path>\n          </g>\n        </svg>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", styles: [".devui-datepicker-pro-wrapper{display:inline-block;background-color:#fff;background-color:var(--devui-base-bg, #ffffff)}.devui-datepicker-pro-wrapper .devui-single-picker{padding-left:8px;position:relative;box-sizing:border-box;width:100%;min-height:24px}.devui-datepicker-pro-wrapper .devui-single-picker .devui-input{padding:4px 8px;width:calc(100% - 16px)}.devui-datepicker-pro-wrapper .devui-single-picker-icon{vertical-align:bottom}.devui-datepicker-pro-wrapper .devui-single-picker .close-icon-wrapper{padding:0 8px;vertical-align:baseline;visibility:hidden}.devui-datepicker-pro-wrapper .devui-single-picker .close-icon-wrapper .close-icon{width:16px;height:16px;display:inline-block;line-height:12px}.devui-datepicker-pro-wrapper .devui-single-picker .close-icon-wrapper .close-icon svg{vertical-align:middle;position:relative;top:-.1em}.devui-datepicker-pro-wrapper .devui-single-picker .close-icon-wrapper .close-icon svg path{fill:#d7d8da;fill:var(--devui-shape-icon-fill, #d7d8da)}.devui-datepicker-pro-wrapper .devui-single-picker .close-icon-wrapper .close-icon:hover svg path{fill:#babbc0;fill:var(--devui-shape-icon-fill-active, #babbc0)}.devui-datepicker-pro-wrapper .devui-single-picker.devui-has-value:hover:not(.devui-disabled) .close-icon-wrapper{visibility:visible}.devui-datepicker-pro-wrapper .devui-single-picker:not(.devui-disabled) .close-icon-wrapper{cursor:pointer}.devui-datepicker-pro-wrapper .devui-input-group>.devui-input{display:inline-block}.devui-datepicker-pro-wrapper .devui-input-group>.devui-input::-ms-clear{display:none}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.I18nService }, { type: i2.DatepickerProService }]; }, propDecorators: { mode: [{
                type: Input
            }], showTime: [{
                type: Input
            }], disabled: [{
                type: Input
            }], autoOpen: [{
                type: Input
            }], format: [{
                type: Input
            }], cssClass: [{
                type: Input
            }], showAnimation: [{
                type: Input
            }], appendToBody: [{
                type: Input
            }], width: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], allowClear: [{
                type: Input
            }], dropdownToggle: [{
                type: Output
            }], confirmEvent: [{
                type: Output
            }], calenderRange: [{
                type: Input
            }], minDate: [{
                type: Input
            }], maxDate: [{
                type: Input
            }], markedRangeDateList: [{
                type: Input
            }], markedDateList: [{
                type: Input
            }], customTemplate: [{
                type: ContentChild,
                args: ['customTemplate']
            }], footerTemplate: [{
                type: ContentChild,
                args: ['footerTemplate']
            }], hostTemplate: [{
                type: ContentChild,
                args: ['hostTemplate']
            }], markDateInfoTemplate: [{
                type: ContentChild,
                args: ['markDateInfoTemplate']
            }], datepickerInput: [{
                type: ViewChild,
                args: ['dateInput']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci1wcm8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGV2dWkvZGF0ZXBpY2tlci1wcm8vZGF0ZXBpY2tlci1wcm8uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vZGV2dWkvZGF0ZXBpY2tlci1wcm8vZGF0ZXBpY2tlci1wcm8uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLFNBQVMsRUFDVCxZQUFZLEVBQ1osVUFBVSxFQUNWLFlBQVksRUFDWixVQUFVLEVBQ1YsS0FBSyxFQUdMLE1BQU0sRUFDTixXQUFXLEVBQ1gsU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBd0IsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6RSxPQUFPLEVBQWlCLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMxQyxPQUFPLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7OztBQWlCaEUsTUFBTSxPQUFPLHNCQUFzQjtJQTZFakMsWUFDVSxJQUFpQixFQUNqQixTQUErQjtRQUQvQixTQUFJLEdBQUosSUFBSSxDQUFhO1FBQ2pCLGNBQVMsR0FBVCxTQUFTLENBQXNCO1FBOUVoQyxTQUFJLEdBQThCLE1BQU0sQ0FBQztRQUN6QyxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUdqQixrQkFBYSxHQUFHLElBQUksQ0FBQztRQUNyQixpQkFBWSxHQUFHLElBQUksQ0FBQztR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OzRCQUNyRCxLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFDRix1QkFDb0IsS0FBSztxSUFHakIsSUFBSTtzQkFBWixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLGFBQWE7c0JBQXJCLEtBQUs7Z0JBQ0csWUFBWTtzQkFBcEIsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csV0FBVztzQkFBbkIsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNJLGNBQWM7c0JBQXZCLE1BQU07Z0JBQ0csWUFBWTtzQkFBckIsTUFBTTtnQkFDTSxhQUFhO3NCQUF6QixLQUFLO2dCQUdPLE9BQU87c0JBQW5CLEtBQUs7Z0JBTU8sT0FBTztzQkFBbkIsS0FBSztnQkFNTyxtQkFBbUI7c0JBQS9CLEtBQUs7Z0JBR08sY0FBYztzQkFBMUIsS0FBSztnQkFHMEIsY0FBYztzQkFBN0MsWUFBWTt1QkFBQyxnQkFBZ0I7Z0JBQ0UsY0FBYztzQkFBN0MsWUFBWTt1QkFBQyxnQkFBZ0I7Z0JBQ0EsWUFBWTtzQkFBekMsWUFBWTt1QkFBQyxjQUFjO2dCQUNjLG9CQUFvQjtzQkFBN0QsWUFBWTt1QkFBQyxzQkFBc0I7Z0JBR1osZUFBZTtzQkFBdEMsU0FBUzt1QkFBQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgQ29tcG9uZW50LFxuICBDb250ZW50Q2hpbGQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgZm9yd2FyZFJlZixcbiAgSW5wdXQsXG4gIE9uRGVzdHJveSxcbiAgT25Jbml0LFxuICBPdXRwdXQsXG4gIFRlbXBsYXRlUmVmLFxuICBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciwgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBJMThuSW50ZXJmYWNlLCBJMThuU2VydmljZSB9IGZyb20gJ25nLWRldnVpL2kxOG4nO1xuaW1wb3J0IHsgRGVmYXVsdERhdGVDb252ZXJ0ZXIgfSBmcm9tICduZy1kZXZ1aS91dGlscyc7XG5pbXBvcnQgeyBmcm9tRXZlbnQsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGRlYm91bmNlVGltZSwgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgRGF0ZXBpY2tlclByb1NlcnZpY2UgfSBmcm9tICcuL2RhdGVwaWNrZXItcHJvLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGF0ZUNvbmZpZyB9IGZyb20gJy4vbGliL2RhdGVwaWNrZXItcHJvLnR5cGUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkLWRhdGVwaWNrZXItcHJvJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RhdGVwaWNrZXItcHJvLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZGF0ZXBpY2tlci1wcm8uY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgRGF0ZXBpY2tlclByb1NlcnZpY2UsXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBEYXRlcGlja2VyUHJvQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbn0pXG5leHBvcnQgY2xhc3MgRGF0ZXBpY2tlclByb0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gIEBJbnB1dCgpIG1vZGU6ICd5ZWFyJyB8ICdtb250aCcgfCAnZGF0ZScgPSAnZGF0ZSc7XG4gIEBJbnB1dCgpIHNob3dUaW1lID0gZmFsc2U7XG4gIEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2U7XG4gIEBJbnB1dCgpIGF1dG9PcGVuID0gZmFsc2U7XG4gIEBJbnB1dCgpIGZvcm1hdDogc3RyaW5nO1xuICBASW5wdXQoKSBjc3NDbGFzczogc3RyaW5nO1xuICBASW5wdXQoKSBzaG93QW5pbWF0aW9uID0gdHJ1ZTtcbiAgQElucHV0KCkgYXBwZW5kVG9Cb2R5ID0gdHJ1ZTtcbiAgQElucHV0KCkgd2lkdGg6IHN0cmluZztcbiAgQElucHV0KCkgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgQElucHV0KCkgYWxsb3dDbGVhciA9IHRydWU7XG4gIEBPdXRwdXQoKSBkcm9wZG93blRvZ2dsZSA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcbiAgQE91dHB1dCgpIGNvbmZpcm1FdmVudCA9IG5ldyBFdmVudEVtaXR0ZXI8RGF0ZT4oKTtcbiAgQElucHV0KCkgc2V0IGNhbGVuZGVyUmFuZ2UgKHZhbHVlKSB7XG4gICAgdGhpcy5waWNrZXJTcnYuY2FsZW5kYXJSYW5nZSA9IHZhbHVlIHx8IFsxOTcwLCAyMDk5XTtcbiAgfVxuICBASW5wdXQoKSBzZXQgbWluRGF0ZSh2YWx1ZTogRGF0ZSkge1xuICAgIGlmICghdmFsdWUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5waWNrZXJTcnYubWluRGF0ZSA9IHZhbHVlO1xuICB9XG4gIEBJbnB1dCgpIHNldCBtYXhEYXRlKHZhbHVlOiBEYXRlKSB7XG4gICAgaWYgKCF2YWx1ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnBpY2tlclNydi5tYXhEYXRlID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KCkgc2V0IG1hcmtlZFJhbmdlRGF0ZUxpc3QodmFsdWU6IERhdGVbXVtdKSB7XG4gICAgdGhpcy5waWNrZXJTcnYubWFya2VkUmFuZ2VEYXRlTGlzdCA9IHZhbHVlO1xuICB9O1xuICBASW5wdXQoKSBzZXQgbWFya2VkRGF0ZUxpc3QodmFsdWU6IERhdGVbXSkge1xuICAgIHRoaXMucGlja2VyU3J2Lm1hcmtlZERhdGVMaXN0ID0gdmFsdWU7XG4gIH1cbiAgQENvbnRlbnRDaGlsZCgnY3VzdG9tVGVtcGxhdGUnKSBjdXN0b21UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgQENvbnRlbnRDaGlsZCgnZm9vdGVyVGVtcGxhdGUnKSBmb290ZXJUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgQENvbnRlbnRDaGlsZCgnaG9zdFRlbXBsYXRlJykgaG9zdFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICBAQ29udGVudENoaWxkKCdtYXJrRGF0ZUluZm9UZW1wbGF0ZScpIHNldCBtYXJrRGF0ZUluZm9UZW1wbGF0ZSh0bXA6IFRlbXBsYXRlUmVmPGFueT4pIHtcbiAgICB0aGlzLnBpY2tlclNydi5tYXJrRGF0ZUluZm9UZW1wbGF0ZSA9IHRtcDtcbiAgfTtcbiAgQFZpZXdDaGlsZCgnZGF0ZUlucHV0JykgZGF0ZXBpY2tlcklucHV0OiBFbGVtZW50UmVmO1xuXG4gIHByaXZhdGUgaTE4bkxvY2FsZTogSTE4bkludGVyZmFjZVsnbG9jYWxlJ107XG5cbiAgaTE4blRleHQ7XG4gIGRhdGVWYWx1ZSA9ICcnO1xuICBkYXRlcGlja2VyQ29udmVydDogRGVmYXVsdERhdGVDb252ZXJ0ZXI7XG4gIHVuc3Vic2NyaWJlJCA9IG5ldyBTdWJqZWN0KCk7XG4gIGlzT3BlbiA9IGZhbHNlO1xuICBnZXQgZGF0ZUNvbmZpZygpOiBEYXRlQ29uZmlnIHtcbiAgICByZXR1cm4ge1xuICAgICAgZGF0ZUNvbnZlcnRlcjogdGhpcy5kYXRlcGlja2VyQ29udmVydCxcbiAgICAgIG1pbjogdGhpcy5waWNrZXJTcnYubWluRGF0ZSB8fCBuZXcgRGF0ZSh0aGlzLnBpY2tlclNydi5jYWxlbmRhclJhbmdlWzBdICsgJy8wMS8wMScpLFxuICAgICAgbWF4OiB0aGlzLnBpY2tlclNydi5tYXhEYXRlIHx8IG5ldyBEYXRlKHRoaXMucGlja2VyU3J2LmNhbGVuZGFyUmFuZ2VbMV0gKyAnLzEyLzMxJyksXG4gICAgICBmb3JtYXQ6IHtcbiAgICAgICAgZGF0ZTogdGhpcy5mb3JtYXQgfHwgJ3kvTU0vZGQnLFxuICAgICAgICB0aW1lOiB0aGlzLmZvcm1hdCB8fCAneS9NTS9kZCBISDptbTpzcycsXG4gICAgICAgIG1vbnRoOiB0aGlzLmZvcm1hdCB8fCAneS1NTScsXG4gICAgICAgIHllYXI6ICd5J1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICBnZXQgY3VyRm9ybWF0KCk6IHN0cmluZyB7XG4gICAgaWYgKHRoaXMubW9kZSA9PT0gJ3llYXInKSB7XG4gICAgICByZXR1cm4gdGhpcy5kYXRlQ29uZmlnLmZvcm1hdC55ZWFyO1xuICAgIH0gZWxzZSBpZiAodGhpcy5tb2RlID09PSAnbW9udGgnKSB7XG4gICAgICByZXR1cm4gdGhpcy5kYXRlQ29uZmlnLmZvcm1hdC5tb250aDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICB0aGlzLnNob3dUaW1lID8gdGhpcy5kYXRlQ29uZmlnLmZvcm1hdC50aW1lIDogdGhpcy5kYXRlQ29uZmlnLmZvcm1hdC5kYXRlO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgb25DaGFuZ2UgPSAoXzogYW55KSA9PiBudWxsO1xuICBwcml2YXRlIG9uVG91Y2hlZCA9ICgpID0+IG51bGw7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBpMThuOiBJMThuU2VydmljZSxcbiAgICBwcml2YXRlIHBpY2tlclNydjogRGF0ZXBpY2tlclByb1NlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5pMThuVGV4dCA9IHRoaXMuaTE4bi5nZXRJMThuVGV4dCgpLmRhdGVQaWNrZXJQcm87XG4gICAgdGhpcy5kYXRlcGlja2VyQ29udmVydCA9IG5ldyBEZWZhdWx0RGF0ZUNvbnZlcnRlcigpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbml0U3J2U3RhdHVzKCk7XG4gICAgdGhpcy5zZXRJMThuVGV4dCgpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5pc09wZW4gPSB0aGlzLmF1dG9PcGVuO1xuICAgIH0pO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHRoaXMuaW5pdE9ic2VydmFibGUoKTtcbiAgfVxuXG4gIHByaXZhdGUgaW5pdFNydlN0YXR1cygpIHtcbiAgICB0aGlzLnBpY2tlclNydi5zaG93VGltZSA9IHRoaXMuc2hvd1RpbWU7XG4gICAgdGhpcy5waWNrZXJTcnYuaXNSYW5nZSA9IGZhbHNlO1xuICB9XG5cbiAgcHJpdmF0ZSBpbml0T2JzZXJ2YWJsZSgpIHtcbiAgICB0aGlzLnBpY2tlclNydi5zZWxlY3RlZERhdGVDaGFuZ2UucGlwZShcbiAgICAgIHRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlJClcbiAgICApLnN1YnNjcmliZShjaGFuZ2UgPT4ge1xuICAgICAgdGhpcy5kYXRlVmFsdWUgPSB0aGlzLmZvcm1hdERhdGVUb1N0cmluZyhjaGFuZ2UudmFsdWUgYXMgRGF0ZSk7XG4gICAgICB0aGlzLnBpY2tlclNydi5jdXJEYXRlID0gY2hhbmdlLnZhbHVlIGFzIERhdGU7XG4gICAgICB0aGlzLm9uQ2hhbmdlKGNoYW5nZS52YWx1ZSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLnBpY2tlclNydi5zZWxlY3RlZFRpbWVDaGFuZ2UucGlwZShcbiAgICAgIHRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlJClcbiAgICApLnN1YnNjcmliZSh0aW1lID0+IHtcbiAgICAgIGlmICh0aGlzLmRhdGVWYWx1ZSkge1xuICAgICAgICBjb25zdCBjdXJUaW1lID0gdGhpcy5kYXRlcGlja2VyQ29udmVydC5wYXJzZSh0aGlzLmRhdGVWYWx1ZSwgdGhpcy5jdXJGb3JtYXQpLnNldEhvdXJzKHRpbWUuaG91ciwgdGltZS5taW4sIHRpbWUuc2Vjb25kcyk7XG4gICAgICAgIGNvbnN0IGN1ckRhdGUgPSBuZXcgRGF0ZShjdXJUaW1lKTtcbiAgICAgICAgdGhpcy5waWNrZXJTcnYuY3VyRGF0ZSA9IGN1ckRhdGU7XG4gICAgICAgIHRoaXMuZGF0ZVZhbHVlID0gdGhpcy5mb3JtYXREYXRlVG9TdHJpbmcoY3VyRGF0ZSk7XG4gICAgICAgIHRoaXMub25DaGFuZ2UoY3VyRGF0ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLndyaXRlVmFsdWUobmV3IERhdGUobmV3IERhdGUoKS5zZXRIb3Vycyh0aW1lLmhvdXIsIHRpbWUubWluLCB0aW1lLnNlY29uZHMpKSk7XG4gICAgICAgIHRoaXMub25DaGFuZ2UodGhpcy5waWNrZXJTcnYuY3VyRGF0ZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0aGlzLnBpY2tlclNydi5jbG9zZURyb3Bkb3duRXZlbnQucGlwZShcbiAgICAgIHRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlJClcbiAgICApLnN1YnNjcmliZShpc0NvbmZpcm0gPT4ge1xuICAgICAgdGhpcy5pc09wZW4gPSBmYWxzZTtcbiAgICAgIHRoaXMuZHJvcGRvd25Ub2dnbGUuZW1pdChmYWxzZSk7XG4gICAgICBpZiAoaXNDb25maXJtKSB7XG4gICAgICAgIHRoaXMuY29uZmlybUV2ZW50LmVtaXQodGhpcy5waWNrZXJTcnYuY3VyRGF0ZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAoIXRoaXMuaG9zdFRlbXBsYXRlKSB7XG4gICAgICBmcm9tRXZlbnQodGhpcy5kYXRlcGlja2VySW5wdXQubmF0aXZlRWxlbWVudCwgJ2lucHV0JykucGlwZShcbiAgICAgICAgdGFrZVVudGlsKHRoaXMudW5zdWJzY3JpYmUkKSxcbiAgICAgICAgZGVib3VuY2VUaW1lKDMwMClcbiAgICAgICkuc3Vic2NyaWJlKChldmVudDogSW5wdXRFdmVudCkgPT4ge1xuICAgICAgICBpZiAoIXRoaXMuZGF0ZVZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgaW5wdXREYXRlID0gdGhpcy5kYXRlcGlja2VyQ29udmVydC5wYXJzZSh0aGlzLmRhdGVWYWx1ZSwgdGhpcy5jdXJGb3JtYXQpO1xuICAgICAgICBpZiAoaW5wdXREYXRlIGluc3RhbmNlb2YgRGF0ZSAmJiBpbnB1dERhdGUuZ2V0VGltZSgpID09PSB0aGlzLnBpY2tlclNydi5jdXJEYXRlLmdldFRpbWUoKSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLnZhbGlkYXRlRGF0ZSh0aGlzLmRhdGVWYWx1ZSkpIHtcbiAgICAgICAgICB0aGlzLnBpY2tlclNydi5jdXJEYXRlID0gaW5wdXREYXRlO1xuICAgICAgICAgIHRoaXMucGlja2VyU3J2LnVwZGF0ZURhdGVWYWx1ZS5uZXh0KHtcbiAgICAgICAgICAgIHR5cGU6ICdzaW5nbGUnLFxuICAgICAgICAgICAgdmFsdWU6IGlucHV0RGF0ZVxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgaWYgKHRoaXMuc2hvd1RpbWUpIHtcbiAgICAgICAgICAgIHRoaXMucGlja2VyU3J2LnVwZGF0ZVRpbWVDaGFuZ2UubmV4dCh7XG4gICAgICAgICAgICAgIGhvdXI6IGlucHV0RGF0ZS5nZXRIb3VycygpLFxuICAgICAgICAgICAgICBtaW46IGlucHV0RGF0ZS5nZXRNaW51dGVzKCksXG4gICAgICAgICAgICAgIHNlY29uZHM6IGlucHV0RGF0ZS5nZXRTZWNvbmRzKClcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGZyb21FdmVudCh0aGlzLmRhdGVwaWNrZXJJbnB1dC5uYXRpdmVFbGVtZW50LCAnYmx1cicpLnBpcGUoXG4gICAgICAgIHRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlJCksXG4gICAgICApLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIGlmICghdGhpcy52YWxpZGF0ZURhdGUodGhpcy5kYXRlVmFsdWUpKSB7XG4gICAgICAgICAgdGhpcy5kYXRlVmFsdWUgPSB0aGlzLnBpY2tlclNydi5jdXJEYXRlID9cbiAgICAgICAgICAgIHRoaXMuZGF0ZXBpY2tlckNvbnZlcnQuZm9ybWF0KHRoaXMucGlja2VyU3J2LmN1ckRhdGUsIHRoaXMuY3VyRm9ybWF0LCB0aGlzLmkxOG5Mb2NhbGUpIDpcbiAgICAgICAgICAgICcnO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHNldEkxOG5UZXh0KCkge1xuICAgIHRoaXMuaTE4bkxvY2FsZSA9IHRoaXMuaTE4bi5nZXRJMThuVGV4dCgpLmxvY2FsZTtcbiAgICB0aGlzLmkxOG4ubGFuZ0NoYW5nZSgpLnBpcGUoXG4gICAgICB0YWtlVW50aWwodGhpcy51bnN1YnNjcmliZSQpXG4gICAgKS5zdWJzY3JpYmUoKGRhdGEpID0+IHtcbiAgICAgIHRoaXMuaTE4bkxvY2FsZSA9IGRhdGEubG9jYWxlO1xuICAgICAgdGhpcy5pMThuVGV4dCA9IGRhdGEuZGF0ZVBpY2tlclBybztcbiAgICB9KTtcbiAgfVxuXG4gIHZhbGlkYXRlRGF0ZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgY29uc3QgdmFsdWVEYXRlID0gdGhpcy5kYXRlcGlja2VyQ29udmVydC5wYXJzZSh2YWx1ZSwgdGhpcy5jdXJGb3JtYXQpO1xuICAgIGNvbnN0IHZhbHVlRm9ybWF0ID0gdmFsdWVEYXRlICYmICFpc05hTih2YWx1ZURhdGUuZ2V0VGltZSgpKSAmJlxuICAgICAgdGhpcy5kYXRlcGlja2VyQ29udmVydC5mb3JtYXQodmFsdWVEYXRlLCB0aGlzLmN1ckZvcm1hdCwgdGhpcy5pMThuTG9jYWxlKTtcbiAgICBpZiAoXG4gICAgICAhdmFsdWVEYXRlIHx8IHZhbHVlICE9PSB2YWx1ZUZvcm1hdCB8fFxuICAgICAgKHZhbHVlID09PSB2YWx1ZUZvcm1hdCAmJiAhdGhpcy5waWNrZXJTcnYuZGF0ZUluUmFuZ2UodmFsdWVEYXRlKSlcbiAgICApIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgZm9ybWF0RGF0ZVRvU3RyaW5nKGRhdGU6IERhdGUpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmRhdGVwaWNrZXJDb252ZXJ0LmZvcm1hdChkYXRlLCB0aGlzLmN1ckZvcm1hdCk7XG4gIH1cblxuICBjbGVhcihldmVudD86IE1vdXNlRXZlbnQsIGlzSGFuZGxlPzogYm9vbGVhbikge1xuICAgIGlmIChldmVudCkge1xuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuZGlzYWJsZWQgJiYgaXNIYW5kbGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5waWNrZXJTcnYudXBkYXRlRGF0ZVZhbHVlLm5leHQoe1xuICAgICAgdHlwZTogJ3NpbmdsZScsXG4gICAgICB2YWx1ZTogbnVsbFxuICAgIH0pO1xuXG4gICAgdGhpcy5waWNrZXJTcnYudXBkYXRlVGltZUNoYW5nZS5uZXh0KHtcbiAgICAgIGhvdXI6IG51bGwsXG4gICAgICBtaW46IG51bGwsXG4gICAgICBzZWNvbmRzOiBudWxsXG4gICAgfSk7XG4gICAgdGhpcy5kYXRlVmFsdWUgPSBudWxsO1xuICAgIHRoaXMucGlja2VyU3J2LmN1ckRhdGUgPSBudWxsO1xuXG4gICAgaWYgKGV2ZW50KSB7XG4gICAgICB0aGlzLm9uQ2hhbmdlKHRoaXMucGlja2VyU3J2LmN1ckRhdGUpO1xuICAgIH1cbiAgfVxuXG4gIG9uVG9nZ2xlKGlzT3Blbikge1xuICAgIGlmIChpc09wZW4gIT09IHRoaXMuaXNPcGVuIHx8IGlzT3Blbikge1xuICAgICAgdGhpcy5kcm9wZG93blRvZ2dsZS5lbWl0KGlzT3Blbik7XG4gICAgfVxuICAgIHRoaXMuaXNPcGVuID0gaXNPcGVuO1xuICAgIHRoaXMucGlja2VyU3J2LnRvZ2dsZUV2ZW50Lm5leHQoaXNPcGVuKTtcbiAgfVxuXG4gIG9wZW5Ecm9wZG93bihldmVudDogRXZlbnQpIHtcbiAgICBpZiAodGhpcy5pc09wZW4pIHtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH1cbiAgICB0aGlzLmlzT3BlbiA9IHRydWU7XG5cbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmICh0aGlzLmRhdGVwaWNrZXJJbnB1dD8ubmF0aXZlRWxlbWVudCkgeyB0aGlzLmRhdGVwaWNrZXJJbnB1dC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7IH1cbiAgICB9KTtcbiAgfVxuXG4gIHdyaXRlVmFsdWUodmFsdWU6IERhdGUpIHtcbiAgICBpZiAoIXZhbHVlIHx8ICF0aGlzLnBpY2tlclNydi5kYXRlSW5SYW5nZShuZXcgRGF0ZSh2YWx1ZSkpKSB7XG4gICAgICB0aGlzLmNsZWFyKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZGF0ZVZhbHVlID0gdGhpcy5mb3JtYXREYXRlVG9TdHJpbmcodmFsdWUpO1xuICAgIHRoaXMucGlja2VyU3J2LmN1ckRhdGUgPSB2YWx1ZTtcbiAgICB0aGlzLnBpY2tlclNydi51cGRhdGVEYXRlVmFsdWUubmV4dCh7XG4gICAgICB0eXBlOiAnc2luZ2xlJyxcbiAgICAgIHZhbHVlXG4gICAgfSk7XG5cbiAgICBpZiAodGhpcy5zaG93VGltZSkge1xuICAgICAgdGhpcy5waWNrZXJTcnYudXBkYXRlVGltZUNoYW5nZS5uZXh0KHtcbiAgICAgICAgaG91cjogdmFsdWUuZ2V0SG91cnMoKSxcbiAgICAgICAgbWluOiB2YWx1ZS5nZXRNaW51dGVzKCksXG4gICAgICAgIHNlY29uZHM6IHZhbHVlLmdldFNlY29uZHMoKVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vbkNoYW5nZSA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMub25Ub3VjaGVkID0gZm47XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnVuc3Vic2NyaWJlJC5uZXh0KCk7XG4gICAgdGhpcy51bnN1YnNjcmliZSQuY29tcGxldGUoKTtcbiAgfVxuXG59XG4iLCI8ZGl2XG4gIGNsYXNzPVwiZGV2dWktZGF0ZXBpY2tlci1wcm8td3JhcHBlciB7eyBjc3NDbGFzcyB9fVwiXG4gICpuZ0lmPVwiYXBwZW5kVG9Cb2R5OyBlbHNlIG5vcm1hbFwiXG4gIGREcm9wRG93blxuICBhcHBlbmRUb0JvZHlcbiAgW2Rpc2FibGVkXT1cImRpc2FibGVkXCJcbiAgW2lzT3Blbl09XCJpc09wZW5cIlxuICBbdHJpZ2dlcl09XCInbWFudWFsbHknXCJcbiAgKHRvZ2dsZUV2ZW50KT1cIm9uVG9nZ2xlKCRldmVudClcIlxuICAoY2xpY2spPVwib3BlbkRyb3Bkb3duKCRldmVudClcIlxuICBbY2xvc2VTY29wZV09XCInYmxhbmsnXCJcbiAgW3Nob3dBbmltYXRpb25dPVwic2hvd0FuaW1hdGlvblwiXG4gIFtuZ1N0eWxlXT1cInsgd2lkdGg6IHdpZHRoIHx8ICcyNTBweCcgfVwiXG4+XG4gIDxkaXYgZERyb3BEb3duVG9nZ2xlPlxuICAgIDxuZy10ZW1wbGF0ZSBbbmdUZW1wbGF0ZU91dGxldF09XCJob3N0VGVtcGxhdGUgfHwgZGVmYXVsdFwiIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7IHZhbHVlOiBkYXRlVmFsdWUgfVwiPjwvbmctdGVtcGxhdGU+XG4gIDwvZGl2PlxuXG4gIDxkaXYgY2xhc3M9XCJkZXZ1aS1kYXRlcGlja2VyLXByby1kcm9wZG93bi1wYW5lbFwiIFtuZ1N0eWxlXT1cInsgcGFkZGluZ0JvdHRvbTogIXNob3dUaW1lICYmICFmb290ZXJUZW1wbGF0ZSA/IDAgOiAnNHB4JyB9XCIgZERyb3BEb3duTWVudT5cbiAgICA8ZC1kYXRlcGlja2VyLXBhbmVsXG4gICAgICBbaXNSYW5nZVR5cGVdPVwiZmFsc2VcIlxuICAgICAgW3Nob3dUaW1lXT1cInNob3dUaW1lXCJcbiAgICAgIFtjdXN0b21UZW1wbGF0ZV09XCJjdXN0b21UZW1wbGF0ZVwiXG4gICAgICBbZm9vdGVyVGVtcGxhdGVdPVwiZm9vdGVyVGVtcGxhdGVcIlxuICAgICAgW21vZGVdPVwibW9kZVwiXG4gICAgPlxuICAgIDwvZC1kYXRlcGlja2VyLXBhbmVsPlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48bmctdGVtcGxhdGUgI25vcm1hbD5cbiAgPGRpdlxuICAgIGNsYXNzPVwiZGV2dWktZGF0ZXBpY2tlci1wcm8td3JhcHBlciB7eyBjc3NDbGFzcyB9fVwiXG4gICAgZERyb3BEb3duXG4gICAgW2Rpc2FibGVkXT1cImRpc2FibGVkXCJcbiAgICBbaXNPcGVuXT1cImlzT3BlblwiXG4gICAgW3RyaWdnZXJdPVwiJ21hbnVhbGx5J1wiXG4gICAgKHRvZ2dsZUV2ZW50KT1cIm9uVG9nZ2xlKCRldmVudClcIlxuICAgIChjbGljayk9XCJvcGVuRHJvcGRvd24oJGV2ZW50KVwiXG4gICAgW2Nsb3NlU2NvcGVdPVwiJ2JsYW5rJ1wiXG4gICAgW3Nob3dBbmltYXRpb25dPVwic2hvd0FuaW1hdGlvblwiXG4gICAgW25nU3R5bGVdPVwieyB3aWR0aDogd2lkdGggfHwgJzI1MHB4JyB9XCJcbiAgPlxuICAgIDxkaXYgZERyb3BEb3duVG9nZ2xlPlxuICAgICAgPG5nLXRlbXBsYXRlIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImhvc3RUZW1wbGF0ZSB8fCBkZWZhdWx0XCIgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInsgdmFsdWU6IGRhdGVWYWx1ZSB9XCI+PC9uZy10ZW1wbGF0ZT5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJkZXZ1aS1kYXRlcGlja2VyLXByby1kcm9wZG93bi1wYW5lbFwiIFtuZ1N0eWxlXT1cInsgcGFkZGluZ0JvdHRvbTogIXNob3dUaW1lICYmICFmb290ZXJUZW1wbGF0ZSA/IDAgOiAnNHB4JyB9XCIgZERyb3BEb3duTWVudT5cbiAgICAgIDxkLWRhdGVwaWNrZXItcGFuZWxcbiAgICAgICAgW2lzUmFuZ2VUeXBlXT1cImZhbHNlXCJcbiAgICAgICAgW3Nob3dUaW1lXT1cInNob3dUaW1lXCJcbiAgICAgICAgW2N1c3RvbVRlbXBsYXRlXT1cImN1c3RvbVRlbXBsYXRlXCJcbiAgICAgICAgW2Zvb3RlclRlbXBsYXRlXT1cImZvb3RlclRlbXBsYXRlXCJcbiAgICAgICAgW21vZGVdPVwibW9kZVwiXG4gICAgICA+XG4gICAgICA8L2QtZGF0ZXBpY2tlci1wYW5lbD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgI2RlZmF1bHQ+XG4gIDxkaXZcbiAgICBjbGFzcz1cImRldnVpLXNpbmdsZS1waWNrZXIgZGV2dWktaW5wdXQtZ3JvdXAgZGV2dWktZHJvcGRvd24tb3JpZ2luXCJcbiAgICBbbmdDbGFzc109XCJ7XG4gICAgICAnZGV2dWktZGlzYWJsZWQnOiBkaXNhYmxlZCxcbiAgICAgICdkZXZ1aS1oYXMtdmFsdWUnOiBkYXRlVmFsdWVcbiAgICB9XCJcbiAgPlxuICAgIDxpIGNsYXNzPVwiZGV2dWktc2luZ2xlLXBpY2tlci1pY29uXCI+XG4gICAgICA8c3ZnIHdpZHRoPVwiMTZweFwiIGhlaWdodD1cIjE2cHhcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiPlxuICAgICAgICA8ZyBzdHJva2U9XCJub25lXCIgc3Ryb2tlLXdpZHRoPVwiMVwiIGZpbGw9XCJub25lXCIgZmlsbC1ydWxlPVwiZXZlbm9kZFwiPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBkPVwiTTUsMCBMNSwxIEwxMSwxIEwxMSwwIEwxMiwwIEwxMiwxIEwxNCwxIEMxNS4xMDQ1Njk1LDEgMTYsMS44OTU0MzA1IDE2LDMgTDE2LDE0IEMxNiwxNS4xMDQ1Njk1IDE1LjEwNDU2OTUsMTYgMTQsMTYgTDIsMTYgQzAuODk1NDMwNSwxNiAwLDE1LjEwNDU2OTUgMCwxNCBMMCwzIEMwLDEuODk1NDMwNSAwLjg5NTQzMDUsMSAyLDEgTDQsMSBMNCwwIEw1LDAgWiBNMTUsNSBMMSw1IEwxLDE0IEMxLDE0LjU1MjI4NDcgMS40NDc3MTUyNSwxNSAyLDE1IEwxNCwxNSBDMTQuNTUyMjg0NywxNSAxNSwxNC41NTIyODQ3IDE1LDE0IEwxNSw1IFogTTYsNyBDNi41NTIyODQ3NSw3IDcsNy40NDc3MTUyNSA3LDggTDcsMTAgQzcsMTAuNTUyMjg0NyA2LjU1MjI4NDc1LDExIDYsMTEgTDQsMTEgQzMuNDQ3NzE1MjUsMTEgMywxMC41NTIyODQ3IDMsMTAgTDMsOCBDMyw3LjQ0NzcxNTI1IDMuNDQ3NzE1MjUsNyA0LDcgTDYsNyBaIE02LDggTDQsOCBMNCwxMCBMNiwxMCBMNiw4IFogTTQsMiBMMiwyIEMxLjQ0NzcxNTI1LDIgMSwyLjQ0NzcxNTI1IDEsMyBMMSw0IEwxNSw0IEwxNSwzIEMxNSwyLjQ0NzcxNTI1IDE0LjU1MjI4NDcsMiAxNCwyIEwxMiwyIEwxMiwzIEwxMSwzIEwxMSwyIEw1LDIgTDUsMyBMNCwzIEw0LDIgWlwiXG4gICAgICAgICAgICBmaWxsPVwiI0JBQkJDMFwiXG4gICAgICAgICAgPjwvcGF0aD5cbiAgICAgICAgPC9nPlxuICAgICAgPC9zdmc+XG4gICAgPC9pPlxuICAgIDxpbnB1dFxuICAgICAgI2RhdGVJbnB1dFxuICAgICAgY2xhc3M9XCJkZXZ1aS1pbnB1dCBkZXZ1aS1mb3JtLWNvbnRyb2xcIlxuICAgICAgW2Rpc2FibGVkXT1cImRpc2FibGVkXCJcbiAgICAgIFtwbGFjZWhvbGRlcl09XCJwbGFjZWhvbGRlciB8fCBpMThuVGV4dD8ucGxhY2Vob2xkZXJcIlxuICAgICAgWyhuZ01vZGVsKV09XCJkYXRlVmFsdWVcIlxuICAgICAgYXV0b2NvbXBsZXRlPVwib2ZmXCJcbiAgICAvPlxuICAgIDxkaXYgKm5nSWY9XCJhbGxvd0NsZWFyXCIgY2xhc3M9XCJkZXZ1aS1pbnB1dC1ncm91cC1hZGRvbiBjbG9zZS1pY29uLXdyYXBwZXJcIiAoY2xpY2spPVwiY2xlYXIoJGV2ZW50LCB0cnVlKVwiPlxuICAgICAgPGRpdiBjbGFzcz1cImNsb3NlLWljb25cIj5cbiAgICAgICAgPHN2Z1xuICAgICAgICAgIHdpZHRoPVwiMTZweFwiXG4gICAgICAgICAgaGVpZ2h0PVwiMTZweFwiXG4gICAgICAgICAgdmlld0JveD1cIjAgMCAxNiAxNlwiXG4gICAgICAgICAgdmVyc2lvbj1cIjEuMVwiXG4gICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgICAgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxnIHN0cm9rZT1cIm5vbmVcIiBzdHJva2Utd2lkdGg9XCIxXCIgZmlsbD1cIm5vbmVcIiBmaWxsLXJ1bGU9XCJldmVub2RkXCI+XG4gICAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgICBkPVwiTTgsMSBDMTEuODY1OTkzMiwxIDE1LDQuMTM0MDA2NzUgMTUsOCBDMTUsMTEuODY1OTkzMiAxMS44NjU5OTMyLDE1IDgsMTUgQzQuMTM0MDA2NzUsMTUgMSwxMS44NjU5OTMyIDEsOCBDMSw0LjEzNDAwNjc1IDQuMTM0MDA2NzUsMSA4LDEgWiBNNS44Nzg2Nzk2Niw1LjE3MTU3Mjg4IEM1LjY4MzQxNzUxLDQuOTc2MzEwNzMgNS4zNjY4MzUwMiw0Ljk3NjMxMDczIDUuMTcxNTcyODgsNS4xNzE1NzI4OCBDNC45OTgwMDY1Miw1LjM0NTEzOTIzIDQuOTc4NzIxMzcsNS42MTQ1NjM2MyA1LjExMzcxNzQyLDUuODA5NDMxNzcgTDUuMTcxNTcyODgsNS44Nzg2Nzk2NiBMNy4yOTIxODYxMSw3Ljk5OTI5Mjg5IEw1LjE3MTU3Mjg4LDEwLjEyMTMyMDMgQzQuOTc2MzEwNzMsMTAuMzE2NTgyNSA0Ljk3NjMxMDczLDEwLjYzMzE2NSA1LjE3MTU3Mjg4LDEwLjgyODQyNzEgQzUuMzQ1MTM5MjMsMTEuMDAxOTkzNSA1LjYxNDU2MzYzLDExLjAyMTI3ODYgNS44MDk0MzE3NywxMC44ODYyODI2IEw1Ljg3ODY3OTY2LDEwLjgyODQyNzEgTDcuOTk5MjkyODksOC43MDYzOTk2NyBMMTAuMTIxMzIwMywxMC44Mjg0MjcxIEMxMC4zMTY1ODI1LDExLjAyMzY4OTMgMTAuNjMzMTY1LDExLjAyMzY4OTMgMTAuODI4NDI3MSwxMC44Mjg0MjcxIEMxMS4wMDE5OTM1LDEwLjY1NDg2MDggMTEuMDIxMjc4NiwxMC4zODU0MzY0IDEwLjg4NjI4MjYsMTAuMTkwNTY4MiBMMTAuODI4NDI3MSwxMC4xMjEzMjAzIEw4LjcwNzEwNjc4LDggTDEwLjgyODQyNzEsNS44Nzg2Nzk2NiBDMTEuMDIzNjg5Myw1LjY4MzQxNzUxIDExLjAyMzY4OTMsNS4zNjY4MzUwMiAxMC44Mjg0MjcxLDUuMTcxNTcyODggQzEwLjY1NDg2MDgsNC45OTgwMDY1MiAxMC4zODU0MzY0LDQuOTc4NzIxMzcgMTAuMTkwNTY4Miw1LjExMzcxNzQyIEwxMC4xMjEzMjAzLDUuMTcxNTcyODggTDgsNy4yOTI4OTMyMiBMNS44Nzg2Nzk2Niw1LjE3MTU3Mjg4IFpcIlxuICAgICAgICAgICAgICBmaWxsLXJ1bGU9XCJub256ZXJvXCJcbiAgICAgICAgICAgID48L3BhdGg+XG4gICAgICAgICAgPC9nPlxuICAgICAgICA8L3N2Zz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+XG4iXX0=