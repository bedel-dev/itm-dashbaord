import { Component, Input, TemplateRef } from '@angular/core';
import { I18nService } from 'ng-devui/i18n';
import { DatepickerProService } from '../datepicker-pro.service';
import * as i0 from "@angular/core";
import * as i1 from "../datepicker-pro.service";
import * as i2 from "ng-devui/i18n";
import * as i3 from "ng-devui/button";
import * as i4 from "@angular/common";
export class FooterPanelComponent {
    constructor(pickerSrv, i18n) {
        this.pickerSrv = pickerSrv;
        this.i18n = i18n;
        this.setI18nText();
    }
    get isRange() {
        return this.pickerSrv.isRange;
    }
    get confirmDisable() {
        if (this.isRange) {
            return (this.pickerSrv.currentActiveInput === 'start' && !this.pickerSrv.curRangeDate[0]) ||
                (this.pickerSrv.currentActiveInput === 'end' && !this.pickerSrv.curRangeDate[1]);
        }
        else {
            return false;
        }
    }
    setI18nText() {
        this.i18nText = this.i18n.getI18nText().common;
        this.i18nSubscription = this.i18n.langChange().subscribe((data) => {
            this.i18nText = data.common;
        });
    }
    ensureDate() {
        if (this.pickerSrv.isRange) {
            if (this.pickerSrv.currentActiveInput === 'start') {
                this.pickerSrv.currentActiveInput = 'end';
                this.pickerSrv.activeInputChange.next('end');
            }
            else if (!this.pickerSrv.curRangeDate[0]) {
                this.pickerSrv.currentActiveInput = 'start';
                this.pickerSrv.activeInputChange.next('start');
            }
            else {
                this.close(true);
            }
        }
        else {
            this.close(true);
        }
    }
    close(isConfirm = false) {
        this.pickerSrv.closeDropdownEvent.next(isConfirm);
    }
    ngOnDestroy() {
        this.i18nSubscription.unsubscribe();
    }
}
FooterPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: FooterPanelComponent, deps: [{ token: i1.DatepickerProService }, { token: i2.I18nService }], target: i0.ɵɵFactoryTarget.Component });
FooterPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: FooterPanelComponent, selector: "d-datepicker-footer-panel", inputs: { footerTemplate: "footerTemplate" }, ngImport: i0, template: "<div class=\"devui-datepicekr-pro-footer\">\n  <ng-template [ngTemplateOutlet]=\"footerTemplate || default\"> </ng-template>\n</div>\n\n<ng-template #default>\n  <d-button bsStyle=\"primary\" [disabled]=\"confirmDisable\" (click)=\"ensureDate()\"> {{ i18nText.btnOk }} </d-button>\n  <d-button class=\"devui-cancel-button\" bsStyle=\"common\" *ngIf=\"isRange\" (click)=\"close()\"> {{ i18nText.btnCancel }} </d-button>\n</ng-template>\n", styles: [".devui-datepicekr-pro-footer{padding:8px;text-align:center;border-top:1px solid #f2f2f3;border-top:1px solid var(--devui-dividing-line, #f2f2f3)}.devui-datepicekr-pro-footer .devui-cancel-button{margin-left:4px}\n"], components: [{ type: i3.ButtonComponent, selector: "d-button", inputs: ["id", "type", "bsStyle", "shape", "bsSize", "bsPosition", "bordered", "icon", "disabled", "showLoading", "width", "autofocus", "loadingTemplateRef"], outputs: ["btnClick"] }], directives: [{ type: i4.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: FooterPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-datepicker-footer-panel', preserveWhitespaces: false, template: "<div class=\"devui-datepicekr-pro-footer\">\n  <ng-template [ngTemplateOutlet]=\"footerTemplate || default\"> </ng-template>\n</div>\n\n<ng-template #default>\n  <d-button bsStyle=\"primary\" [disabled]=\"confirmDisable\" (click)=\"ensureDate()\"> {{ i18nText.btnOk }} </d-button>\n  <d-button class=\"devui-cancel-button\" bsStyle=\"common\" *ngIf=\"isRange\" (click)=\"close()\"> {{ i18nText.btnCancel }} </d-button>\n</ng-template>\n", styles: [".devui-datepicekr-pro-footer{padding:8px;text-align:center;border-top:1px solid #f2f2f3;border-top:1px solid var(--devui-dividing-line, #f2f2f3)}.devui-datepicekr-pro-footer .devui-cancel-button{margin-left:4px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.DatepickerProService }, { type: i2.I18nService }]; }, propDecorators: { footerTemplate: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9vdGVyLXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2RldnVpL2RhdGVwaWNrZXItcHJvL2xpYi9mb290ZXItcGFuZWwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vZGV2dWkvZGF0ZXBpY2tlci1wcm8vbGliL2Zvb3Rlci1wYW5lbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUFFLEtBQUssRUFBYSxXQUFXLEVBQ3pDLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBaUIsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDOzs7Ozs7QUFRakUsTUFBTSxPQUFPLG9CQUFvQjtJQW1CL0IsWUFDVSxTQUErQixFQUM3QixJQUFpQjtRQURuQixjQUFTLEdBQVQsU0FBUyxDQUFzQjtRQUM3QixTQUFJLEdBQUosSUFBSSxDQUFhO1FBRTNCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBbEJELElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7SUFDaEMsQ0FBQztJQUVELElBQUksY0FBYztRQUNoQixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsa0JBQWtCLEtBQUssT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pGLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsS0FBSyxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2xGO2FBQU07WUFDTCxPQUFPLEtBQUssQ0FBQztTQUNkO0lBQ0gsQ0FBQztJQVNELFdBQVc7UUFDVCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsTUFBTSxDQUFDO1FBQy9DLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ2hFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUM5QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRTtZQUMxQixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsa0JBQWtCLEtBQUssT0FBTyxFQUFFO2dCQUNqRCxJQUFJLENBQUMsU0FBUyxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQztnQkFDMUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDOUM7aUJBQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUMxQyxJQUFJLENBQUMsU0FBUyxDQUFDLGtCQUFrQixHQUFHLE9BQU8sQ0FBQztnQkFDNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDaEQ7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUNsQjtTQUNGO2FBQU07WUFDTCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2xCO0lBQ0gsQ0FBQztJQUVELEtBQUssQ0FBQyxTQUFTLEdBQUcsS0FBSztRQUNyQixJQUFJLENBQUMsU0FBUyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN0QyxDQUFDOztpSEF2RFUsb0JBQW9CO3FHQUFwQixvQkFBb0IsK0dDYmpDLHNiQVFBOzJGREthLG9CQUFvQjtrQkFOaEMsU0FBUzsrQkFDRSwyQkFBMkIsdUJBR2hCLEtBQUs7cUlBR2pCLGNBQWM7c0JBQXRCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIFRlbXBsYXRlUmVmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSTE4bkludGVyZmFjZSwgSTE4blNlcnZpY2UgfSBmcm9tICduZy1kZXZ1aS9pMThuJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgRGF0ZXBpY2tlclByb1NlcnZpY2UgfSBmcm9tICcuLi9kYXRlcGlja2VyLXByby5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZC1kYXRlcGlja2VyLWZvb3Rlci1wYW5lbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9mb290ZXItcGFuZWwuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9mb290ZXItcGFuZWwuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIEZvb3RlclBhbmVsQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgQElucHV0KCkgZm9vdGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgaTE4blRleHQ6IEkxOG5JbnRlcmZhY2VbJ2NvbW1vbiddO1xuICBpMThuU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG5cbiAgZ2V0IGlzUmFuZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMucGlja2VyU3J2LmlzUmFuZ2U7XG4gIH1cblxuICBnZXQgY29uZmlybURpc2FibGUoKSB7XG4gICAgaWYgKHRoaXMuaXNSYW5nZSkge1xuICAgICAgcmV0dXJuICh0aGlzLnBpY2tlclNydi5jdXJyZW50QWN0aXZlSW5wdXQgPT09ICdzdGFydCcgJiYgIXRoaXMucGlja2VyU3J2LmN1clJhbmdlRGF0ZVswXSkgfHxcbiAgICAgICh0aGlzLnBpY2tlclNydi5jdXJyZW50QWN0aXZlSW5wdXQgPT09ICdlbmQnICYmICF0aGlzLnBpY2tlclNydi5jdXJSYW5nZURhdGVbMV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBwaWNrZXJTcnY6IERhdGVwaWNrZXJQcm9TZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBpMThuOiBJMThuU2VydmljZVxuICApIHtcbiAgICB0aGlzLnNldEkxOG5UZXh0KCk7XG4gIH1cblxuICBzZXRJMThuVGV4dCgpIHtcbiAgICB0aGlzLmkxOG5UZXh0ID0gdGhpcy5pMThuLmdldEkxOG5UZXh0KCkuY29tbW9uO1xuICAgIHRoaXMuaTE4blN1YnNjcmlwdGlvbiA9IHRoaXMuaTE4bi5sYW5nQ2hhbmdlKCkuc3Vic2NyaWJlKChkYXRhKSA9PiB7XG4gICAgICB0aGlzLmkxOG5UZXh0ID0gZGF0YS5jb21tb247XG4gICAgfSk7XG4gIH1cblxuICBlbnN1cmVEYXRlKCkge1xuICAgIGlmICh0aGlzLnBpY2tlclNydi5pc1JhbmdlKSB7XG4gICAgICBpZiAodGhpcy5waWNrZXJTcnYuY3VycmVudEFjdGl2ZUlucHV0ID09PSAnc3RhcnQnKSB7XG4gICAgICAgIHRoaXMucGlja2VyU3J2LmN1cnJlbnRBY3RpdmVJbnB1dCA9ICdlbmQnO1xuICAgICAgICB0aGlzLnBpY2tlclNydi5hY3RpdmVJbnB1dENoYW5nZS5uZXh0KCdlbmQnKTtcbiAgICAgIH0gZWxzZSBpZiAoIXRoaXMucGlja2VyU3J2LmN1clJhbmdlRGF0ZVswXSkge1xuICAgICAgICB0aGlzLnBpY2tlclNydi5jdXJyZW50QWN0aXZlSW5wdXQgPSAnc3RhcnQnO1xuICAgICAgICB0aGlzLnBpY2tlclNydi5hY3RpdmVJbnB1dENoYW5nZS5uZXh0KCdzdGFydCcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jbG9zZSh0cnVlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jbG9zZSh0cnVlKTtcbiAgICB9XG4gIH1cblxuICBjbG9zZShpc0NvbmZpcm0gPSBmYWxzZSkge1xuICAgIHRoaXMucGlja2VyU3J2LmNsb3NlRHJvcGRvd25FdmVudC5uZXh0KGlzQ29uZmlybSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmkxOG5TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG59XG4iLCI8ZGl2IGNsYXNzPVwiZGV2dWktZGF0ZXBpY2Vrci1wcm8tZm9vdGVyXCI+XG4gIDxuZy10ZW1wbGF0ZSBbbmdUZW1wbGF0ZU91dGxldF09XCJmb290ZXJUZW1wbGF0ZSB8fCBkZWZhdWx0XCI+IDwvbmctdGVtcGxhdGU+XG48L2Rpdj5cblxuPG5nLXRlbXBsYXRlICNkZWZhdWx0PlxuICA8ZC1idXR0b24gYnNTdHlsZT1cInByaW1hcnlcIiBbZGlzYWJsZWRdPVwiY29uZmlybURpc2FibGVcIiAoY2xpY2spPVwiZW5zdXJlRGF0ZSgpXCI+IHt7IGkxOG5UZXh0LmJ0bk9rIH19IDwvZC1idXR0b24+XG4gIDxkLWJ1dHRvbiBjbGFzcz1cImRldnVpLWNhbmNlbC1idXR0b25cIiBic1N0eWxlPVwiY29tbW9uXCIgKm5nSWY9XCJpc1JhbmdlXCIgKGNsaWNrKT1cImNsb3NlKClcIj4ge3sgaTE4blRleHQuYnRuQ2FuY2VsIH19IDwvZC1idXR0b24+XG48L25nLXRlbXBsYXRlPlxuIl19