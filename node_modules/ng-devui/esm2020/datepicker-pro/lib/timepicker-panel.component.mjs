import { Component, ElementRef } from '@angular/core';
import { I18nService } from 'ng-devui/i18n';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { DatepickerProService } from '../datepicker-pro.service';
import * as i0 from "@angular/core";
import * as i1 from "../datepicker-pro.service";
import * as i2 from "ng-devui/i18n";
import * as i3 from "@angular/common";
export class TimepickerPanelComponent {
    constructor(el, pickSrv, i18n) {
        this.el = el;
        this.pickSrv = pickSrv;
        this.i18n = i18n;
        this.firstList = [];
        this.secondList = [];
        this.thirdList = [];
        this.hourIndex = null;
        this.minIndex = null;
        this.secIndex = null;
        this.typeList = ['hour', 'min', 'sec'];
        this.unsubscribe$ = new Subject();
    }
    ngOnInit() {
        this.initDateList();
        this.initObservable();
        this.setI18nText();
    }
    setI18nText() {
        this.i18nText = this.i18n.getI18nText().datePickerPro;
        this.i18nSubscription = this.i18n.langChange().subscribe((data) => {
            this.i18nText = data.datePickerPro;
        });
    }
    initObservable() {
        this.pickSrv.toggleEvent.pipe(takeUntil(this.unsubscribe$)).subscribe(isOpen => {
            if (isOpen) {
                setTimeout(() => {
                    this.initDateList(true);
                });
            }
        });
        this.pickSrv.updateTimeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(value => {
            if (this.hourIndex !== value.hour) {
                this.chooseTime('hour', value.hour);
            }
            if (this.minIndex !== value.min) {
                this.chooseTime('min', value.min);
            }
            if (this.secIndex !== value.seconds) {
                this.chooseTime('sec', value.seconds);
            }
        });
        if (this.pickSrv.isRange) {
            this.pickSrv.activeInputChange.pipe(takeUntil(this.unsubscribe$)).subscribe(type => {
                const isNull = (type === 'start' && !this.pickSrv.curRangeDate[0]) ||
                    (type === 'end' && !this.pickSrv.curRangeDate[1]);
                if (this.hourIndex !== this.pickSrv.curHour || isNull) {
                    this.chooseTime('hour', isNull ? null : this.pickSrv.curHour);
                }
                if (this.minIndex !== this.pickSrv.curMin || isNull) {
                    this.chooseTime('min', isNull ? null : this.pickSrv.curMin);
                }
                if (this.secIndex !== this.pickSrv.curSec || isNull) {
                    this.chooseTime('sec', isNull ? null : this.pickSrv.curSec);
                }
            });
        }
    }
    initDateList(justScroll = false) {
        if (this.pickSrv.curDate) {
            this.hourIndex = this.pickSrv.curDate.getHours();
            this.minIndex = this.pickSrv.curDate.getMinutes();
            this.secIndex = this.pickSrv.curDate.getSeconds();
        }
        this.typeList.forEach(type => {
            this.chooseTime(type, this[`${type}Index`], false, justScroll);
        });
    }
    chooseTime(type, index, handle = false, justScroll = false) {
        switch (type) {
            case 'hour':
                this.hourIndex = index;
                this.firstList = new Array(24).fill(1).map((t, i) => {
                    return {
                        time: i < 10 ? `0${i}` : String(i),
                        type: 'hour',
                        active: this.hourIndex === i,
                        disabled: false
                    };
                });
                this.setAllScroll(index, this.pickSrv.curMin, this.pickSrv.curSec, justScroll);
                break;
            case 'min':
                this.minIndex = index;
                this.secondList = new Array(60).fill(1).map((t, i) => {
                    return {
                        time: i < 10 ? `0${i}` : String(i),
                        type: 'min',
                        active: this.minIndex === i,
                        disabled: false
                    };
                });
                this.setAllScroll(this.pickSrv.curHour, index, this.pickSrv.curSec, justScroll);
                break;
            case 'sec':
                this.secIndex = index;
                this.thirdList = new Array(60).fill(1).map((t, i) => {
                    return {
                        time: i < 10 ? `0${i}` : String(i),
                        type: 'sec',
                        active: this.secIndex === i,
                        disabled: false
                    };
                });
                this.setAllScroll(this.pickSrv.curHour, this.pickSrv.curMin, index, justScroll);
        }
        if (handle) {
            this.pickSrv.selectedTimeChange.next({
                activeInput: this.pickSrv.currentActiveInput,
                hour: this.hourIndex,
                min: this.minIndex,
                seconds: this.secIndex
            });
        }
    }
    setAllScroll(first, second, third, justScroll) {
        this.setScroll('first', first, justScroll);
        this.setScroll('second', second, justScroll);
        this.setScroll('third', third, justScroll);
    }
    setScroll(whichList, index, justScroll) {
        const scroll = (22 + 8) * index;
        const duration = justScroll ? 0 : 100;
        if (this.el) {
            this.scrollTo(this.el.nativeElement.querySelector(`.devui-${whichList}-list`), scroll, duration);
        }
    }
    scrollTo(element, to, duration) {
        if (typeof window === undefined || !element) {
            return;
        }
        if (duration <= 0) {
            element.scrollTop = to;
            return;
        }
        const difference = to - element.scrollTop;
        const perTick = (difference / duration) * 10;
        const reqAnimFrame = window['requestAnimationFrame'] ||
            window['mozRequestAnimationFrame'] ||
            window['msRequestAnimationFrame'] ||
            window['oRequestAnimationFrame'];
        reqAnimFrame(() => {
            element.scrollTop = element.scrollTop + perTick;
            if (element.scrollTop === to) {
                return;
            }
            this.scrollTo(element, to, duration - 10);
        });
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
}
TimepickerPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TimepickerPanelComponent, deps: [{ token: i0.ElementRef }, { token: i1.DatepickerProService }, { token: i2.I18nService }], target: i0.ɵɵFactoryTarget.Component });
TimepickerPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: TimepickerPanelComponent, selector: "d-timepicker-panel", ngImport: i0, template: "<div class=\"devui-timepicker-panel\">\n  <div class=\"devui-time-header\">\n    <span class=\"devui-time-header-item\">{{ i18nText?.hour }}</span>\n    <span class=\"devui-time-header-item\">{{ i18nText?.min }}</span>\n    <span class=\"devui-time-header-item\">{{ i18nText?.second }}</span>\n  </div>\n  <div class=\"devui-time-picker\">\n    <ul *ngIf=\"firstList.length\" class=\"devui-time-list devui-first-list\">\n      <li\n        *ngFor=\"let item of firstList; let i = index\"\n        class=\"devui-time-item devui-first-item\"\n        [ngClass]=\"{\n          active: item?.active,\n          disabled: item?.disabled\n        }\"\n        (click)=\"chooseTime(item.type, i, true)\"\n      >\n        {{ item?.time }}\n      </li>\n    </ul>\n    <ul *ngIf=\"secondList.length\" class=\"devui-time-list devui-second-list\">\n      <li\n        *ngFor=\"let item of secondList; let i = index\"\n        class=\"devui-time-item devui-second-item\"\n        [ngClass]=\"{\n          active: item?.active,\n          disabled: item?.disabled\n        }\"\n        (click)=\"chooseTime(item.type, i, true)\"\n      >\n        {{ item?.time }}\n      </li>\n    </ul>\n    <ul *ngIf=\"thirdList.length\" class=\"devui-time-list devui-third-list\">\n      <li\n        *ngFor=\"let item of thirdList; let i = index\"\n        class=\"devui-time-item devui-third-item\"\n        [ngClass]=\"{\n          active: item?.active,\n          disabled: item?.disabled\n        }\"\n        (click)=\"chooseTime(item.type, i, true)\"\n      >\n        {{ item?.time }}\n      </li>\n    </ul>\n  </div>\n</div>\n", styles: [":host{display:inline-block;vertical-align:top;font-size:12px}.devui-timepicker-panel{width:115px;height:306px;text-align:center;border-left:1px solid #f2f2f3;border-left:1px solid var(--devui-dividing-line, #f2f2f3)}.devui-timepicker-panel .devui-time-header{display:flex;height:30px;padding:0 12px}.devui-timepicker-panel .devui-time-header-item{flex:1;line-height:30px;margin-right:12px}.devui-timepicker-panel .devui-time-header-item:last-child{margin-right:0}.devui-timepicker-panel .devui-time-picker{display:flex;height:276px;width:114px;padding:0 12px;overflow:hidden;border-radius:2px 2px 0 0;border-radius:var(--devui-border-radius, 2px) var(--devui-border-radius, 2px) 0 0}.devui-timepicker-panel .devui-time-picker .devui-time-list{flex:1;overflow-x:hidden;overflow-y:scroll;overflow-y:overlay;scroll-behavior:auto;padding-right:12px;scrollbar-width:none}.devui-timepicker-panel .devui-time-picker .devui-time-list:last-child{padding-right:0}.devui-timepicker-panel .devui-time-picker .devui-time-list::-webkit-scrollbar{width:0!important}.devui-timepicker-panel .devui-time-picker .devui-time-list:hover{scrollbar-width:thin}.devui-timepicker-panel .devui-time-picker .devui-time-list:hover::-webkit-scrollbar{width:4px!important}.devui-timepicker-panel .devui-time-picker .devui-time-list .devui-time-item{width:100%;height:22px;line-height:22px;text-align:center;cursor:pointer}.devui-timepicker-panel .devui-time-picker .devui-time-list .devui-time-item:not(:last-child){margin-bottom:8px}.devui-timepicker-panel .devui-time-picker .devui-time-list .devui-time-item:last-child{margin-bottom:260px}.devui-timepicker-panel .devui-time-picker:not(.devui-disabled) .devui-time-list .devui-time-item:hover{color:#252b3a;color:var(--devui-list-item-hover-text, #252b3a);background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}.devui-timepicker-panel .devui-time-picker:not(.devui-disabled) .devui-time-list .devui-time-item.active{color:#252b3a;color:var(--devui-list-item-active-text, #252b3a);background-color:#f2f5fc;background-color:var(--devui-list-item-active-bg, #f2f5fc);border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}.devui-timepicker-panel .devui-time-picker:not(.devui-disabled) .devui-time-list .devui-time-item.disabled{color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3);background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}\n"], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: TimepickerPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-timepicker-panel', preserveWhitespaces: false, template: "<div class=\"devui-timepicker-panel\">\n  <div class=\"devui-time-header\">\n    <span class=\"devui-time-header-item\">{{ i18nText?.hour }}</span>\n    <span class=\"devui-time-header-item\">{{ i18nText?.min }}</span>\n    <span class=\"devui-time-header-item\">{{ i18nText?.second }}</span>\n  </div>\n  <div class=\"devui-time-picker\">\n    <ul *ngIf=\"firstList.length\" class=\"devui-time-list devui-first-list\">\n      <li\n        *ngFor=\"let item of firstList; let i = index\"\n        class=\"devui-time-item devui-first-item\"\n        [ngClass]=\"{\n          active: item?.active,\n          disabled: item?.disabled\n        }\"\n        (click)=\"chooseTime(item.type, i, true)\"\n      >\n        {{ item?.time }}\n      </li>\n    </ul>\n    <ul *ngIf=\"secondList.length\" class=\"devui-time-list devui-second-list\">\n      <li\n        *ngFor=\"let item of secondList; let i = index\"\n        class=\"devui-time-item devui-second-item\"\n        [ngClass]=\"{\n          active: item?.active,\n          disabled: item?.disabled\n        }\"\n        (click)=\"chooseTime(item.type, i, true)\"\n      >\n        {{ item?.time }}\n      </li>\n    </ul>\n    <ul *ngIf=\"thirdList.length\" class=\"devui-time-list devui-third-list\">\n      <li\n        *ngFor=\"let item of thirdList; let i = index\"\n        class=\"devui-time-item devui-third-item\"\n        [ngClass]=\"{\n          active: item?.active,\n          disabled: item?.disabled\n        }\"\n        (click)=\"chooseTime(item.type, i, true)\"\n      >\n        {{ item?.time }}\n      </li>\n    </ul>\n  </div>\n</div>\n", styles: [":host{display:inline-block;vertical-align:top;font-size:12px}.devui-timepicker-panel{width:115px;height:306px;text-align:center;border-left:1px solid #f2f2f3;border-left:1px solid var(--devui-dividing-line, #f2f2f3)}.devui-timepicker-panel .devui-time-header{display:flex;height:30px;padding:0 12px}.devui-timepicker-panel .devui-time-header-item{flex:1;line-height:30px;margin-right:12px}.devui-timepicker-panel .devui-time-header-item:last-child{margin-right:0}.devui-timepicker-panel .devui-time-picker{display:flex;height:276px;width:114px;padding:0 12px;overflow:hidden;border-radius:2px 2px 0 0;border-radius:var(--devui-border-radius, 2px) var(--devui-border-radius, 2px) 0 0}.devui-timepicker-panel .devui-time-picker .devui-time-list{flex:1;overflow-x:hidden;overflow-y:scroll;overflow-y:overlay;scroll-behavior:auto;padding-right:12px;scrollbar-width:none}.devui-timepicker-panel .devui-time-picker .devui-time-list:last-child{padding-right:0}.devui-timepicker-panel .devui-time-picker .devui-time-list::-webkit-scrollbar{width:0!important}.devui-timepicker-panel .devui-time-picker .devui-time-list:hover{scrollbar-width:thin}.devui-timepicker-panel .devui-time-picker .devui-time-list:hover::-webkit-scrollbar{width:4px!important}.devui-timepicker-panel .devui-time-picker .devui-time-list .devui-time-item{width:100%;height:22px;line-height:22px;text-align:center;cursor:pointer}.devui-timepicker-panel .devui-time-picker .devui-time-list .devui-time-item:not(:last-child){margin-bottom:8px}.devui-timepicker-panel .devui-time-picker .devui-time-list .devui-time-item:last-child{margin-bottom:260px}.devui-timepicker-panel .devui-time-picker:not(.devui-disabled) .devui-time-list .devui-time-item:hover{color:#252b3a;color:var(--devui-list-item-hover-text, #252b3a);background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}.devui-timepicker-panel .devui-time-picker:not(.devui-disabled) .devui-time-list .devui-time-item.active{color:#252b3a;color:var(--devui-list-item-active-text, #252b3a);background-color:#f2f5fc;background-color:var(--devui-list-item-active-bg, #f2f5fc);border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}.devui-timepicker-panel .devui-time-picker:not(.devui-disabled) .devui-time-list .devui-time-item.disabled{color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3);background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.DatepickerProService }, { type: i2.I18nService }]; } });
//# sourceMappingURL=data:application/json;base64,