import { CdkVirtualScrollViewport, ScrollDispatcher } from '@angular/cdk/scrolling';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewChild } from '@angular/core';
import { I18nService } from 'ng-devui/i18n';
import { Subject } from 'rxjs';
import { debounceTime, filter, takeUntil } from 'rxjs/operators';
import { DatepickerProCommonDataService, DatepickerProService } from '../datepicker-pro.service';
import * as i0 from "@angular/core";
import * as i1 from "ng-devui/i18n";
import * as i2 from "../datepicker-pro.service";
import * as i3 from "@angular/cdk/scrolling";
import * as i4 from "@angular/common";
import * as i5 from "ng-devui/popover";
const DAY_DURATION = 24 * 60 * 60 * 1000;
export class CalendarPanelComponent {
    constructor(i18n, pickerSrv, dataSrv, cdr, scrollDispatcher) {
        this.i18n = i18n;
        this.pickerSrv = pickerSrv;
        this.dataSrv = dataSrv;
        this.cdr = cdr;
        this.scrollDispatcher = scrollDispatcher;
        this.isWeekSelect = false;
        this.currentBodyIndex = 0;
        this.calendarItemSize = 186; // 一个月份日历的高度
        this.unsubscribe$ = new Subject();
        this.allMonthList = [];
        this.yearAndMonthList = [];
        this.isListCollopse = false;
        this.weekHoverRange = [];
    }
    get curHoverDate() {
        return this.pickerSrv.curHoverDate;
    }
    set curHoverDate(value) {
        this.pickerSrv.curHoverDate = value;
        this.cdr.detectChanges();
    }
    get curDate() {
        if (this.isRangeType) {
            if (this.pickerSrv.currentActiveInput === 'start') {
                return this.pickerSrv.curRangeDate[0];
            }
            else if (this.pickerSrv.currentActiveInput === 'end') {
                return this.pickerSrv.curRangeDate[1];
            }
        }
        else {
            return this.pickerSrv.curDate;
        }
    }
    set curDate(value) {
        if (this.isRangeType) {
            if (this.pickerSrv.currentActiveInput === 'start') {
                this.pickerSrv.curRangeDate[0] = value;
            }
            else if (this.pickerSrv.currentActiveInput === 'end') {
                if (this.pickerSrv.showTime) {
                    this.pickerSrv.curRangeDate[1] =
                        (this.pickerSrv.curRangeDate[1] && this.pickerSrv.curRangeDate[1].toDateString() === value.toDateString())
                            ? value
                            : new Date(value.setHours(23, 59, 59));
                }
                else {
                    this.pickerSrv.curRangeDate[1] = new Date(value.setHours(23, 59, 59));
                }
            }
        }
        else {
            this.pickerSrv.curDate = value;
        }
    }
    get selectedRangeDate() {
        return this.pickerSrv.curRangeDate;
    }
    set selectedRangeDate(dateList) {
        this.pickerSrv.curRangeDate = dateList;
    }
    get markDateTemplate() {
        return this.pickerSrv.markDateInfoTemplate;
    }
    setI18nText() {
        this.i18nText = this.i18n.getI18nText().datePickerPro;
        this.i18nSubscription = this.i18n.langChange().pipe(takeUntil(this.unsubscribe$)).subscribe((data) => {
            this.i18nText = data.datePickerPro;
            this.cdr.detectChanges();
        });
    }
    ngOnInit() {
        this.setI18nText();
        this.today = new Date();
        this.initDataList();
        this.initObservable();
    }
    initObservable() {
        this.pickerSrv.toggleEvent.pipe(takeUntil(this.unsubscribe$)).subscribe(isOpen => {
            if (isOpen) {
                setTimeout(() => {
                    this.goToDate(this.curDate || new Date(), 'auto');
                });
                // 首次展开添加滚动监听
                if (!this.scrollListener) {
                    this.initScrollListener();
                }
            }
            else {
                this.curHoverDate = null;
            }
        });
        this.pickerSrv.updateDateValue.pipe(takeUntil(this.unsubscribe$)).subscribe(res => {
            if (this.isRangeType) {
                this.updateRangeDate(res.value);
            }
            else {
                this.updateSingleDate(res.value);
            }
        });
        this.pickerSrv.detectedChanges.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {
            this.cdr.detectChanges();
        });
        this.pickerSrv.activeInputChange.pipe(takeUntil(this.unsubscribe$)).subscribe(type => {
            if (type === 'start') {
                this.goToDate(this.selectedRangeDate[0] || this.selectedRangeDate[1] || new Date());
            }
            else {
                if (!this.selectedRangeDate[1] && this.selectedRangeDate[0]) {
                    this.updateRangeDate([this.selectedRangeDate[0], this.selectedRangeDate[0]]);
                }
                this.goToDate(this.selectedRangeDate[1] || this.selectedRangeDate[0] || new Date());
            }
        });
    }
    initScrollListener() {
        this.scrollDispatcher.scrolled().pipe(takeUntil(this.unsubscribe$), filter((res) => {
            return res && res.getElementRef().nativeElement.classList.contains('devui-tbody-wrapper');
        }), debounceTime(50)).subscribe(() => {
            const offsetY = this.scrollBodyCmp.measureScrollOffset();
            // 当滚动超过一个月面板的一半时，就更新月份
            this.currentBodyIndex = Math.floor(offsetY / this.calendarItemSize) + (offsetY % this.calendarItemSize > 100 ? 1 : 0);
            const listIndex = this.isListCollopse ?
                Math.floor(this.currentBodyIndex / 12) : this.currentBodyIndex + Math.floor(this.currentBodyIndex / 12) + 1;
            this.goToListByIndex(listIndex);
            this.cdr.detectChanges();
        });
    }
    initDataList() {
        const key = `${this.pickerSrv.calendarRange.join('-')}-${this.pickerSrv.minDate.toDateString() + this.pickerSrv.maxDate.toDateString()}`;
        if (this.dataSrv.calendarDataCache[key]) {
            this.yearAndMonthList = this.dataSrv.calendarDataCache[key].yearAndMonthList;
            this.allMonthList = this.dataSrv.calendarDataCache[key].allMonthList;
            return;
        }
        this.yearAndMonthList = [];
        this.allMonthList = [];
        for (let yearIndex = this.pickerSrv.calendarRange[0]; yearIndex <= this.pickerSrv.calendarRange[1]; yearIndex++) {
            this.yearAndMonthList.push({
                year: yearIndex,
                isMonth: false,
                active: false
            });
            for (let monthIndex = 0; monthIndex < 12; monthIndex++) {
                this.allMonthList.push({
                    year: yearIndex,
                    month: monthIndex,
                    displayWeeks: this.getDisplayWeeks(yearIndex, monthIndex)
                });
                this.yearAndMonthList.push({
                    year: yearIndex,
                    month: monthIndex,
                    isMonth: true,
                    active: false
                });
            }
        }
        this.dataSrv.calendarDataCache[key] = {
            yearAndMonthList: this.yearAndMonthList,
            allMonthList: this.allMonthList
        };
    }
    getDisplayWeeks(yearIndex, monthIndex) {
        const firstDayOfMonth = new Date(yearIndex, monthIndex, 1);
        const weekOfDay = firstDayOfMonth.getDay();
        const startDate = new Date(firstDayOfMonth.getTime() - weekOfDay * DAY_DURATION);
        const displayWeeks = [];
        for (let i = 0; i < 6; i++) {
            const startWeekDate = startDate.getTime() + i * 7 * DAY_DURATION;
            const weekDays = new Array(7).fill(0).map((value, index) => {
                const currentDate = new Date(startWeekDate + index * DAY_DURATION);
                return {
                    day: this.fillLeft(currentDate.getDate()),
                    date: currentDate,
                    inMonth: currentDate.getMonth().toString() === monthIndex.toString(),
                    isToday: currentDate.toDateString() === this.today.toDateString()
                };
            });
            displayWeeks.push(weekDays);
        }
        return displayWeeks;
    }
    goToDate(date, scrollBehavior) {
        const indexObj = this.getCurrentIndex(date);
        const scroll = scrollBehavior || (Math.abs(indexObj.bodyIndex - this.currentBodyIndex) > 18 ? 'auto' : 'smooth');
        this.currentBodyIndex = indexObj.bodyIndex;
        this.scrollBodyCmp.scrollToIndex(indexObj.bodyIndex, scroll);
        this.goToListByIndex(indexObj.listIndex);
        this.cdr.detectChanges();
    }
    goToListByIndex(index) {
        const indexDelta = Math.abs(this.scrollListCmp.measureScrollOffset() / 30 - index);
        this.scrollListCmp.scrollToIndex(index - 4, indexDelta < 12 ? 'smooth' : 'auto');
        this.updateListActive(index);
    }
    selectMonth(year, month) {
        const date = new Date(year, month, 1);
        const curYear = this.yearAndMonthList.find(t => t.active)?.year || this.curDate.getFullYear();
        // 太远的虚拟滚动会导致白屏，所以超过两年的滚动都直接跳转
        const isSmoothAnimation = Math.abs(curYear - year) < 2;
        if (this.isListCollopse) {
            this.toggleListCollopse(date);
        }
        else {
            this.goToDate(date, isSmoothAnimation ? 'smooth' : 'auto');
        }
    }
    updateRangeDate(dateList) {
        if (!dateList) {
            this.selectedRangeDate = [];
            this.cdr.detectChanges();
            return;
        }
        const curDate = (this.pickerSrv.currentActiveInput === 'start' ?
            (dateList[0] || dateList[1]) : (dateList[1] || dateList[0])) || new Date();
        const moreThanOneYear = Math.abs(curDate.getFullYear() - (this.currentBodyIndex / 12 + this.pickerSrv.calendarRange[0])) > 1;
        this.selectedRangeDate = dateList;
        this.goToDate(curDate, moreThanOneYear ? 'auto' : 'smooth');
        this.cdr.detectChanges();
    }
    updateSingleDate(date) {
        if (!date) {
            this.curDate = null;
            this.cdr.detectChanges();
            return;
        }
        const moreThanOneYear = Math.abs(date.getFullYear() - (this.currentBodyIndex / 12 + this.pickerSrv.calendarRange[0])) > 1;
        this.curDate = date;
        this.goToDate(this.curDate, moreThanOneYear ? 'auto' : 'smooth');
        this.cdr.detectChanges();
    }
    updateListActive(index) {
        const curActive = this.yearAndMonthList.find(t => t.active);
        if (curActive) {
            curActive.active = false;
        }
        this.yearAndMonthList[index].active = true;
    }
    getCurrentIndex(curDate) {
        const year = curDate.getFullYear();
        const month = curDate.getMonth();
        const listIndex = this.isListCollopse ?
            (year - this.pickerSrv.calendarRange[0]) : (year - this.pickerSrv.calendarRange[0]) * 13 + month + 1;
        return {
            bodyIndex: (year - this.pickerSrv.calendarRange[0]) * 12 + month,
            listIndex
        };
    }
    selectDate(day) {
        if (this.isDisabled(day.date) || !day.inMonth) {
            return;
        }
        if (this.isWeekSelect) {
            this.pickerSrv.curRangeDate = this.getWeekRange(day.date);
            this.pickerSrv.currentActiveInput = 'end';
        }
        else {
            this.curDate = new Date(day.date.setHours(this.pickerSrv.curHour, this.pickerSrv.curMin, this.pickerSrv.curSec));
        }
        if (this.isRangeType) {
            this.pickerSrv.fixRangeDate();
        }
        this.cdr.detectChanges();
        // 非时间模式下选完开始日期跳转到结束日期
        if (this.isRangeType && !this.pickerSrv.showTime) {
            if (this.pickerSrv.currentActiveInput === 'start') {
                this.pickerSrv.currentActiveInput = 'end';
            }
            else if (this.pickerSrv.currentActiveInput === 'end' && !this.selectedRangeDate[0]) {
                this.selectedRangeDate[0] = this.curDate;
            }
            else {
                this.pickerSrv.closeDropdownEvent.next();
            }
        }
        this.pickerSrv.selectedDateChange.next({
            type: this.isRangeType ? 'range' : 'single',
            value: this.isRangeType ? this.selectedRangeDate : this.curDate
        });
        if (this.isRangeType && this.pickerSrv.showTime) {
            this.pickerSrv.updateTimeChange.next({
                activeInput: this.pickerSrv.currentActiveInput,
                hour: this.pickerSrv.curHour,
                min: this.pickerSrv.curMin,
                seconds: this.pickerSrv.curSec
            });
        }
        if (this.pickerSrv.closeAfterSelected) {
            this.pickerSrv.closeDropdownEvent.next();
        }
    }
    isStartDate(date) {
        return this.pickerSrv.isStartDate(date);
    }
    isDisabled(date) {
        return !this.pickerSrv.dateInRange(date);
    }
    isEndDate(date) {
        return this.pickerSrv.isEndDate(date);
    }
    isDateInRange(date) {
        if (this.isWeekSelect) {
            return this.isInWeekHoverRange(date);
        }
        else {
            return this.pickerSrv.isDateInRange(date);
        }
    }
    isDateInSelectRange(date) {
        return this.pickerSrv.isDateInSelectRange(date);
    }
    isDateActive(date) {
        return this.pickerSrv.isDateActive(date);
    }
    isActiveTypeDate(date) {
        return this.pickerSrv.isActiveInputTypeDate(date);
    }
    isDateAbandon(date) {
        return this.pickerSrv.isDateAbandon(date);
    }
    isDateSuggest(date) {
        return this.pickerSrv.isInSuggestList(date);
    }
    isDateMarked(date) {
        return this.pickerSrv.isMarkedDate(date);
    }
    isSingleDate() {
        if (this.pickerSrv.currentActiveInput === 'start') {
            return !this.pickerSrv.curRangeDate[1];
        }
        else if (this.pickerSrv.currentActiveInput === 'end') {
            return !this.pickerSrv.curRangeDate[0];
        }
    }
    setHoverTarget(date, isInMonth) {
        if (!isInMonth) {
            this.curHoverDate = null;
            return;
        }
        this.curHoverDate = date;
        if (this.isWeekSelect) {
            this.weekHoverRange = this.getWeekRange(date);
            this.curWeekHoverDate = date;
            this.cdr.markForCheck();
            return;
        }
    }
    getWeekRange(date) {
        if (!date) {
            return [];
        }
        const diff = date.getDay() < this.pickerSrv.startIndexOfWeek
            ? 7 - (this.pickerSrv.startIndexOfWeek - date.getDay())
            : date.getDay() - this.pickerSrv.startIndexOfWeek;
        const weekStart = new Date(date.getTime() - diff * DAY_DURATION);
        const weekEnd = new Date(weekStart.getTime() + DAY_DURATION * 6);
        weekEnd.setHours(23, 59, 59);
        return [weekStart, weekEnd];
    }
    isInWeekHoverRange(date) {
        const range = this.getWeekRange(this.curWeekHoverDate);
        const time = date.getTime();
        const timeStr = date.toDateString();
        if (this.pickerSrv.isDateActive(date)) {
            return false;
        }
        return ((range[0]?.getTime() < time && time < range[1]?.getTime()) ||
            (range[0]?.toDateString() === timeStr || timeStr === range[1]?.toDateString()));
    }
    toggleListCollopse(toDate) {
        const activeItem = this.yearAndMonthList.find(t => t.active);
        const curYear = activeItem?.year;
        const curMonth = activeItem?.month;
        this.isListCollopse = !this.isListCollopse;
        if (this.isListCollopse) {
            this.yearAndMonthList = this.yearAndMonthList.filter(t => !t.isMonth);
        }
        else {
            this.initDataList();
        }
        setTimeout(() => {
            this.goToDate(toDate || new Date(curYear, curMonth || 0, 1), 'auto');
        });
    }
    fillLeft(num) {
        return num < 10 ? `0${num}` : `${num}`;
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
}
CalendarPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: CalendarPanelComponent, deps: [{ token: i1.I18nService }, { token: i2.DatepickerProService }, { token: i2.DatepickerProCommonDataService }, { token: i0.ChangeDetectorRef }, { token: i3.ScrollDispatcher }], target: i0.ɵɵFactoryTarget.Component });
CalendarPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: CalendarPanelComponent, selector: "d-calendar-panel", inputs: { isRangeType: "isRangeType", isWeekSelect: "isWeekSelect" }, viewQueries: [{ propertyName: "scrollBodyCmp", first: true, predicate: ["scrollBody"], descendants: true }, { propertyName: "scrollListCmp", first: true, predicate: ["scrollList"], descendants: true }], ngImport: i0, template: "<div class=\"devui-canlender-panel\">\n  <cdk-virtual-scroll-viewport #scrollList [itemSize]=\"30\" class=\"devui-canlender-panel-year-list\" minBufferPx=\"400\" maxBufferPx=\"600\">\n    <div\n      class=\"devui-canlender-panel-year-list-item\"\n      [ngClass]=\"{ 'title-active': item.active }\"\n      *cdkVirtualFor=\"let item of yearAndMonthList; let index = index\"\n    >\n      <p class=\"devui-year-title\" *ngIf=\"!item.isMonth && !isListCollopse\" (click)=\"toggleListCollopse()\">{{ item.year }}</p>\n      <p class=\"devui-year-title\" *ngIf=\"!item.isMonth && isListCollopse\" (click)=\"selectMonth(item.year, 0)\">{{ item.year }}</p>\n      <p class=\"devui-month-title\" *ngIf=\"item.isMonth\" (click)=\"selectMonth(item.year, item.month)\">\n        {{ i18nText.monthsOfYear[item.month] }}\n      </p>\n    </div>\n  </cdk-virtual-scroll-viewport>\n\n  <div class=\"devui-canlender-panel-main\">\n    <table class=\"devui-table\">\n      <thead>\n        <tr class=\"small text-center devui-week-header\">\n          <td *ngFor=\"let item of i18nText?.daysOfWeek\">{{ item }}</td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td colspan=\"7\">\n            <cdk-virtual-scroll-viewport\n              #scrollBody\n              [itemSize]=\"calendarItemSize\"\n              class=\"devui-tbody-wrapper\"\n              minBufferPx=\"400\"\n              maxBufferPx=\"600\"\n            >\n              <div *cdkVirtualFor=\"let month of allMonthList; let index = index\">\n                <p class=\"devui-table-month-title\">{{ i18nText?.getYearMonthStr(month.year, month.month + 1) }}</p>\n                <table\n                  class=\"devui-month-table\"\n                  [ngClass]=\"{\n                    'devui-single-date': isSingleDate()\n                  }\"\n                  (mouseleave)=\"curHoverDate = null; curWeekHoverDate = null\"\n                >\n                  <tbody>\n                    <tr class=\"small text-center devui-week-header\" *ngFor=\"let week of month.displayWeeks\">\n                      <td\n                        [ngClass]=\"{\n                          'devui-table-date': day.inMonth,\n                          'devui-table-date-selected': isDateActive(day.date),\n                          'devui-table-date-abandon-selected': isDateAbandon(day.date),\n                          'devui-table-date-today': day.isToday,\n                          'devui-table-date-disable': isDisabled(day.date),\n                          'devui-table-date-inrange': isDateInRange(day.date),\n                          'devui-table-date-start': isStartDate(day.date),\n                          'devui-table-date-end': isEndDate(day.date),\n                          'devui-table-date-in-selected-range': isDateInSelectRange(day.date),\n                          'devui-table-date-active-type': isActiveTypeDate(day.date),\n                          'devui-table-date-suggested': isDateSuggest(day.date),\n                          'devui-table-date-marked': isDateMarked(day.date)\n                        }\"\n                        *ngFor=\"let day of week\"\n                        dPopover\n                        [content]=\"markDate\"\n                        [visible]=\"isDateMarked(day.date) && curHoverDate === day.date && !!markDateTemplate\"\n                        (click)=\"selectDate(day)\"\n                        (mouseenter)=\"setHoverTarget(day.date, day.inMonth)\"\n                      >\n                        <span>{{ day.inMonth ? day.day : '' }}</span>\n                        <ng-template #markDate>\n                          <ng-template [ngTemplateOutlet]=\"markDateTemplate\" [ngTemplateOutletContext]=\"{ date: day.date }\"></ng-template>\n                        </ng-template>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </cdk-virtual-scroll-viewport>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n", styles: [".devui-canlender-panel{text-align:center;font-size:0}.devui-canlender-panel-collopse-button{position:absolute;top:0;left:60px;font-size:16px;z-index:10;cursor:pointer;color:#71757f;color:var(--devui-aide-text, #71757f)}.devui-canlender-panel-year-list{padding:8px 0;display:inline-block;width:80px;height:305px;overflow:auto;-ms-overflow-style:none;scrollbar-width:none}.devui-canlender-panel-year-list::-webkit-scrollbar{width:0!important}.devui-canlender-panel-year-list-item{background-color:#f8f8fa;background-color:var(--devui-global-bg, #f8f8fa)}.devui-canlender-panel-year-list-item .devui-year-title{font-size:14px;font-weight:700;line-height:30px;cursor:pointer}.devui-canlender-panel-year-list-item .devui-month-title{font-size:12px;line-height:30px;cursor:pointer}.devui-canlender-panel-year-list-item.title-active{background-color:#fff;background-color:var(--devui-base-bg, #ffffff)}.devui-canlender-panel-year-list-item:hover:not(.title-active){background-color:#f2f5fc;background-color:var(--devui-list-item-selected-bg, #f2f5fc)}.devui-canlender-panel-main{width:249px;height:305px;padding:4px;display:inline-block;font-size:12px}.devui-tbody-wrapper{height:270px;width:100%;overflow-x:hidden;-ms-overflow-style:none;scrollbar-width:none}.devui-tbody-wrapper::-webkit-scrollbar{width:0!important}.devui-table{border-spacing:0}.devui-table .devui-week-header td{width:34px;height:22px}.devui-table .devui-table-month-title{text-align:start;line-height:26px;color:#71757f;color:var(--devui-aide-text, #71757f);padding-left:8px}.devui-table .devui-month-table{color:#252b3a;color:var(--devui-text, #252b3a);border-spacing:0 4px;border-collapse:separate}.devui-table .devui-month-table .devui-table-date{padding:0 4px;width:30px}.devui-table .devui-month-table .devui-table-date span{cursor:pointer;display:block;width:22px;height:22px;line-height:22px;border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}.devui-table .devui-month-table .devui-table-date:not(.devui-table-date-disable):not(.devui-table-date-selected):hover span{background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3)}.devui-table .devui-month-table .devui-table-date.devui-table-date-today span{color:#5e7ce0;color:var(--devui-brand, #5e7ce0)}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected{position:relative}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected span{background:#f2f5fc;background:var(--devui-list-item-active-bg, #f2f5fc);color:#252b3a;color:var(--devui-list-item-active-text, #252b3a)}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected span:hover{box-shadow:none;border-color:transparent}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected.devui-table-date-abandon-selected span{background:#beccfa;background:var(--devui-primary-disabled, #beccfa)}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected.devui-table-date-active-type:not(.devui-table-date-abandon-selected) span{-webkit-animation:2s ease 0s infinite normal both breath-animation;animation:2s ease 0s infinite normal both breath-animation;position:absolute;top:0;right:7px;z-index:2}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected.devui-table-date-active-type.devui-table-date-end:not(.devui-table-date-abandon-selected) span{right:8px}@-webkit-keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}@keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}.devui-table .devui-month-table .devui-table-date.devui-table-date-inrange{background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3)}.devui-table .devui-month-table .devui-table-date.devui-table-date-inrange span:hover{background-color:#e9edfa;background-color:var(--devui-range-item-hover-bg, #e9edfa)}.devui-table .devui-month-table .devui-table-date.devui-table-date-start:not(.devui-table-date-end){position:relative}.devui-table .devui-month-table .devui-table-date.devui-table-date-start:not(.devui-table-date-end):after{content:\"\";display:block;position:absolute;width:8px;height:22px;background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);right:0;top:0}.devui-table .devui-month-table .devui-table-date.devui-table-date-start:not(.devui-table-date-end):not(:hover):not(.devui-table-date-selected):after{display:none}.devui-table .devui-month-table .devui-table-date.devui-table-date-start:not(.devui-table-date-end) span{border-radius:4px 0 0 4px;border-radius:var(--devui-border-radius-feedback, 4px) 0 0 var(--devui-border-radius-feedback, 4px)}.devui-table .devui-month-table .devui-table-date.devui-table-date-end:not(.devui-table-date-start){position:relative}.devui-table .devui-month-table .devui-table-date.devui-table-date-end:not(.devui-table-date-start):after{content:\"\";display:block;position:absolute;width:5px;height:22px;background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);left:0;top:0}.devui-table .devui-month-table .devui-table-date.devui-table-date-end:not(.devui-table-date-start) span{border-radius:0 4px 4px 0;border-radius:0 var(--devui-border-radius-feedback, 4px) var(--devui-border-radius-feedback, 4px) 0}.devui-table .devui-month-table .devui-table-date.devui-table-date-in-selected-range:not(.devui-table-date-inrange):not(:hover){background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5)}.devui-table .devui-month-table .devui-table-date.devui-table-date-disable span{cursor:not-allowed;color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-table .devui-month-table .devui-table-date.devui-table-date-disable span:hover{box-shadow:none;border-color:transparent}.devui-table .devui-month-table .devui-table-date.devui-table-date-marked span{position:relative}.devui-table .devui-month-table .devui-table-date.devui-table-date-marked span:after{content:\"\";display:block;position:absolute;right:9px;bottom:2px;width:3px;height:3px;border-radius:50%;background-color:#f2f5fc;background-color:var(--devui-list-item-active-bg, #f2f5fc)}.devui-table .devui-month-table .devui-table-date.devui-table-date-marked.devui-table-date-selected span:after{background-color:#252b3a;background-color:var(--devui-list-item-active-text, #252b3a)}.devui-table .devui-month-table .devui-table-date.devui-table-date-suggested{border-bottom:1px solid #beccfa;border-bottom:1px solid var(--devui-link-light-active, #beccfa)}.devui-table .devui-month-table.devui-single-date .devui-table-date.devui-table-date-start:after{display:none}.devui-table .devui-month-table.devui-single-date .devui-table-date.devui-table-date-end:after{display:none}.devui-table .devui-tbody-wrapper{transform:none}:host{display:inline-block}\n"], components: [{ type: i3.CdkVirtualScrollViewport, selector: "cdk-virtual-scroll-viewport", inputs: ["orientation", "appendOnly"], outputs: ["scrolledIndexChange"] }], directives: [{ type: i3.CdkFixedSizeVirtualScroll, selector: "cdk-virtual-scroll-viewport[itemSize]", inputs: ["itemSize", "minBufferPx", "maxBufferPx"] }, { type: i3.CdkVirtualForOf, selector: "[cdkVirtualFor][cdkVirtualForOf]", inputs: ["cdkVirtualForOf", "cdkVirtualForTrackBy", "cdkVirtualForTemplate", "cdkVirtualForTemplateCacheSize"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.PopoverDirective, selector: "[dPopover]", inputs: ["content", "controlled", "position", "showAnimation", "showAnimate", "scrollElement", "appendToBody", "zIndex", "popType", "popMaxWidth", "trigger", "hoverToContent", "hoverDelayTime", "popoverStyle", "mouseEnterDelay", "mouseLeaveDelay", "visible"], exportAs: ["dPopover"] }, { type: i4.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: CalendarPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-calendar-panel', preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"devui-canlender-panel\">\n  <cdk-virtual-scroll-viewport #scrollList [itemSize]=\"30\" class=\"devui-canlender-panel-year-list\" minBufferPx=\"400\" maxBufferPx=\"600\">\n    <div\n      class=\"devui-canlender-panel-year-list-item\"\n      [ngClass]=\"{ 'title-active': item.active }\"\n      *cdkVirtualFor=\"let item of yearAndMonthList; let index = index\"\n    >\n      <p class=\"devui-year-title\" *ngIf=\"!item.isMonth && !isListCollopse\" (click)=\"toggleListCollopse()\">{{ item.year }}</p>\n      <p class=\"devui-year-title\" *ngIf=\"!item.isMonth && isListCollopse\" (click)=\"selectMonth(item.year, 0)\">{{ item.year }}</p>\n      <p class=\"devui-month-title\" *ngIf=\"item.isMonth\" (click)=\"selectMonth(item.year, item.month)\">\n        {{ i18nText.monthsOfYear[item.month] }}\n      </p>\n    </div>\n  </cdk-virtual-scroll-viewport>\n\n  <div class=\"devui-canlender-panel-main\">\n    <table class=\"devui-table\">\n      <thead>\n        <tr class=\"small text-center devui-week-header\">\n          <td *ngFor=\"let item of i18nText?.daysOfWeek\">{{ item }}</td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td colspan=\"7\">\n            <cdk-virtual-scroll-viewport\n              #scrollBody\n              [itemSize]=\"calendarItemSize\"\n              class=\"devui-tbody-wrapper\"\n              minBufferPx=\"400\"\n              maxBufferPx=\"600\"\n            >\n              <div *cdkVirtualFor=\"let month of allMonthList; let index = index\">\n                <p class=\"devui-table-month-title\">{{ i18nText?.getYearMonthStr(month.year, month.month + 1) }}</p>\n                <table\n                  class=\"devui-month-table\"\n                  [ngClass]=\"{\n                    'devui-single-date': isSingleDate()\n                  }\"\n                  (mouseleave)=\"curHoverDate = null; curWeekHoverDate = null\"\n                >\n                  <tbody>\n                    <tr class=\"small text-center devui-week-header\" *ngFor=\"let week of month.displayWeeks\">\n                      <td\n                        [ngClass]=\"{\n                          'devui-table-date': day.inMonth,\n                          'devui-table-date-selected': isDateActive(day.date),\n                          'devui-table-date-abandon-selected': isDateAbandon(day.date),\n                          'devui-table-date-today': day.isToday,\n                          'devui-table-date-disable': isDisabled(day.date),\n                          'devui-table-date-inrange': isDateInRange(day.date),\n                          'devui-table-date-start': isStartDate(day.date),\n                          'devui-table-date-end': isEndDate(day.date),\n                          'devui-table-date-in-selected-range': isDateInSelectRange(day.date),\n                          'devui-table-date-active-type': isActiveTypeDate(day.date),\n                          'devui-table-date-suggested': isDateSuggest(day.date),\n                          'devui-table-date-marked': isDateMarked(day.date)\n                        }\"\n                        *ngFor=\"let day of week\"\n                        dPopover\n                        [content]=\"markDate\"\n                        [visible]=\"isDateMarked(day.date) && curHoverDate === day.date && !!markDateTemplate\"\n                        (click)=\"selectDate(day)\"\n                        (mouseenter)=\"setHoverTarget(day.date, day.inMonth)\"\n                      >\n                        <span>{{ day.inMonth ? day.day : '' }}</span>\n                        <ng-template #markDate>\n                          <ng-template [ngTemplateOutlet]=\"markDateTemplate\" [ngTemplateOutletContext]=\"{ date: day.date }\"></ng-template>\n                        </ng-template>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </cdk-virtual-scroll-viewport>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n", styles: [".devui-canlender-panel{text-align:center;font-size:0}.devui-canlender-panel-collopse-button{position:absolute;top:0;left:60px;font-size:16px;z-index:10;cursor:pointer;color:#71757f;color:var(--devui-aide-text, #71757f)}.devui-canlender-panel-year-list{padding:8px 0;display:inline-block;width:80px;height:305px;overflow:auto;-ms-overflow-style:none;scrollbar-width:none}.devui-canlender-panel-year-list::-webkit-scrollbar{width:0!important}.devui-canlender-panel-year-list-item{background-color:#f8f8fa;background-color:var(--devui-global-bg, #f8f8fa)}.devui-canlender-panel-year-list-item .devui-year-title{font-size:14px;font-weight:700;line-height:30px;cursor:pointer}.devui-canlender-panel-year-list-item .devui-month-title{font-size:12px;line-height:30px;cursor:pointer}.devui-canlender-panel-year-list-item.title-active{background-color:#fff;background-color:var(--devui-base-bg, #ffffff)}.devui-canlender-panel-year-list-item:hover:not(.title-active){background-color:#f2f5fc;background-color:var(--devui-list-item-selected-bg, #f2f5fc)}.devui-canlender-panel-main{width:249px;height:305px;padding:4px;display:inline-block;font-size:12px}.devui-tbody-wrapper{height:270px;width:100%;overflow-x:hidden;-ms-overflow-style:none;scrollbar-width:none}.devui-tbody-wrapper::-webkit-scrollbar{width:0!important}.devui-table{border-spacing:0}.devui-table .devui-week-header td{width:34px;height:22px}.devui-table .devui-table-month-title{text-align:start;line-height:26px;color:#71757f;color:var(--devui-aide-text, #71757f);padding-left:8px}.devui-table .devui-month-table{color:#252b3a;color:var(--devui-text, #252b3a);border-spacing:0 4px;border-collapse:separate}.devui-table .devui-month-table .devui-table-date{padding:0 4px;width:30px}.devui-table .devui-month-table .devui-table-date span{cursor:pointer;display:block;width:22px;height:22px;line-height:22px;border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}.devui-table .devui-month-table .devui-table-date:not(.devui-table-date-disable):not(.devui-table-date-selected):hover span{background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3)}.devui-table .devui-month-table .devui-table-date.devui-table-date-today span{color:#5e7ce0;color:var(--devui-brand, #5e7ce0)}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected{position:relative}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected span{background:#f2f5fc;background:var(--devui-list-item-active-bg, #f2f5fc);color:#252b3a;color:var(--devui-list-item-active-text, #252b3a)}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected span:hover{box-shadow:none;border-color:transparent}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected.devui-table-date-abandon-selected span{background:#beccfa;background:var(--devui-primary-disabled, #beccfa)}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected.devui-table-date-active-type:not(.devui-table-date-abandon-selected) span{-webkit-animation:2s ease 0s infinite normal both breath-animation;animation:2s ease 0s infinite normal both breath-animation;position:absolute;top:0;right:7px;z-index:2}.devui-table .devui-month-table .devui-table-date.devui-table-date-selected.devui-table-date-active-type.devui-table-date-end:not(.devui-table-date-abandon-selected) span{right:8px}@-webkit-keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}@keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}.devui-table .devui-month-table .devui-table-date.devui-table-date-inrange{background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3)}.devui-table .devui-month-table .devui-table-date.devui-table-date-inrange span:hover{background-color:#e9edfa;background-color:var(--devui-range-item-hover-bg, #e9edfa)}.devui-table .devui-month-table .devui-table-date.devui-table-date-start:not(.devui-table-date-end){position:relative}.devui-table .devui-month-table .devui-table-date.devui-table-date-start:not(.devui-table-date-end):after{content:\"\";display:block;position:absolute;width:8px;height:22px;background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);right:0;top:0}.devui-table .devui-month-table .devui-table-date.devui-table-date-start:not(.devui-table-date-end):not(:hover):not(.devui-table-date-selected):after{display:none}.devui-table .devui-month-table .devui-table-date.devui-table-date-start:not(.devui-table-date-end) span{border-radius:4px 0 0 4px;border-radius:var(--devui-border-radius-feedback, 4px) 0 0 var(--devui-border-radius-feedback, 4px)}.devui-table .devui-month-table .devui-table-date.devui-table-date-end:not(.devui-table-date-start){position:relative}.devui-table .devui-month-table .devui-table-date.devui-table-date-end:not(.devui-table-date-start):after{content:\"\";display:block;position:absolute;width:5px;height:22px;background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);left:0;top:0}.devui-table .devui-month-table .devui-table-date.devui-table-date-end:not(.devui-table-date-start) span{border-radius:0 4px 4px 0;border-radius:0 var(--devui-border-radius-feedback, 4px) var(--devui-border-radius-feedback, 4px) 0}.devui-table .devui-month-table .devui-table-date.devui-table-date-in-selected-range:not(.devui-table-date-inrange):not(:hover){background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5)}.devui-table .devui-month-table .devui-table-date.devui-table-date-disable span{cursor:not-allowed;color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-table .devui-month-table .devui-table-date.devui-table-date-disable span:hover{box-shadow:none;border-color:transparent}.devui-table .devui-month-table .devui-table-date.devui-table-date-marked span{position:relative}.devui-table .devui-month-table .devui-table-date.devui-table-date-marked span:after{content:\"\";display:block;position:absolute;right:9px;bottom:2px;width:3px;height:3px;border-radius:50%;background-color:#f2f5fc;background-color:var(--devui-list-item-active-bg, #f2f5fc)}.devui-table .devui-month-table .devui-table-date.devui-table-date-marked.devui-table-date-selected span:after{background-color:#252b3a;background-color:var(--devui-list-item-active-text, #252b3a)}.devui-table .devui-month-table .devui-table-date.devui-table-date-suggested{border-bottom:1px solid #beccfa;border-bottom:1px solid var(--devui-link-light-active, #beccfa)}.devui-table .devui-month-table.devui-single-date .devui-table-date.devui-table-date-start:after{display:none}.devui-table .devui-month-table.devui-single-date .devui-table-date.devui-table-date-end:after{display:none}.devui-table .devui-tbody-wrapper{transform:none}:host{display:inline-block}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.I18nService }, { type: i2.DatepickerProService }, { type: i2.DatepickerProCommonDataService }, { type: i0.ChangeDetectorRef }, { type: i3.ScrollDispatcher }]; }, propDecorators: { scrollBodyCmp: [{
                type: ViewChild,
                args: ['scrollBody']
            }], scrollListCmp: [{
                type: ViewChild,
                args: ['scrollList']
            }], isRangeType: [{
                type: Input
            }], isWeekSelect: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,