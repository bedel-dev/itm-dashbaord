import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewChild } from '@angular/core';
import { chunk } from 'lodash-es';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { DatepickerProService } from '../datepicker-pro.service';
import * as i0 from "@angular/core";
import * as i1 from "../datepicker-pro.service";
import * as i2 from "@angular/cdk/scrolling";
import * as i3 from "@angular/common";
export class YearPanelComponent {
    constructor(cdr, pickerSrv) {
        this.cdr = cdr;
        this.pickerSrv = pickerSrv;
        this.isRangeType = false;
        this.yearList = [];
        this.unsubscribe$ = new Subject();
    }
    get curHoverDate() {
        return this.pickerSrv.curHoverDate;
    }
    set curHoverDate(value) {
        this.pickerSrv.curHoverDate = value;
    }
    get currentDate() {
        if (this.isRangeType) {
            if (this.pickerSrv.currentActiveInput === 'start') {
                return this.pickerSrv.curRangeDate[0];
            }
            else if (this.pickerSrv.currentActiveInput === 'end') {
                return this.pickerSrv.curRangeDate[1];
            }
        }
        else {
            return this.pickerSrv.curDate;
        }
    }
    set currentDate(value) {
        if (this.isRangeType) {
            if (this.pickerSrv.currentActiveInput === 'start') {
                this.pickerSrv.curRangeDate[0] = value;
            }
            else if (this.pickerSrv.currentActiveInput === 'end') {
                this.pickerSrv.curRangeDate[1] = value;
            }
        }
        else {
            this.pickerSrv.curDate = value;
        }
    }
    ngOnInit() {
        this.initYearList();
        this.initObservable();
    }
    initObservable() {
        this.pickerSrv.toggleEvent.subscribe(isOpen => {
            if (isOpen) {
                setTimeout(() => {
                    this.goToYear(this.currentDate || new Date());
                });
            }
        });
        this.pickerSrv.updateDateValue.pipe(takeUntil(this.unsubscribe$)).subscribe(res => {
            if (res.type === 'range') {
                this.pickerSrv.curRangeDate = res.value;
            }
            else {
                this.pickerSrv.curDate = res.value;
            }
            this.goToYear(this.currentDate || new Date());
        });
        this.pickerSrv.activeInputChange.pipe(takeUntil(this.unsubscribe$)).subscribe(type => {
            if (type === 'start') {
                this.goToYear(this.pickerSrv.curRangeDate[0] || this.pickerSrv.curRangeDate[1] || new Date());
            }
            else {
                this.goToYear(this.pickerSrv.curRangeDate[1] || this.pickerSrv.curRangeDate[0] || new Date());
            }
        });
    }
    initYearList() {
        const list = new Array(this.pickerSrv.calendarRange[1] - this.pickerSrv.calendarRange[0] + 1).fill(1).map((t, i) => {
            return i + this.pickerSrv.calendarRange[0];
        });
        this.yearList = chunk(list, 3);
    }
    goToYear(date) {
        if (date) {
            const index = Math.floor((date.getFullYear() - this.pickerSrv.calendarRange[0]) / 3);
            this.scrollListCmp.scrollToIndex(index - 1);
        }
        this.cdr.detectChanges();
    }
    isThisYear(yearIndex) {
        return yearIndex === new Date().getFullYear();
    }
    isActiveYear(yearIndex) {
        return this.pickerSrv.isYearActive(yearIndex);
    }
    isStartDate(yearIndex) {
        if (!this.isRangeType) {
            return false;
        }
        const date = new Date(yearIndex, 0, 1);
        return this.pickerSrv.isStartDate(date);
    }
    isEndDate(yearIndex) {
        if (!this.isRangeType) {
            return false;
        }
        const date = new Date(yearIndex, 0, 1);
        return this.pickerSrv.isEndDate(date);
    }
    isDateAbandon(yearIndex) {
        if (!this.isRangeType || (!this.pickerSrv.curRangeDate[0] || !this.pickerSrv.curRangeDate[1])) {
            return false;
        }
        const date = new Date(yearIndex, 0, 1);
        return this.pickerSrv.isDateAbandon(date);
    }
    isActiveTypeDate(yearIndex) {
        if (!this.isRangeType) {
            return false;
        }
        const date = new Date(yearIndex, 0, 1);
        return this.pickerSrv.isActiveInputTypeDate(date);
    }
    isDateInRange(yearIndex) {
        const date = new Date(yearIndex, 0, 1);
        return this.pickerSrv.isDateInRange(date);
    }
    isDateInSelectRange(yearIndex) {
        if (!this.isRangeType) {
            return false;
        }
        const date = new Date(yearIndex, 0, 1);
        return this.pickerSrv.isDateInSelectRange(date);
    }
    selectYear(yearIndex) {
        if (this.isDisable(yearIndex)) {
            return;
        }
        this.currentDate = new Date(yearIndex, 0, 1);
        if (this.isRangeType) {
            this.pickerSrv.fixRangeDate();
        }
        // 非时间模式下选完开始日期跳转到结束日期
        if (this.isRangeType) {
            if (this.pickerSrv.currentActiveInput === 'start') {
                this.pickerSrv.currentActiveInput = 'end';
            }
            else if (this.pickerSrv.currentActiveInput === 'end' && !this.pickerSrv.curRangeDate[0]) {
                this.pickerSrv.currentActiveInput = 'start';
            }
            else {
                this.pickerSrv.closeDropdownEvent.next();
            }
        }
        this.pickerSrv.selectedDateChange.next({
            type: this.isRangeType ? 'range' : 'single',
            value: this.isRangeType ? this.pickerSrv.curRangeDate : this.currentDate
        });
        if (this.pickerSrv.closeAfterSelected) {
            this.pickerSrv.closeDropdownEvent.next();
        }
    }
    isDisable(yearIndex) {
        const date = new Date(yearIndex, 0, 1);
        return this.pickerSrv.maxDate.getTime() < date.getTime() || this.pickerSrv.minDate.getTime() > date.getTime();
    }
    setHoverTarget(yearIndex) {
        const date = new Date(yearIndex, 0, 1);
        if (this.isRangeType && !this.isDisable(yearIndex)) {
            this.curHoverDate = date;
        }
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
}
YearPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: YearPanelComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DatepickerProService }], target: i0.ɵɵFactoryTarget.Component });
YearPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: YearPanelComponent, selector: "d-year-panel", inputs: { isRangeType: "isRangeType" }, viewQueries: [{ propertyName: "scrollListCmp", first: true, predicate: ["scrollList"], descendants: true }], ngImport: i0, template: "<div class=\"year-list-panel\" (mouseleave)=\"curHoverDate = null\">\n  <cdk-virtual-scroll-viewport #scrollList [itemSize]=\"48\" class=\"devui-year-list\" minBufferPx=\"400\" maxBufferPx=\"600\">\n    <div class=\"devui-year-list-item\" *cdkVirtualFor=\"let years of yearList; let index = index\">\n      <p\n        class=\"devui-year-title\"\n        [ngClass]=\"{\n          'devui-this-year': isThisYear(year),\n          'devui-active-year': isActiveYear(year),\n          'devui-disabled': isDisable(year),\n          'devui-table-date-inrange': isDateInRange(year),\n          'devui-table-date-start': isStartDate(year),\n          'devui-table-date-end': isEndDate(year),\n          'devui-table-date-abandon-selected': isDateAbandon(year),\n          'devui-table-date-in-selected-range': isDateInSelectRange(year),\n          'devui-table-date-active-type': isActiveTypeDate(year)\n        }\"\n        (click)=\"selectYear(year)\"\n        (mouseenter)=\"setHoverTarget(year)\"\n        *ngFor=\"let year of years\"\n      >\n        {{ year }}\n      </p>\n    </div>\n  </cdk-virtual-scroll-viewport>\n</div>\n", styles: [".year-list-panel{width:204px;height:200px;padding:8px 12px}.year-list-panel .devui-year-list{width:184px;height:186px;scrollbar-width:none}.year-list-panel .devui-year-list::-webkit-scrollbar{width:0}.year-list-panel .devui-year-list:hover{overflow-y:overlay;scrollbar-width:thin}.year-list-panel .devui-year-list:hover::-webkit-scrollbar{width:4px}.year-list-panel .devui-year-list .devui-year-list-item{padding:4px 0;height:48px}.year-list-panel .devui-year-list .devui-year-title{width:60px;height:40px;float:left;font-size:12px;display:block;text-align:center;line-height:40px;cursor:pointer;border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}.year-list-panel .devui-year-list .devui-year-title:hover:not(.devui-active-year):not(.devui-disabled){background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3)}.year-list-panel .devui-year-list .devui-year-title.devui-this-year{color:#5e7ce0;color:var(--devui-brand, #5e7ce0)}.year-list-panel .devui-year-list .devui-year-title.devui-active-year{background:#f2f5fc;background:var(--devui-list-item-active-bg, #f2f5fc);color:#252b3a;color:var(--devui-list-item-active-text, #252b3a)}.year-list-panel .devui-year-list .devui-year-title.devui-active-year.devui-table-date-abandon-selected{background:#beccfa;background:var(--devui-primary-disabled, #beccfa)}.year-list-panel .devui-year-list .devui-year-title.devui-table-date-inrange:not(.devui-active-year){background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);border-radius:0}.year-list-panel .devui-year-list .devui-year-title.devui-table-date-start:not(.devui-table-date-end){border-radius:4px 0 0 4px;border-radius:var(--devui-border-radius-feedback, 4px) 0 0 var(--devui-border-radius-feedback, 4px)}.year-list-panel .devui-year-list .devui-year-title.devui-table-date-end:not(.devui-table-date-start){border-radius:0 4px 4px 0;border-radius:0 var(--devui-border-radius-feedback, 4px) var(--devui-border-radius-feedback, 4px) 0}.year-list-panel .devui-year-list .devui-year-title.devui-table-date-in-selected-range:not(.devui-table-date-inrange):not(:hover){background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-radius:0}.year-list-panel .devui-year-list .devui-year-title.devui-table-date-active-type:not(.devui-table-date-abandon-selected){-webkit-animation:2s ease 0s infinite normal both breath-animation;animation:2s ease 0s infinite normal both breath-animation}@-webkit-keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}@keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}.year-list-panel .devui-year-list .devui-year-title.devui-disabled{border-radius:0;cursor:not-allowed}.year-list-panel .devui-year-list .devui-year-title.devui-disabled:first-of-type{border-radius:4px 0 0 4px;border-radius:var(--devui-border-radius-feedback, 4px) 0 0 var(--devui-border-radius-feedback, 4px)}.year-list-panel .devui-year-list .devui-year-title.devui-disabled:last-of-type{border-radius:0 4px 4px 0;border-radius:0 var(--devui-border-radius-feedback, 4px) var(--devui-border-radius-feedback, 4px) 0}\n"], components: [{ type: i2.CdkVirtualScrollViewport, selector: "cdk-virtual-scroll-viewport", inputs: ["orientation", "appendOnly"], outputs: ["scrolledIndexChange"] }], directives: [{ type: i2.CdkFixedSizeVirtualScroll, selector: "cdk-virtual-scroll-viewport[itemSize]", inputs: ["itemSize", "minBufferPx", "maxBufferPx"] }, { type: i2.CdkVirtualForOf, selector: "[cdkVirtualFor][cdkVirtualForOf]", inputs: ["cdkVirtualForOf", "cdkVirtualForTrackBy", "cdkVirtualForTemplate", "cdkVirtualForTemplateCacheSize"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: YearPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-year-panel', preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"year-list-panel\" (mouseleave)=\"curHoverDate = null\">\n  <cdk-virtual-scroll-viewport #scrollList [itemSize]=\"48\" class=\"devui-year-list\" minBufferPx=\"400\" maxBufferPx=\"600\">\n    <div class=\"devui-year-list-item\" *cdkVirtualFor=\"let years of yearList; let index = index\">\n      <p\n        class=\"devui-year-title\"\n        [ngClass]=\"{\n          'devui-this-year': isThisYear(year),\n          'devui-active-year': isActiveYear(year),\n          'devui-disabled': isDisable(year),\n          'devui-table-date-inrange': isDateInRange(year),\n          'devui-table-date-start': isStartDate(year),\n          'devui-table-date-end': isEndDate(year),\n          'devui-table-date-abandon-selected': isDateAbandon(year),\n          'devui-table-date-in-selected-range': isDateInSelectRange(year),\n          'devui-table-date-active-type': isActiveTypeDate(year)\n        }\"\n        (click)=\"selectYear(year)\"\n        (mouseenter)=\"setHoverTarget(year)\"\n        *ngFor=\"let year of years\"\n      >\n        {{ year }}\n      </p>\n    </div>\n  </cdk-virtual-scroll-viewport>\n</div>\n", styles: [".year-list-panel{width:204px;height:200px;padding:8px 12px}.year-list-panel .devui-year-list{width:184px;height:186px;scrollbar-width:none}.year-list-panel .devui-year-list::-webkit-scrollbar{width:0}.year-list-panel .devui-year-list:hover{overflow-y:overlay;scrollbar-width:thin}.year-list-panel .devui-year-list:hover::-webkit-scrollbar{width:4px}.year-list-panel .devui-year-list .devui-year-list-item{padding:4px 0;height:48px}.year-list-panel .devui-year-list .devui-year-title{width:60px;height:40px;float:left;font-size:12px;display:block;text-align:center;line-height:40px;cursor:pointer;border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}.year-list-panel .devui-year-list .devui-year-title:hover:not(.devui-active-year):not(.devui-disabled){background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3)}.year-list-panel .devui-year-list .devui-year-title.devui-this-year{color:#5e7ce0;color:var(--devui-brand, #5e7ce0)}.year-list-panel .devui-year-list .devui-year-title.devui-active-year{background:#f2f5fc;background:var(--devui-list-item-active-bg, #f2f5fc);color:#252b3a;color:var(--devui-list-item-active-text, #252b3a)}.year-list-panel .devui-year-list .devui-year-title.devui-active-year.devui-table-date-abandon-selected{background:#beccfa;background:var(--devui-primary-disabled, #beccfa)}.year-list-panel .devui-year-list .devui-year-title.devui-table-date-inrange:not(.devui-active-year){background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);border-radius:0}.year-list-panel .devui-year-list .devui-year-title.devui-table-date-start:not(.devui-table-date-end){border-radius:4px 0 0 4px;border-radius:var(--devui-border-radius-feedback, 4px) 0 0 var(--devui-border-radius-feedback, 4px)}.year-list-panel .devui-year-list .devui-year-title.devui-table-date-end:not(.devui-table-date-start){border-radius:0 4px 4px 0;border-radius:0 var(--devui-border-radius-feedback, 4px) var(--devui-border-radius-feedback, 4px) 0}.year-list-panel .devui-year-list .devui-year-title.devui-table-date-in-selected-range:not(.devui-table-date-inrange):not(:hover){background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-radius:0}.year-list-panel .devui-year-list .devui-year-title.devui-table-date-active-type:not(.devui-table-date-abandon-selected){-webkit-animation:2s ease 0s infinite normal both breath-animation;animation:2s ease 0s infinite normal both breath-animation}@-webkit-keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}@keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}.year-list-panel .devui-year-list .devui-year-title.devui-disabled{border-radius:0;cursor:not-allowed}.year-list-panel .devui-year-list .devui-year-title.devui-disabled:first-of-type{border-radius:4px 0 0 4px;border-radius:var(--devui-border-radius-feedback, 4px) 0 0 var(--devui-border-radius-feedback, 4px)}.year-list-panel .devui-year-list .devui-year-title.devui-disabled:last-of-type{border-radius:0 4px 4px 0;border-radius:0 var(--devui-border-radius-feedback, 4px) var(--devui-border-radius-feedback, 4px) 0}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DatepickerProService }]; }, propDecorators: { scrollListCmp: [{
                type: ViewChild,
                args: ['scrollList']
            }], isRangeType: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,