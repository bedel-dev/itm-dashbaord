import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewChild } from '@angular/core';
import { I18nService } from 'ng-devui/i18n';
import { fromEvent, Subject } from 'rxjs';
import { debounceTime, takeUntil } from 'rxjs/operators';
import { DatepickerProService } from './../datepicker-pro.service';
import * as i0 from "@angular/core";
import * as i1 from "ng-devui/i18n";
import * as i2 from "./../datepicker-pro.service";
import * as i3 from "@angular/cdk/scrolling";
import * as i4 from "@angular/common";
export class MonthPanelComponent {
    constructor(i18n, pickerSrv, cdr) {
        this.i18n = i18n;
        this.pickerSrv = pickerSrv;
        this.cdr = cdr;
        this.isRangeType = false;
        this.unsubscribe$ = new Subject();
        this.yearList = [];
        this.calenderItemSize = 186;
        this.monthList = [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9],
            [10, 11, 12]
        ];
    }
    get curHoverDate() {
        return this.pickerSrv.curHoverDate;
    }
    set curHoverDate(value) {
        this.pickerSrv.curHoverDate = value;
    }
    get selectedRangeDate() {
        return this.pickerSrv.curRangeDate;
    }
    set selectedRangeDate(dateList) {
        this.pickerSrv.curRangeDate = dateList;
    }
    get currentDate() {
        if (this.isRangeType) {
            if (this.pickerSrv.currentActiveInput === 'start') {
                return this.pickerSrv.curRangeDate[0];
            }
            else if (this.pickerSrv.currentActiveInput === 'end') {
                return this.pickerSrv.curRangeDate[1];
            }
        }
        else {
            return this.pickerSrv.curDate;
        }
    }
    set currentDate(value) {
        if (this.isRangeType) {
            if (this.pickerSrv.currentActiveInput === 'start') {
                this.pickerSrv.curRangeDate[0] = value;
            }
            else if (this.pickerSrv.currentActiveInput === 'end') {
                this.pickerSrv.curRangeDate[1] = value;
            }
        }
        else {
            this.pickerSrv.curDate = value;
        }
    }
    ngOnInit() {
        this.thisMonth = new Date();
        this.initList();
        this.initObservable();
        this.setI18nText();
    }
    setI18nText() {
        this.i18nText = this.i18n.getI18nText().datePickerPro;
        this.i18nSubscription = this.i18n.langChange().subscribe((data) => {
            this.i18nText = data.datePickerPro;
            this.cdr.detectChanges();
        });
    }
    initObservable() {
        this.pickerSrv.toggleEvent.pipe(takeUntil(this.unsubscribe$)).subscribe(isOpen => {
            if (isOpen) {
                setTimeout(() => {
                    this.goToDate(this.currentDate || new Date());
                });
            }
            if (!this.scrollListener) {
                this.initScrollListener();
            }
        });
        this.pickerSrv.updateDateValue.pipe(takeUntil(this.unsubscribe$)).subscribe(res => {
            if (res.type === 'range') {
                this.pickerSrv.curRangeDate = res.value;
            }
            else {
                this.pickerSrv.curDate = res.value;
            }
            this.goToDate(this.currentDate || new Date());
            this.cdr.detectChanges();
        });
        this.pickerSrv.activeInputChange.pipe(takeUntil(this.unsubscribe$)).subscribe(type => {
            if (type === 'start') {
                this.goToDate(this.selectedRangeDate[0] || this.selectedRangeDate[1] || new Date());
            }
            else {
                this.goToDate(this.selectedRangeDate[1] || this.selectedRangeDate[0] || new Date());
            }
        });
    }
    initList() {
        for (let yearIndex = this.pickerSrv.calendarRange[0]; yearIndex <= this.pickerSrv.calendarRange[1]; yearIndex++) {
            this.yearList.push({
                year: yearIndex,
                active: false
            });
        }
    }
    initScrollListener() {
        const scrollEle = this.scrollBodyCmp.getElementRef().nativeElement;
        this.scrollListener = fromEvent(scrollEle, 'mousewheel').pipe(takeUntil(this.unsubscribe$), debounceTime(180) // 滚动动画时间180，延时保证计算位置的准确
        ).subscribe(() => {
            const offsetY = this.scrollBodyCmp.measureScrollOffset();
            // 当面板滚过一半更新面板
            this.currentBodyIndex = Math.floor(offsetY / this.calenderItemSize) + (offsetY % this.calenderItemSize > 100 ? 1 : 0);
            this.goToListByIndex(this.currentBodyIndex);
            this.cdr.detectChanges();
        });
    }
    goToDate(date, scrollBehavior = 'auto') {
        if (date) {
            const index = date.getFullYear() - this.pickerSrv.calendarRange[0];
            this.currentBodyIndex = index;
            this.scrollBodyCmp.scrollToIndex(index, scrollBehavior);
            this.goToListByIndex(index);
        }
    }
    goToListByIndex(index) {
        const indexDelta = Math.abs(this.scrollListCmp.measureScrollOffset() / 30 - index);
        this.scrollListCmp.scrollToIndex(index - 4, indexDelta < 12 ? 'smooth' : 'auto');
    }
    selectMonth(yearIndex, monthIndex) {
        if (this.isDisable(yearIndex, monthIndex)) {
            return;
        }
        this.currentDate = new Date(yearIndex, monthIndex - 1, 1);
        if (this.isRangeType) {
            this.pickerSrv.fixRangeDate();
        }
        // 非时间模式下选完开始日期跳转到结束日期
        if (this.isRangeType) {
            if (this.pickerSrv.currentActiveInput === 'start') {
                this.pickerSrv.currentActiveInput = 'end';
            }
            else if (this.pickerSrv.currentActiveInput === 'end' && !this.selectedRangeDate[0]) {
                this.pickerSrv.currentActiveInput = 'start';
            }
            else {
                this.pickerSrv.closeDropdownEvent.next();
            }
        }
        this.pickerSrv.selectedDateChange.next({
            type: this.isRangeType ? 'range' : 'single',
            value: this.isRangeType ? this.selectedRangeDate : this.currentDate
        });
        if (this.pickerSrv.closeAfterSelected) {
            this.pickerSrv.closeDropdownEvent.next();
        }
    }
    selectYear(yearIndex) {
        const isScroll = (yearIndex - this.pickerSrv.calendarRange[0]) - this.currentBodyIndex < 7;
        this.goToDate(new Date(yearIndex, 0, 1), isScroll ? 'smooth' : 'auto');
    }
    isSelected(yearIndex, monthIndex) {
        return this.pickerSrv.isMonthActive(yearIndex, monthIndex - 1);
    }
    isThisMonth(yearIndex, monthIndex) {
        return this.thisMonth.getFullYear() === yearIndex && this.thisMonth.getMonth() === monthIndex - 1;
    }
    isDateInRange(yearIndex, monthIndex) {
        const date = new Date(yearIndex, monthIndex - 1, 1);
        return this.pickerSrv.isDateInRange(date);
    }
    isDisable(yearIndex, monthIndex) {
        const date = new Date(yearIndex, monthIndex - 1, 1);
        return this.pickerSrv.maxDate.getTime() < date.getTime() || this.pickerSrv.minDate.getTime() > date.getTime();
    }
    isStartDate(yearIndex, monthIndex) {
        if (!this.isRangeType) {
            return false;
        }
        const date = new Date(yearIndex, monthIndex - 1, 1);
        return this.pickerSrv.isStartDate(date);
    }
    isEndDate(yearIndex, monthIndex) {
        if (!this.isRangeType) {
            return false;
        }
        const date = new Date(yearIndex, monthIndex - 1, 1);
        return this.pickerSrv.isEndDate(date);
    }
    isDateAbandon(yearIndex, monthIndex) {
        if (!this.isRangeType || (!this.selectedRangeDate[0] || !this.selectedRangeDate[1])) {
            return false;
        }
        const date = new Date(yearIndex, monthIndex - 1, 1);
        return this.pickerSrv.isDateAbandon(date);
    }
    isDateInSelectRange(yearIndex, monthIndex) {
        if (!this.isRangeType) {
            return false;
        }
        const date = new Date(yearIndex, monthIndex - 1, 1);
        return this.pickerSrv.isDateInSelectRange(date);
    }
    isActiveTypeDate(yearIndex, monthIndex) {
        if (!this.isRangeType) {
            return false;
        }
        const date = new Date(yearIndex, monthIndex - 1, 1);
        return this.pickerSrv.isActiveInputTypeDate(date);
    }
    setHoverTarget(yearIndex, monthIndex) {
        const date = new Date(yearIndex, monthIndex - 1, 1);
        if (this.isRangeType && !this.isDisable(yearIndex, monthIndex)) {
            this.curHoverDate = date;
        }
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
}
MonthPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: MonthPanelComponent, deps: [{ token: i1.I18nService }, { token: i2.DatepickerProService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
MonthPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: MonthPanelComponent, selector: "d-month-panel", inputs: { isRangeType: "isRangeType" }, viewQueries: [{ propertyName: "scrollBodyCmp", first: true, predicate: ["scrollBody"], descendants: true }, { propertyName: "scrollListCmp", first: true, predicate: ["scrollList"], descendants: true }], ngImport: i0, template: "<div class=\"devui-month-panel\">\n  <cdk-virtual-scroll-viewport #scrollList [itemSize]=\"30\" class=\"devui-year-list\" minBufferPx=\"400\" maxBufferPx=\"600\">\n    <div\n      class=\"devui-year-list-item\"\n      [ngClass]=\"{ 'title-active': index === currentBodyIndex }\"\n      *cdkVirtualFor=\"let year of yearList; let index = index\"\n      (click)=\"selectYear(year.year)\"\n    >\n      <p class=\"devui-year-title\">{{ year.year }}</p>\n    </div>\n  </cdk-virtual-scroll-viewport>\n  <div class=\"devui-month-list-wrapper\">\n    <cdk-virtual-scroll-viewport #scrollBody [itemSize]=\"calenderItemSize\" class=\"devui-month-list\" minBufferPx=\"400\" maxBufferPx=\"600\">\n      <div *cdkVirtualFor=\"let year of yearList; let index = index\">\n        <p class=\"devui-table-year-title\">{{ year.year + '\u5E74' }}</p>\n        <table\n          class=\"devui-month-table\"\n          [ngClass]=\"{ 'devui-active-month': index === currentBodyIndex }\"\n          (mouseleave)=\"curHoverDate = null\"\n        >\n          <tbody>\n            <tr *ngFor=\"let season of monthList\">\n              <td\n                *ngFor=\"let month of season\"\n                class=\"devui-month-item\"\n                [ngClass]=\"{\n                  'devui-table-month-selected': isSelected(year.year, month),\n                  'devui-table-this-month': isThisMonth(year.year, month),\n                  'devui-table-date-inrange': isDateInRange(year.year, month),\n                  'devui-table-date-start': isStartDate(year.year, month),\n                  'devui-table-date-end': isEndDate(year.year, month),\n                  'devui-table-date-abandon-selected': isDateAbandon(year.year, month),\n                  'devui-table-date-in-selected-range': isDateInSelectRange(year.year, month),\n                  'devui-table-date-active-type': isActiveTypeDate(year.year, month)\n                }\"\n              >\n                <span\n                  (mouseenter)=\"setHoverTarget(year.year, month)\"\n                  [ngClass]=\"{ 'devui-disabled': isDisable(year.year, month) }\"\n                  (click)=\"selectMonth(year.year, month)\"\n                >\n                  {{ i18nText.monthsOfYear[month - 1] }}\n                </span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </div>\n</div>\n", styles: [".devui-month-panel{height:300px;font-size:0}.devui-month-panel .devui-year-list{padding:8px 0;display:inline-block;width:80px;height:300px;overflow:auto;text-align:center;font-size:12px;scrollbar-width:none}.devui-month-panel .devui-year-list::-webkit-scrollbar{width:0!important}.devui-month-panel .devui-year-list-item{height:30px;line-height:30px;background-color:#f8f8fa;background-color:var(--devui-global-bg, #f8f8fa);cursor:pointer}.devui-month-panel .devui-year-list-item.title-active{background-color:#fff;background-color:var(--devui-base-bg, #ffffff)}.devui-month-panel .devui-year-list-item:hover:not(.title-active){background-color:#f2f5fc;background-color:var(--devui-list-item-selected-bg, #f2f5fc)}.devui-month-panel .devui-month-list-wrapper{padding:0 4px;display:inline-block}.devui-month-panel .devui-month-list{width:180px;height:295px;font-size:12px;scrollbar-width:none}.devui-month-panel .devui-month-list::-webkit-scrollbar{width:0!important}.devui-month-panel .devui-month-list .devui-table-year-title{text-align:start;line-height:26px;color:#71757f;color:var(--devui-aide-text, #71757f);padding-left:8px}.devui-month-panel .devui-month-list .devui-month-table{border-collapse:collapse}.devui-month-panel .devui-month-list .devui-month-item{width:60px;height:40px;padding:4px 0;box-sizing:border-box;text-align:center;cursor:pointer}.devui-month-panel .devui-month-list .devui-month-item:hover span:not(.devui-disabled){background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3)}.devui-month-panel .devui-month-list .devui-month-item span{display:block;line-height:32px;border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}.devui-month-panel .devui-month-list .devui-month-item span.devui-disabled{border-radius:0}.devui-month-panel .devui-month-list .devui-month-item.devui-table-this-month span{color:#5e7ce0;color:var(--devui-brand, #5e7ce0)}.devui-month-panel .devui-month-list .devui-month-item.devui-table-month-selected span{background:#f2f5fc;background:var(--devui-list-item-active-bg, #f2f5fc);color:#252b3a;color:var(--devui-list-item-active-text, #252b3a)}.devui-month-panel .devui-month-list .devui-month-item.devui-table-month-selected span:hover{background-color:#f2f5fc;background-color:var(--devui-list-item-active-bg, #f2f5fc)}.devui-month-panel .devui-month-list .devui-month-item.devui-table-month-selected.devui-table-date-abandon-selected span{background:#beccfa;background:var(--devui-primary-disabled, #beccfa)}.devui-month-panel .devui-month-list .devui-month-item.devui-table-date-inrange:not(.devui-table-month-selected) span{background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);border-radius:0}.devui-month-panel .devui-month-list .devui-month-item.devui-table-date-start:not(.devui-table-date-end) span{border-radius:4px 0 0 4px;border-radius:var(--devui-border-radius-feedback, 4px) 0 0 var(--devui-border-radius-feedback, 4px)}.devui-month-panel .devui-month-list .devui-month-item.devui-table-date-end:not(.devui-table-date-start) span{border-radius:0 4px 4px 0;border-radius:0 var(--devui-border-radius-feedback, 4px) var(--devui-border-radius-feedback, 4px) 0}.devui-month-panel .devui-month-list .devui-month-item.devui-table-date-in-selected-range:not(.devui-table-date-inrange):not(:hover) span{background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-radius:0}.devui-month-panel .devui-month-list .devui-month-item.devui-table-date-active-type:not(.devui-table-date-abandon-selected) span{-webkit-animation:2s ease 0s infinite normal both breath-animation;animation:2s ease 0s infinite normal both breath-animation}@-webkit-keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}@keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}\n"], components: [{ type: i3.CdkVirtualScrollViewport, selector: "cdk-virtual-scroll-viewport", inputs: ["orientation", "appendOnly"], outputs: ["scrolledIndexChange"] }], directives: [{ type: i3.CdkFixedSizeVirtualScroll, selector: "cdk-virtual-scroll-viewport[itemSize]", inputs: ["itemSize", "minBufferPx", "maxBufferPx"] }, { type: i3.CdkVirtualForOf, selector: "[cdkVirtualFor][cdkVirtualForOf]", inputs: ["cdkVirtualForOf", "cdkVirtualForTrackBy", "cdkVirtualForTemplate", "cdkVirtualForTemplateCacheSize"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: MonthPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-month-panel', preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"devui-month-panel\">\n  <cdk-virtual-scroll-viewport #scrollList [itemSize]=\"30\" class=\"devui-year-list\" minBufferPx=\"400\" maxBufferPx=\"600\">\n    <div\n      class=\"devui-year-list-item\"\n      [ngClass]=\"{ 'title-active': index === currentBodyIndex }\"\n      *cdkVirtualFor=\"let year of yearList; let index = index\"\n      (click)=\"selectYear(year.year)\"\n    >\n      <p class=\"devui-year-title\">{{ year.year }}</p>\n    </div>\n  </cdk-virtual-scroll-viewport>\n  <div class=\"devui-month-list-wrapper\">\n    <cdk-virtual-scroll-viewport #scrollBody [itemSize]=\"calenderItemSize\" class=\"devui-month-list\" minBufferPx=\"400\" maxBufferPx=\"600\">\n      <div *cdkVirtualFor=\"let year of yearList; let index = index\">\n        <p class=\"devui-table-year-title\">{{ year.year + '\u5E74' }}</p>\n        <table\n          class=\"devui-month-table\"\n          [ngClass]=\"{ 'devui-active-month': index === currentBodyIndex }\"\n          (mouseleave)=\"curHoverDate = null\"\n        >\n          <tbody>\n            <tr *ngFor=\"let season of monthList\">\n              <td\n                *ngFor=\"let month of season\"\n                class=\"devui-month-item\"\n                [ngClass]=\"{\n                  'devui-table-month-selected': isSelected(year.year, month),\n                  'devui-table-this-month': isThisMonth(year.year, month),\n                  'devui-table-date-inrange': isDateInRange(year.year, month),\n                  'devui-table-date-start': isStartDate(year.year, month),\n                  'devui-table-date-end': isEndDate(year.year, month),\n                  'devui-table-date-abandon-selected': isDateAbandon(year.year, month),\n                  'devui-table-date-in-selected-range': isDateInSelectRange(year.year, month),\n                  'devui-table-date-active-type': isActiveTypeDate(year.year, month)\n                }\"\n              >\n                <span\n                  (mouseenter)=\"setHoverTarget(year.year, month)\"\n                  [ngClass]=\"{ 'devui-disabled': isDisable(year.year, month) }\"\n                  (click)=\"selectMonth(year.year, month)\"\n                >\n                  {{ i18nText.monthsOfYear[month - 1] }}\n                </span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </div>\n</div>\n", styles: [".devui-month-panel{height:300px;font-size:0}.devui-month-panel .devui-year-list{padding:8px 0;display:inline-block;width:80px;height:300px;overflow:auto;text-align:center;font-size:12px;scrollbar-width:none}.devui-month-panel .devui-year-list::-webkit-scrollbar{width:0!important}.devui-month-panel .devui-year-list-item{height:30px;line-height:30px;background-color:#f8f8fa;background-color:var(--devui-global-bg, #f8f8fa);cursor:pointer}.devui-month-panel .devui-year-list-item.title-active{background-color:#fff;background-color:var(--devui-base-bg, #ffffff)}.devui-month-panel .devui-year-list-item:hover:not(.title-active){background-color:#f2f5fc;background-color:var(--devui-list-item-selected-bg, #f2f5fc)}.devui-month-panel .devui-month-list-wrapper{padding:0 4px;display:inline-block}.devui-month-panel .devui-month-list{width:180px;height:295px;font-size:12px;scrollbar-width:none}.devui-month-panel .devui-month-list::-webkit-scrollbar{width:0!important}.devui-month-panel .devui-month-list .devui-table-year-title{text-align:start;line-height:26px;color:#71757f;color:var(--devui-aide-text, #71757f);padding-left:8px}.devui-month-panel .devui-month-list .devui-month-table{border-collapse:collapse}.devui-month-panel .devui-month-list .devui-month-item{width:60px;height:40px;padding:4px 0;box-sizing:border-box;text-align:center;cursor:pointer}.devui-month-panel .devui-month-list .devui-month-item:hover span:not(.devui-disabled){background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3)}.devui-month-panel .devui-month-list .devui-month-item span{display:block;line-height:32px;border-radius:4px;border-radius:var(--devui-border-radius-feedback, 4px)}.devui-month-panel .devui-month-list .devui-month-item span.devui-disabled{border-radius:0}.devui-month-panel .devui-month-list .devui-month-item.devui-table-this-month span{color:#5e7ce0;color:var(--devui-brand, #5e7ce0)}.devui-month-panel .devui-month-list .devui-month-item.devui-table-month-selected span{background:#f2f5fc;background:var(--devui-list-item-active-bg, #f2f5fc);color:#252b3a;color:var(--devui-list-item-active-text, #252b3a)}.devui-month-panel .devui-month-list .devui-month-item.devui-table-month-selected span:hover{background-color:#f2f5fc;background-color:var(--devui-list-item-active-bg, #f2f5fc)}.devui-month-panel .devui-month-list .devui-month-item.devui-table-month-selected.devui-table-date-abandon-selected span{background:#beccfa;background:var(--devui-primary-disabled, #beccfa)}.devui-month-panel .devui-month-list .devui-month-item.devui-table-date-inrange:not(.devui-table-month-selected) span{background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);border-radius:0}.devui-month-panel .devui-month-list .devui-month-item.devui-table-date-start:not(.devui-table-date-end) span{border-radius:4px 0 0 4px;border-radius:var(--devui-border-radius-feedback, 4px) 0 0 var(--devui-border-radius-feedback, 4px)}.devui-month-panel .devui-month-list .devui-month-item.devui-table-date-end:not(.devui-table-date-start) span{border-radius:0 4px 4px 0;border-radius:0 var(--devui-border-radius-feedback, 4px) var(--devui-border-radius-feedback, 4px) 0}.devui-month-panel .devui-month-list .devui-month-item.devui-table-date-in-selected-range:not(.devui-table-date-inrange):not(:hover) span{background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-radius:0}.devui-month-panel .devui-month-list .devui-month-item.devui-table-date-active-type:not(.devui-table-date-abandon-selected) span{-webkit-animation:2s ease 0s infinite normal both breath-animation;animation:2s ease 0s infinite normal both breath-animation}@-webkit-keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}@keyframes breath-animation{0%{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}50%{box-shadow:0 0 8px #f2f5fc;box-shadow:0 0 8px var(--devui-list-item-active-bg, #f2f5fc)}to{box-shadow:0 0 #f2f5fc;box-shadow:0 0 0 var(--devui-list-item-active-bg, #f2f5fc)}}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.I18nService }, { type: i2.DatepickerProService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { scrollBodyCmp: [{
                type: ViewChild,
                args: ['scrollBody']
            }], scrollListCmp: [{
                type: ViewChild,
                args: ['scrollList']
            }], isRangeType: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,