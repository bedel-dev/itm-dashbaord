/**
 * @deprecated
 */
import { animate, state, style, transition, trigger } from '@angular/animations';
const isIE = typeof window !== 'undefined' && (window.navigator.userAgent.indexOf('MSIE ') > -1 ||
    window.navigator.userAgent.indexOf('Trident') > -1);
const ANIMATION = [
    state('void', style({ transform: 'scale(0)', transformOrigin: '50% 50%' })),
    state('in', style({ transform: 'scale(1)', transformOrigin: '50% 50%' })),
    transition('void => in', [
        animate('200ms cubic-bezier(0.23, 1, 0.32, 1)')
    ]),
    transition('in => void', [
        animate('200ms cubic-bezier(0.755, 0.05, 0.855, 0.06)')
    ]),
];
if (isIE) {
    ANIMATION.splice(2, 2); // remove last two animation transitions
}
export const popInOut = trigger('popInOut', ANIMATION);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wLWluLW91dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2RldnVpL3V0aWxzL2FuaW1hdGlvbnMvcG9wLWluLW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE9BQU8sRUFBRSxPQUFPLEVBQTRCLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRTNHLE1BQU0sSUFBSSxHQUFHLE9BQU8sTUFBTSxLQUFLLFdBQVcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDN0YsTUFBTSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFdEQsTUFBTSxTQUFTLEdBQUc7SUFDaEIsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxTQUFTLEVBQUMsQ0FBQyxDQUFDO0lBQ3pFLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxlQUFlLEVBQUUsU0FBUyxFQUFDLENBQUMsQ0FBQztJQUN2RSxVQUFVLENBQUMsWUFBWSxFQUFFO1FBQ3ZCLE9BQU8sQ0FBQyxzQ0FBc0MsQ0FBQztLQUFDLENBQUM7SUFDbkQsVUFBVSxDQUFDLFlBQVksRUFBRTtRQUN2QixPQUFPLENBQUMsOENBQThDLENBQUM7S0FBQyxDQUFDO0NBQzVELENBQUM7QUFFRixJQUFJLElBQUksRUFBRTtJQUNSLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsd0NBQXdDO0NBQ2pFO0FBRUQsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUE2QixPQUFPLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZGVwcmVjYXRlZFxuICovXG5pbXBvcnQgeyBhbmltYXRlLCBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEsIHN0YXRlLCBzdHlsZSwgdHJhbnNpdGlvbiwgdHJpZ2dlciB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuXG5jb25zdCBpc0lFID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgKHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ01TSUUgJykgPiAtMSB8fFxuICB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPiAtMSk7XG5cbmNvbnN0IEFOSU1BVElPTiA9IFtcbiAgc3RhdGUoJ3ZvaWQnLCBzdHlsZSh7dHJhbnNmb3JtOiAnc2NhbGUoMCknLCB0cmFuc2Zvcm1PcmlnaW46ICc1MCUgNTAlJ30pKSxcbiAgc3RhdGUoJ2luJywgc3R5bGUoe3RyYW5zZm9ybTogJ3NjYWxlKDEpJywgdHJhbnNmb3JtT3JpZ2luOiAnNTAlIDUwJSd9KSksXG4gIHRyYW5zaXRpb24oJ3ZvaWQgPT4gaW4nLCBbXG4gICAgYW5pbWF0ZSgnMjAwbXMgY3ViaWMtYmV6aWVyKDAuMjMsIDEsIDAuMzIsIDEpJyldKSxcbiAgdHJhbnNpdGlvbignaW4gPT4gdm9pZCcsIFtcbiAgICBhbmltYXRlKCcyMDBtcyBjdWJpYy1iZXppZXIoMC43NTUsIDAuMDUsIDAuODU1LCAwLjA2KScpXSksXG5dO1xuXG5pZiAoaXNJRSkge1xuICBBTklNQVRJT04uc3BsaWNlKDIsIDIpOyAvLyByZW1vdmUgbGFzdCB0d28gYW5pbWF0aW9uIHRyYW5zaXRpb25zXG59XG5cbmV4cG9ydCBjb25zdCBwb3BJbk91dDogQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhID0gdHJpZ2dlcigncG9wSW5PdXQnLCBBTklNQVRJT04pO1xuIl19