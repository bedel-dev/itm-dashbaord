import { animate, state, style, transition, trigger } from '@angular/animations';
import { AnimationCurves, AnimationDuration } from './animationParameters';
const easeIn = AnimationCurves.EASE_IN;
const easeOut = AnimationCurves.EASE_OUT;
const duration = AnimationDuration.SLOW;
export const flyInOut = trigger('flyInOut', [
    state('left-void', style({ transform: 'translateX(-100%)', left: 0, opacity: 0 })),
    state('left-in', style({ transform: 'translateX(0)', left: 0, opacity: 1 })),
    state('right-void', style({ transform: 'translateX(100%)', right: 0, opacity: 0.8 })),
    state('right-in', style({ transform: 'translateX(0)', right: 0, opacity: 1 })),
    // 解决初始化动效为'void'而非'left/right-void'
    transition('void => left-in', [
        style({ transform: 'translateX(-100%)', left: 0, opacity: 0.8 }),
        animate(`${duration} ${easeOut}`, style({ transform: 'translateX(0)', left: 0, opacity: 1 }))
    ]),
    transition('void => right-in', [
        style({ transform: 'translateX(100%)', right: 0, opacity: 0.8 }),
        animate(`${duration} ${easeOut}`, style({ transform: 'translateX(0)', right: 0, opacity: 1 }))
    ]),
    transition('left-void => left-in', [
        animate(`${duration} ${easeOut}`)
    ]),
    transition('right-void => right-in', [
        animate(`${duration} ${easeOut}`)
    ]),
    transition('left-in => left-void', [
        animate(`${duration} ${easeIn}`)
    ]),
    transition('right-in => right-void', [
        animate(`${duration} ${easeIn}`)
    ]),
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx5LWluLW91dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2RldnVpL3V0aWxzL2FuaW1hdGlvbnMvZmx5LWluLW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUE0QixLQUFLLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMzRyxPQUFPLEVBQUUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDM0UsTUFBTSxNQUFNLEdBQUcsZUFBZSxDQUFDLE9BQU8sQ0FBQztBQUN2QyxNQUFNLE9BQU8sR0FBRyxlQUFlLENBQUMsUUFBUSxDQUFDO0FBQ3pDLE1BQU0sUUFBUSxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQztBQUV4QyxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQTZCLE9BQU8sQ0FBQyxVQUFVLEVBQUU7SUFDcEUsS0FBSyxDQUFDLFdBQVcsRUFBRSxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNsRixLQUFLLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM1RSxLQUFLLENBQUMsWUFBWSxFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxrQkFBa0IsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUMsQ0FBQyxDQUFDO0lBQ3BGLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzdFLG9DQUFvQztJQUNwQyxVQUFVLENBQUMsaUJBQWlCLEVBQUU7UUFDNUIsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ2hFLE9BQU8sQ0FBQyxHQUFHLFFBQVEsSUFBSSxPQUFPLEVBQUUsRUFBRSxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDOUYsQ0FBQztJQUNGLFVBQVUsQ0FBQyxrQkFBa0IsRUFBRTtRQUM3QixLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDaEUsT0FBTyxDQUFDLEdBQUcsUUFBUSxJQUFJLE9BQU8sRUFBRSxFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUMvRixDQUFDO0lBQ0YsVUFBVSxDQUFDLHNCQUFzQixFQUFFO1FBQ2pDLE9BQU8sQ0FBQyxHQUFHLFFBQVEsSUFBSSxPQUFPLEVBQUUsQ0FBQztLQUNsQyxDQUFDO0lBQ0YsVUFBVSxDQUFDLHdCQUF3QixFQUFFO1FBQ25DLE9BQU8sQ0FBQyxHQUFHLFFBQVEsSUFBSSxPQUFPLEVBQUUsQ0FBQztLQUNsQyxDQUFDO0lBQ0YsVUFBVSxDQUFDLHNCQUFzQixFQUFFO1FBQ2pDLE9BQU8sQ0FBQyxHQUFHLFFBQVEsSUFBSSxNQUFNLEVBQUUsQ0FBQztLQUNqQyxDQUFDO0lBQ0YsVUFBVSxDQUFDLHdCQUF3QixFQUFFO1FBQ25DLE9BQU8sQ0FBQyxHQUFHLFFBQVEsSUFBSSxNQUFNLEVBQUUsQ0FBQztLQUNqQyxDQUFDO0NBQ0gsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYW5pbWF0ZSwgQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhLCBzdGF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIHRyaWdnZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IEFuaW1hdGlvbkN1cnZlcywgQW5pbWF0aW9uRHVyYXRpb24gfSBmcm9tICcuL2FuaW1hdGlvblBhcmFtZXRlcnMnO1xuY29uc3QgZWFzZUluID0gQW5pbWF0aW9uQ3VydmVzLkVBU0VfSU47XG5jb25zdCBlYXNlT3V0ID0gQW5pbWF0aW9uQ3VydmVzLkVBU0VfT1VUO1xuY29uc3QgZHVyYXRpb24gPSBBbmltYXRpb25EdXJhdGlvbi5TTE9XO1xuXG5leHBvcnQgY29uc3QgZmx5SW5PdXQ6IEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YSA9IHRyaWdnZXIoJ2ZseUluT3V0JywgW1xuICBzdGF0ZSgnbGVmdC12b2lkJywgc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC0xMDAlKScsIGxlZnQ6IDAsIG9wYWNpdHk6IDAgfSkpLFxuICBzdGF0ZSgnbGVmdC1pbicsIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgwKScsIGxlZnQ6IDAsIG9wYWNpdHk6IDEgfSkpLFxuICBzdGF0ZSgncmlnaHQtdm9pZCcsIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgxMDAlKScsIHJpZ2h0OiAwLCBvcGFjaXR5OiAwLjh9KSksXG4gIHN0YXRlKCdyaWdodC1pbicsIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgwKScsIHJpZ2h0OiAwLCBvcGFjaXR5OiAxfSkpLFxuICAvLyDop6PlhrPliJ3lp4vljJbliqjmlYjkuLondm9pZCfogIzpnZ4nbGVmdC9yaWdodC12b2lkJ1xuICB0cmFuc2l0aW9uKCd2b2lkID0+IGxlZnQtaW4nLCBbXG4gICAgc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC0xMDAlKScsIGxlZnQ6IDAsIG9wYWNpdHk6IDAuOCB9KSxcbiAgICBhbmltYXRlKGAke2R1cmF0aW9ufSAke2Vhc2VPdXR9YCwgc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDApJywgbGVmdDogMCwgb3BhY2l0eTogMSB9KSlcbiAgXSksXG4gIHRyYW5zaXRpb24oJ3ZvaWQgPT4gcmlnaHQtaW4nLCBbXG4gICAgc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDEwMCUpJywgcmlnaHQ6IDAsIG9wYWNpdHk6IDAuOCB9KSxcbiAgICBhbmltYXRlKGAke2R1cmF0aW9ufSAke2Vhc2VPdXR9YCwgc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDApJywgcmlnaHQ6IDAsIG9wYWNpdHk6IDEgfSkpXG4gIF0pLFxuICB0cmFuc2l0aW9uKCdsZWZ0LXZvaWQgPT4gbGVmdC1pbicsIFtcbiAgICBhbmltYXRlKGAke2R1cmF0aW9ufSAke2Vhc2VPdXR9YClcbiAgXSksXG4gIHRyYW5zaXRpb24oJ3JpZ2h0LXZvaWQgPT4gcmlnaHQtaW4nLCBbXG4gICAgYW5pbWF0ZShgJHtkdXJhdGlvbn0gJHtlYXNlT3V0fWApXG4gIF0pLFxuICB0cmFuc2l0aW9uKCdsZWZ0LWluID0+IGxlZnQtdm9pZCcsIFtcbiAgICBhbmltYXRlKGAke2R1cmF0aW9ufSAke2Vhc2VJbn1gKVxuICBdKSxcbiAgdHJhbnNpdGlvbigncmlnaHQtaW4gPT4gcmlnaHQtdm9pZCcsIFtcbiAgICBhbmltYXRlKGAke2R1cmF0aW9ufSAke2Vhc2VJbn1gKVxuICBdKSxcbl0pO1xuIl19