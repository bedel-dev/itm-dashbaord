import { Component, EventEmitter, Input, Output } from '@angular/core';
import { I18nService } from 'ng-devui/i18n';
import { fromEvent } from 'rxjs';
import { GanttScaleUnit } from '../gantt.model';
import { GanttService } from '../gantt.service';
import * as i0 from "@angular/core";
import * as i1 from "../gantt.service";
import * as i2 from "ng-devui/i18n";
import * as i3 from "@angular/common";
import * as i4 from "../gantt-marker.directive";
export class GanttScaleComponent {
    constructor(ganttService, i18n) {
        this.ganttService = ganttService;
        this.i18n = i18n;
        this.viewScaleRange = [0, 0];
        this.viewSCaleData = [];
        this.SCALE_START_LABLE_OFFSET = 7;
        this.scaleWidth = {
            day: 40,
            week: 30,
            month: 20,
        };
        this.unit = GanttScaleUnit.day;
        this.addMilestoneEvent = new EventEmitter();
    }
    ngOnInit() {
        this.i18nText = this.i18n.getI18nText().gantt;
        this.i18nCommonText = this.i18n.getI18nText().common;
        this.i18nLocale = this.i18n.getI18nText().locale;
        this.i18nSubscription = this.i18n.langChange().subscribe((data) => {
            this.i18nText = data.gantt;
            this.i18nCommonText = data.common;
            this.i18nLocale = data.locale;
        });
        this.ganttBarStatusHandler = this.ganttService.ganttBarStatusChange.subscribe((status) => {
            this.ganttBarStatusChange(status);
        });
        this.ganttSacleConfigHandler = this.ganttService.ganttScaleConfigChange.subscribe((config) => {
            if (config.startDate) {
                this.startDate = config.startDate;
            }
            if (config.endDate) {
                this.endDate = config.endDate;
            }
            if (config.startDate || config.endDate) {
                this.scaleData = this.generateScaleData(this.startDate, this.endDate);
                this.getViewScaleData();
            }
            if (config.unit) {
                this.unit = config.unit;
                this.getViewScaleData();
            }
            if (config.viewChange) {
                this.getViewScaleData();
            }
        });
    }
    ngOnChanges(changes) {
        if (Object.prototype.hasOwnProperty.call(changes, 'scrollElement')) {
            this.registerScrollEvent();
        }
    }
    registerScrollEvent() {
        if (!this.scrollHandler && this.scrollElement) {
            this.scrollHandler = fromEvent(this.scrollElement, 'scroll').subscribe(e => {
                this.getViewScaleData();
            });
        }
    }
    getViewScaleData() {
        if (this.scrollElement) {
            const containerWidth = this.scrollElement.clientWidth;
            const scrollLeft = this.scrollElement.scrollLeft;
            const start = Math.floor(scrollLeft / this.scaleWidth[this.unit]);
            const offset = Math.ceil(containerWidth / this.scaleWidth[this.unit]);
            this.viewScaleRange = [start - 2, start + offset + 2];
            this.viewSCaleData = this.scaleData.filter((i) => {
                return i.index >= this.viewScaleRange[0] && i.index <= this.viewScaleRange[1];
            });
        }
    }
    generateScaleData(startDate, endDate) {
        if (startDate && endDate) {
            const scaleData = [];
            let handleDate = startDate;
            let index = 0;
            while (!this.ganttService.isSomeDate(handleDate, endDate)) {
                const dateInfo = this.generateDateInfo(handleDate, index);
                scaleData.push(dateInfo);
                handleDate = this.getNextDay(new Date(handleDate));
                index++;
            }
            return scaleData;
        }
    }
    getNextDay(date) {
        const nextDayDate = date.setDate(date.getDate() + 1);
        return new Date(nextDayDate);
    }
    generateDateInfo(date, index) {
        const dateInfo = {
            dayOfMonthLabel: '',
            dayOfWeekLabel: '',
            monthLabel: '',
            yearLabel: '',
            date: date,
            monthStart: false,
            weekend: false,
            today: false,
            milestone: '',
            highlightStart: false,
            scaleStartVisable: true,
            index
        };
        const dayOfMonth = date.getDate();
        dateInfo.dayOfMonthLabel = String(dayOfMonth);
        if (dayOfMonth === 1) {
            dateInfo.monthStart = true;
        }
        const dayOfWeek = date.getDay();
        dateInfo.dayOfWeekLabel = String(dayOfWeek);
        if (dayOfWeek === 6) {
            dateInfo.weekend = true;
        }
        const month = date.getMonth() + 1;
        dateInfo.monthLabel = String(month);
        const year = date.getFullYear();
        dateInfo.yearLabel = String(year);
        if (this.ganttService.isSomeDate(date, new Date())) {
            dateInfo.today = true;
        }
        if (new Date(year, month - 1, dayOfMonth + this.SCALE_START_LABLE_OFFSET).getMonth() > month - 1) {
            dateInfo.scaleStartVisable = false;
        }
        if (this.milestoneList) {
            this.milestoneList.forEach((milestone) => {
                if (milestone.date) {
                    if (this.ganttService.isSomeDate(milestone.date, dateInfo.date)) {
                        dateInfo.milestone = milestone.lable;
                    }
                }
            });
        }
        return dateInfo;
    }
    trackByFn(index, item) {
        return index;
    }
    ganttBarStatusChange(status) {
        this.highlight = status.focused;
        if (this.highlight) {
            this.scaleData.forEach((dateInfo, index) => {
                if (dateInfo.date >= status.startDate && dateInfo.date <= status.endDate) {
                    dateInfo.highlight = true;
                }
                else {
                    dateInfo.highlight = false;
                }
                dateInfo.highlightStart = false;
            });
            const highlightBarStartIndex = this.scaleData.findIndex((data) => {
                return data.highlight;
            });
            if (highlightBarStartIndex > -1) {
                this.scaleData[highlightBarStartIndex].highlightStart = true;
            }
            const highlightData = this.scaleData.filter((data) => {
                return data.highlight;
            });
            if (highlightData.length === 0) {
                return;
            }
            if (highlightData.length === 1) {
                const startData = highlightData[0];
                this.highlightStartText =
                    this.prefixZero(parseInt(startData.monthLabel, 10)) + '-' + this.prefixZero(parseInt(startData.dayOfMonthLabel, 10));
                const highlightWidth = this.ganttService.getScaleUnitPixel();
                if (highlightWidth < 40) {
                    this.highlightMinWidth = 40;
                }
                else {
                    this.highlightMinWidth = highlightWidth;
                }
            }
            else {
                const startData = highlightData[0];
                const endData = highlightData[highlightData.length - 1];
                this.highlightStartText =
                    this.prefixZero(parseInt(startData.monthLabel, 10)) + '-' + this.prefixZero(parseInt(startData.dayOfMonthLabel, 10));
                this.highlightEndText =
                    this.prefixZero(parseInt(endData.monthLabel, 10)) + '-' + this.prefixZero(parseInt(endData.dayOfMonthLabel, 10));
                const highlightWidth = highlightData.length * this.ganttService.getScaleUnitPixel();
                if (highlightWidth < 80) {
                    this.highlightMinWidth = 80;
                }
                else {
                    this.highlightMinWidth = highlightWidth;
                }
            }
        }
    }
    prefixZero(num) {
        return (Array(2).join('0') + num).slice(-2);
    }
    addMilestone(info) {
        this.addMilestoneEvent.emit(info);
    }
    ngOnDestroy() {
        if (this.ganttBarStatusHandler) {
            this.ganttBarStatusHandler.unsubscribe();
            this.ganttBarStatusHandler = null;
        }
        if (this.ganttSacleConfigHandler) {
            this.ganttSacleConfigHandler.unsubscribe();
            this.ganttSacleConfigHandler = null;
        }
        if (this.scrollHandler) {
            this.scrollHandler.unsubscribe();
        }
    }
}
GanttScaleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: GanttScaleComponent, deps: [{ token: i1.GanttService }, { token: i2.I18nService }], target: i0.ɵɵFactoryTarget.Component });
GanttScaleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: GanttScaleComponent, selector: "d-gantt-scale", inputs: { unit: "unit", height: "height", startDate: "startDate", endDate: "endDate", ganttBarContainerElement: "ganttBarContainerElement", ganttScaleContainerOffsetLeft: "ganttScaleContainerOffsetLeft", milestoneList: "milestoneList", scrollElement: "scrollElement" }, outputs: { addMilestoneEvent: "addMilestoneEvent" }, usesOnChanges: true, ngImport: i0, template: "<div\n  class=\"devui-gantt-scale {{ unit }}\"\n  *ngFor=\"let data of viewSCaleData; trackBy: trackByFn; let first = first; let last = last\"\n  [ngClass]=\"{ today: data.today, milestone: data.milestone }\"\n  [style.left]=\"scaleWidth[unit] * data.index + 'px'\"\n  [style.width]=\"scaleWidth[unit] + 'px'\"\n  dGanttMarker\n  [monthMark]=\"data.monthStart\"\n  [weekend]=\"data.weekend\"\n  [milestone]=\"data.milestone\"\n  [today]=\"data.today\"\n  [date]=\"data.date\"\n  [unit]=\"unit\"\n  [last]=\"last\"\n  [ganttScaleContainerOffsetLeft]=\"ganttScaleContainerOffsetLeft\"\n  [ganttBarContainerElement]=\"ganttBarContainerElement\"\n>\n  <div class=\"devui-scale-start\" [ngClass]=\"{ milestone: data.milestone }\">\n    <ng-container *ngIf=\"data.milestone && unit === 'day'\">\n      {{ data.milestone }}\n    </ng-container>\n    <ng-container *ngIf=\"!data.milestone || unit !== 'day'\">\n      {{\n        data.scaleStartVisable && (first || data.monthStart)\n          ? unit === 'month'\n            ? i18nText?.yearDisplay(data.yearLabel)\n            : i18nText?.yearAndMonthDisplay(data.yearLabel, data.monthLabel)\n          : ''\n      }}\n    </ng-container>\n  </div>\n  <div class=\"devui-scale-unit\">\n    <div *ngIf=\"highlight && data.highlightStart\" class=\"scale-highlight\" [style.minWidth]=\"highlightMinWidth + 'px'\">\n      <div style=\"float: left\">{{ highlightStartText }}</div>\n      <div style=\"float: right\">{{ highlightEndText }}</div>\n      <div style=\"clear: both\"></div>\n    </div>\n    <ng-container *ngIf=\"!highlight || !data.highlight\">\n      <div *ngIf=\"unit === 'day'\" class=\"border-left\" [ngClass]=\"{ today: data.today }\">\n        {{ data.today ? i18nText?.today : data.dayOfMonthLabel }}\n      </div>\n      <div *ngIf=\"unit === 'week'\" [ngClass]=\"{ 'border-left': first || data.weekend }\">\n        {{ first || data.weekend ? data.dayOfMonthLabel : '' }}\n      </div>\n      <div *ngIf=\"unit === 'month'\" [ngClass]=\"{ 'border-left': first || data.monthStart }\">\n        {{ first || data.monthStart ? i18nText?.monthDisplay(data.monthLabel) : '' }}\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"milestone-new {{ unit }}\" [title]=\"i18nText?.milestone\" (click)=\"addMilestone(data)\">\n    <div class=\"icon-add\"></div>\n  </div>\n</div>\n", styles: [".devui-font-size-base{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-font-base{font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400;line-height:1.5}.devui-font-size-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px)}.devui-font-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px);font-weight:700;line-height:1.5}.devui-font-size-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px)}.devui-font-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px);font-weight:700;line-height:1.5}.devui-font-size-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px)}.devui-font-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px);font-weight:700;line-height:1.5}:host{display:block;height:36px;line-height:18px}.devui-gantt-scale{display:inline-block;color:#babbc0;color:var(--devui-placeholder, #babbc0);text-align:center;position:absolute;height:36px;font-weight:400}.devui-gantt-scale.day:not(.milestone):hover .devui-scale-start{display:none}.devui-gantt-scale.day.milestone{background-image:linear-gradient(180deg,rgba(254,204,85,0) 0%,rgba(62,204,166,.1) 100%)}.devui-gantt-scale .devui-scale-start{width:100%;height:18px;position:absolute;left:1px;white-space:nowrap}.devui-gantt-scale .devui-scale-start.milestone{color:#50d4ab;color:var(--devui-success, #50d4ab)}.devui-gantt-scale .devui-scale-unit{height:18px;position:absolute;top:18px;width:100%}.devui-gantt-scale .devui-scale-unit .border-left{height:18px;border-left:1px solid #f2f5fc;border-left:1px solid var(--devui-list-item-selected-bg, #f2f5fc)}.devui-gantt-scale .devui-scale-unit .scale-highlight{position:absolute;height:18px;border-radius:2px;border-radius:var(--devui-border-radius, 2px);background-color:#5e7ce0;background-color:var(--devui-brand, #5e7ce0);padding:0 4px}.devui-gantt-scale .devui-scale-unit .scale-highlight div{color:#fff;color:var(--devui-base-bg, #ffffff);font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400}.devui-gantt-scale .devui-scale-unit .today{background:rgba(255,121,14,.2);border-radius:2px;border-radius:var(--devui-border-radius, 2px);height:16px}.devui-gantt-scale .milestone-new{display:none;position:absolute;width:18px;height:18px;margin-left:16px;border:1px solid #f2f5fc;border:1px solid var(--devui-list-item-selected-bg, #f2f5fc);cursor:pointer}.devui-gantt-scale .milestone-new div{line-height:16px}.devui-gantt-scale:not(.milestone):hover .milestone-new.day{display:block}.devui-mark-line{position:absolute;top:0;bottom:0;width:2px;z-index:1;background:#d7d8da;background:var(--devui-line, #d7d8da);opacity:.5}.devui-mark-line.today{opacity:.2;background:#ff790e}.devui-mark-line.today.day{margin-left:24px}.devui-mark-line.today.week{margin-left:9px}.devui-mark-line.today.month{margin-left:4px}.devui-mark-line.milestone{opacity:.2;background:#50d4ab;background:var(--devui-success, #50d4ab)}.devui-mark-line.milestone.day{margin-left:24px}.devui-mark-line.milestone.week{margin-left:9px}.devui-mark-line.milestone.month{margin-left:4px}.devui-mark-stripe{position:absolute;top:0;bottom:0;z-index:1;background:linear-gradient(45deg,rgba(202,207,216,.2) 0,rgba(202,207,216,.2) 10%,transparent 10%,transparent 50%,rgba(202,207,216,.2) 50%,rgba(202,207,216,.2) 60%,transparent 60%,transparent);background-size:6px 6px}.devui-mark-stripe.day{width:100px}.devui-mark-stripe.week{width:40px}.devui-mark-stripe.month{width:20px}\n"], directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4.GanttMarkerDirective, selector: "[dGanttMarker]", inputs: ["ganttBarContainerElement", "ganttScaleContainerOffsetLeft", "monthMark", "weekend", "today", "milestone", "unit", "date", "last"] }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: GanttScaleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-gantt-scale', template: "<div\n  class=\"devui-gantt-scale {{ unit }}\"\n  *ngFor=\"let data of viewSCaleData; trackBy: trackByFn; let first = first; let last = last\"\n  [ngClass]=\"{ today: data.today, milestone: data.milestone }\"\n  [style.left]=\"scaleWidth[unit] * data.index + 'px'\"\n  [style.width]=\"scaleWidth[unit] + 'px'\"\n  dGanttMarker\n  [monthMark]=\"data.monthStart\"\n  [weekend]=\"data.weekend\"\n  [milestone]=\"data.milestone\"\n  [today]=\"data.today\"\n  [date]=\"data.date\"\n  [unit]=\"unit\"\n  [last]=\"last\"\n  [ganttScaleContainerOffsetLeft]=\"ganttScaleContainerOffsetLeft\"\n  [ganttBarContainerElement]=\"ganttBarContainerElement\"\n>\n  <div class=\"devui-scale-start\" [ngClass]=\"{ milestone: data.milestone }\">\n    <ng-container *ngIf=\"data.milestone && unit === 'day'\">\n      {{ data.milestone }}\n    </ng-container>\n    <ng-container *ngIf=\"!data.milestone || unit !== 'day'\">\n      {{\n        data.scaleStartVisable && (first || data.monthStart)\n          ? unit === 'month'\n            ? i18nText?.yearDisplay(data.yearLabel)\n            : i18nText?.yearAndMonthDisplay(data.yearLabel, data.monthLabel)\n          : ''\n      }}\n    </ng-container>\n  </div>\n  <div class=\"devui-scale-unit\">\n    <div *ngIf=\"highlight && data.highlightStart\" class=\"scale-highlight\" [style.minWidth]=\"highlightMinWidth + 'px'\">\n      <div style=\"float: left\">{{ highlightStartText }}</div>\n      <div style=\"float: right\">{{ highlightEndText }}</div>\n      <div style=\"clear: both\"></div>\n    </div>\n    <ng-container *ngIf=\"!highlight || !data.highlight\">\n      <div *ngIf=\"unit === 'day'\" class=\"border-left\" [ngClass]=\"{ today: data.today }\">\n        {{ data.today ? i18nText?.today : data.dayOfMonthLabel }}\n      </div>\n      <div *ngIf=\"unit === 'week'\" [ngClass]=\"{ 'border-left': first || data.weekend }\">\n        {{ first || data.weekend ? data.dayOfMonthLabel : '' }}\n      </div>\n      <div *ngIf=\"unit === 'month'\" [ngClass]=\"{ 'border-left': first || data.monthStart }\">\n        {{ first || data.monthStart ? i18nText?.monthDisplay(data.monthLabel) : '' }}\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"milestone-new {{ unit }}\" [title]=\"i18nText?.milestone\" (click)=\"addMilestone(data)\">\n    <div class=\"icon-add\"></div>\n  </div>\n</div>\n", styles: [".devui-font-size-base{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-font-base{font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400;line-height:1.5}.devui-font-size-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px)}.devui-font-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px);font-weight:700;line-height:1.5}.devui-font-size-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px)}.devui-font-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px);font-weight:700;line-height:1.5}.devui-font-size-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px)}.devui-font-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px);font-weight:700;line-height:1.5}:host{display:block;height:36px;line-height:18px}.devui-gantt-scale{display:inline-block;color:#babbc0;color:var(--devui-placeholder, #babbc0);text-align:center;position:absolute;height:36px;font-weight:400}.devui-gantt-scale.day:not(.milestone):hover .devui-scale-start{display:none}.devui-gantt-scale.day.milestone{background-image:linear-gradient(180deg,rgba(254,204,85,0) 0%,rgba(62,204,166,.1) 100%)}.devui-gantt-scale .devui-scale-start{width:100%;height:18px;position:absolute;left:1px;white-space:nowrap}.devui-gantt-scale .devui-scale-start.milestone{color:#50d4ab;color:var(--devui-success, #50d4ab)}.devui-gantt-scale .devui-scale-unit{height:18px;position:absolute;top:18px;width:100%}.devui-gantt-scale .devui-scale-unit .border-left{height:18px;border-left:1px solid #f2f5fc;border-left:1px solid var(--devui-list-item-selected-bg, #f2f5fc)}.devui-gantt-scale .devui-scale-unit .scale-highlight{position:absolute;height:18px;border-radius:2px;border-radius:var(--devui-border-radius, 2px);background-color:#5e7ce0;background-color:var(--devui-brand, #5e7ce0);padding:0 4px}.devui-gantt-scale .devui-scale-unit .scale-highlight div{color:#fff;color:var(--devui-base-bg, #ffffff);font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400}.devui-gantt-scale .devui-scale-unit .today{background:rgba(255,121,14,.2);border-radius:2px;border-radius:var(--devui-border-radius, 2px);height:16px}.devui-gantt-scale .milestone-new{display:none;position:absolute;width:18px;height:18px;margin-left:16px;border:1px solid #f2f5fc;border:1px solid var(--devui-list-item-selected-bg, #f2f5fc);cursor:pointer}.devui-gantt-scale .milestone-new div{line-height:16px}.devui-gantt-scale:not(.milestone):hover .milestone-new.day{display:block}.devui-mark-line{position:absolute;top:0;bottom:0;width:2px;z-index:1;background:#d7d8da;background:var(--devui-line, #d7d8da);opacity:.5}.devui-mark-line.today{opacity:.2;background:#ff790e}.devui-mark-line.today.day{margin-left:24px}.devui-mark-line.today.week{margin-left:9px}.devui-mark-line.today.month{margin-left:4px}.devui-mark-line.milestone{opacity:.2;background:#50d4ab;background:var(--devui-success, #50d4ab)}.devui-mark-line.milestone.day{margin-left:24px}.devui-mark-line.milestone.week{margin-left:9px}.devui-mark-line.milestone.month{margin-left:4px}.devui-mark-stripe{position:absolute;top:0;bottom:0;z-index:1;background:linear-gradient(45deg,rgba(202,207,216,.2) 0,rgba(202,207,216,.2) 10%,transparent 10%,transparent 50%,rgba(202,207,216,.2) 50%,rgba(202,207,216,.2) 60%,transparent 60%,transparent);background-size:6px 6px}.devui-mark-stripe.day{width:100px}.devui-mark-stripe.week{width:40px}.devui-mark-stripe.month{width:20px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.GanttService }, { type: i2.I18nService }]; }, propDecorators: { unit: [{
                type: Input
            }], height: [{
                type: Input
            }], startDate: [{
                type: Input
            }], endDate: [{
                type: Input
            }], ganttBarContainerElement: [{
                type: Input
            }], ganttScaleContainerOffsetLeft: [{
                type: Input
            }], milestoneList: [{
                type: Input
            }], scrollElement: [{
                type: Input
            }], addMilestoneEvent: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,