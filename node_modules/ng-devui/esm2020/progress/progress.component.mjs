import { Component, ContentChild, Input, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ProgressComponent {
    constructor() {
        this.percentage = 0;
        this.strokeWidth = 14; // 进度条的线条宽度
        this.type = 'line';
        this.showContent = true;
    }
    /**
     * @deprecated
     * 统一用strokeWidth
     */
    set height(value) {
        this.strokeWidth = parseInt(value, 10);
    }
    ;
    /**
     * @deprecated
     * 用type类型替换
     */
    set isCircle(value) {
        this.type = value ? 'circle' : 'line';
    }
    ;
    ngOnInit() {
        if (this.type === 'circle') {
            this.setCircleProgress();
        }
    }
    ngOnChanges(changes) {
        if (this.type === 'circle') {
            this.setCircleProgress();
        }
    }
    setCircleProgress() {
        if (this.type !== 'circle') {
            return;
        }
        const radius = 50 - this.strokeWidth / 2;
        const beginPositionY = -radius;
        const endPositionY = radius * -2;
        this.pathString = `M 50,50 m 0,${beginPositionY}
     a ${radius},${radius} 0 1 1 0,${-endPositionY}
     a ${radius},${radius} 0 1 1 0,${endPositionY}`;
        const len = Math.PI * 2 * radius;
        this.trailPath = {
            strokeDasharray: `${len}px ${len}px`,
            strokeDashoffset: `0`,
            transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s'
        };
        this.strokePath = {
            stroke: this.strokeColor || this.barbgcolor || null,
            strokeDasharray: `${(this.percentage / 100) * len}px ${len}px`,
            strokeDashoffset: `0`,
            transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s'
        };
    }
}
ProgressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ProgressComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ProgressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: ProgressComponent, selector: "d-progress", inputs: { percentage: "percentage", percentageText: "percentageText", barbgcolor: "barbgcolor", strokeColor: "strokeColor", height: "height", strokeWidth: "strokeWidth", isCircle: "isCircle", type: "type", showContent: "showContent" }, queries: [{ propertyName: "customViewTemplate", first: true, predicate: TemplateRef, descendants: true }], usesOnChanges: true, ngImport: i0, template: "<div *ngIf=\"type !== 'circle'\" class=\"devui-progress\" [ngStyle]=\"{ height: strokeWidth + 'px' }\">\n  <div\n    class=\"devui-progress-bar\"\n    role=\"progressbar\"\n    aria-valuenow=\"60\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n    [style.background-color]=\"strokeColor || barbgcolor\"\n    [style.width]=\"percentage + '%'\"\n  ></div>\n  <span [style.line-height]=\"strokeWidth + 'px'\">{{ percentageText }}</span>\n</div>\n<div *ngIf=\"type === 'circle'\" class=\"devui-progress-circle\">\n  <svg class=\"devui-progress-circle\" viewBox=\"0 0 100 100\">\n    <path\n      class=\"devui-progress-circle-trail\"\n      fill-opacity=\"0\"\n      [attr.stroke-width]=\"strokeWidth\"\n      [ngStyle]=\"trailPath\"\n      [attr.d]=\"pathString\"\n    ></path>\n    <path\n      class=\"devui-progress-circle-path\"\n      [attr.d]=\"pathString\"\n      [attr.stroke-linecap]=\"'round'\"\n      fill-opacity=\"0\"\n      [attr.stroke]=\"strokeColor || barbgcolor\"\n      [attr.stroke-width]=\"percentage ? strokeWidth : 0\"\n      [ngStyle]=\"strokePath\"\n    ></path>\n  </svg>\n  <ng-container *ngIf=\"showContent\">\n    <ng-template\n      *ngIf=\"customViewTemplate\"\n      [ngTemplateOutlet]=\"customViewTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: this, percentage: percentage }\"\n    ></ng-template>\n    <span *ngIf=\"!customViewTemplate\" class=\"devui-progress-circle-text\">{{ percentage }}%</span>\n  </ng-container>\n</div>\n", styles: [".devui-font-size-base{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-font-base{font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400;line-height:1.5}.devui-font-size-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px)}.devui-font-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px);font-weight:700;line-height:1.5}.devui-font-size-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px)}.devui-font-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px);font-weight:700;line-height:1.5}.devui-font-size-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px)}.devui-font-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px);font-weight:700;line-height:1.5}:host{display:block}.devui-progress{position:relative;background:#f2f2f3;background:var(--devui-dividing-line, #f2f2f3);border-radius:100px;border-radius:var(--devui-border-radius-full, 100px)}.devui-progress .devui-progress-bar{width:0;height:100%;transition:width .6s ease;background-color:#5e7ce0;background-color:var(--devui-brand, #5e7ce0);border-radius:100px;border-radius:var(--devui-border-radius-full, 100px)}.devui-progress>span{display:block;white-space:nowrap;color:#fff;color:var(--devui-light-text, #ffffff);text-align:center;position:absolute;left:0;top:0;height:100%;width:100%;font-size:12px;font-size:var(--devui-font-size, 12px);line-height:1.5}.devui-progress-circle{position:relative}.devui-progress-circle-text{position:absolute;top:50%;left:50%;width:100%;margin:0;padding:0;color:#252b3a;color:var(--devui-text, #252b3a);line-height:1;white-space:normal;text-align:center;transform:translate(-50%,-50%)}.devui-progress-circle-trail{stroke:#f2f2f3;stroke:var(--devui-dividing-line, #f2f2f3)}.devui-progress-circle-path{stroke:#5e7ce0;stroke:var(--devui-brand, #5e7ce0)}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: ProgressComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-progress', preserveWhitespaces: false, template: "<div *ngIf=\"type !== 'circle'\" class=\"devui-progress\" [ngStyle]=\"{ height: strokeWidth + 'px' }\">\n  <div\n    class=\"devui-progress-bar\"\n    role=\"progressbar\"\n    aria-valuenow=\"60\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n    [style.background-color]=\"strokeColor || barbgcolor\"\n    [style.width]=\"percentage + '%'\"\n  ></div>\n  <span [style.line-height]=\"strokeWidth + 'px'\">{{ percentageText }}</span>\n</div>\n<div *ngIf=\"type === 'circle'\" class=\"devui-progress-circle\">\n  <svg class=\"devui-progress-circle\" viewBox=\"0 0 100 100\">\n    <path\n      class=\"devui-progress-circle-trail\"\n      fill-opacity=\"0\"\n      [attr.stroke-width]=\"strokeWidth\"\n      [ngStyle]=\"trailPath\"\n      [attr.d]=\"pathString\"\n    ></path>\n    <path\n      class=\"devui-progress-circle-path\"\n      [attr.d]=\"pathString\"\n      [attr.stroke-linecap]=\"'round'\"\n      fill-opacity=\"0\"\n      [attr.stroke]=\"strokeColor || barbgcolor\"\n      [attr.stroke-width]=\"percentage ? strokeWidth : 0\"\n      [ngStyle]=\"strokePath\"\n    ></path>\n  </svg>\n  <ng-container *ngIf=\"showContent\">\n    <ng-template\n      *ngIf=\"customViewTemplate\"\n      [ngTemplateOutlet]=\"customViewTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: this, percentage: percentage }\"\n    ></ng-template>\n    <span *ngIf=\"!customViewTemplate\" class=\"devui-progress-circle-text\">{{ percentage }}%</span>\n  </ng-container>\n</div>\n", styles: [".devui-font-size-base{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-font-base{font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400;line-height:1.5}.devui-font-size-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px)}.devui-font-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px);font-weight:700;line-height:1.5}.devui-font-size-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px)}.devui-font-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px);font-weight:700;line-height:1.5}.devui-font-size-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px)}.devui-font-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px);font-weight:700;line-height:1.5}:host{display:block}.devui-progress{position:relative;background:#f2f2f3;background:var(--devui-dividing-line, #f2f2f3);border-radius:100px;border-radius:var(--devui-border-radius-full, 100px)}.devui-progress .devui-progress-bar{width:0;height:100%;transition:width .6s ease;background-color:#5e7ce0;background-color:var(--devui-brand, #5e7ce0);border-radius:100px;border-radius:var(--devui-border-radius-full, 100px)}.devui-progress>span{display:block;white-space:nowrap;color:#fff;color:var(--devui-light-text, #ffffff);text-align:center;position:absolute;left:0;top:0;height:100%;width:100%;font-size:12px;font-size:var(--devui-font-size, 12px);line-height:1.5}.devui-progress-circle{position:relative}.devui-progress-circle-text{position:absolute;top:50%;left:50%;width:100%;margin:0;padding:0;color:#252b3a;color:var(--devui-text, #252b3a);line-height:1;white-space:normal;text-align:center;transform:translate(-50%,-50%)}.devui-progress-circle-trail{stroke:#f2f2f3;stroke:var(--devui-dividing-line, #f2f2f3)}.devui-progress-circle-path{stroke:#5e7ce0;stroke:var(--devui-brand, #5e7ce0)}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { percentage: [{
                type: Input
            }], percentageText: [{
                type: Input
            }], barbgcolor: [{
                type: Input
            }], strokeColor: [{
                type: Input
            }], height: [{
                type: Input
            }], strokeWidth: [{
                type: Input
            }], isCircle: [{
                type: Input
            }], type: [{
                type: Input
            }], showContent: [{
                type: Input
            }], customViewTemplate: [{
                type: ContentChild,
                args: [TemplateRef]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGV2dWkvcHJvZ3Jlc3MvcHJvZ3Jlc3MuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vZGV2dWkvcHJvZ3Jlc3MvcHJvZ3Jlc3MuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUlMLFdBQVcsRUFDWixNQUFNLGVBQWUsQ0FBQzs7O0FBUXZCLE1BQU0sT0FBTyxpQkFBaUI7SUE4QjVCO1FBN0JTLGVBQVUsR0FBRyxDQUFDLENBQUM7UUFlZixnQkFBVyxHQUFHLEVBQUUsQ0FBQyxDQUFDLFdBQVc7UUFRN0IsU0FBSSxHQUFzQixNQUFNLENBQUM7UUFDakMsZ0JBQVcsR0FBRyxJQUFJLENBQUM7SUFPNUIsQ0FBQztJQXZCRDs7O09BR0c7SUFDSCxJQUFhLE1BQU0sQ0FBQyxLQUFLO1FBQ3ZCLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBQUEsQ0FBQztJQUVGOzs7T0FHRztJQUNILElBQWEsUUFBUSxDQUFDLEtBQWM7UUFDbEMsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBQ3hDLENBQUM7SUFBQSxDQUFDO0lBVUYsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7U0FDMUI7SUFDSCxDQUFDO0lBQ0QsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7U0FDMUI7SUFDSCxDQUFDO0lBQ0QsaUJBQWlCO1FBQ2YsSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLFFBQVEsRUFBRTtZQUMxQixPQUFPO1NBQ1I7UUFDRCxNQUFNLE1BQU0sR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFDekMsTUFBTSxjQUFjLEdBQUcsQ0FBQyxNQUFNLENBQUM7UUFDL0IsTUFBTSxZQUFZLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBRWpDLElBQUksQ0FBQyxVQUFVLEdBQUcsZUFBZSxjQUFjO1NBQzFDLE1BQU0sSUFBSSxNQUFNLFlBQVksQ0FBQyxZQUFZO1NBQ3pDLE1BQU0sSUFBSSxNQUFNLFlBQVksWUFBWSxFQUFFLENBQUM7UUFFaEQsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBRWpDLElBQUksQ0FBQyxTQUFTLEdBQUc7WUFDZixlQUFlLEVBQUUsR0FBRyxHQUFHLE1BQU0sR0FBRyxJQUFJO1lBQ3BDLGdCQUFnQixFQUFFLEdBQUc7WUFDckIsVUFBVSxFQUFFLHlFQUF5RTtTQUN0RixDQUFDO1FBQ0YsSUFBSSxDQUFDLFVBQVUsR0FBRztZQUNoQixNQUFNLEVBQUUsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFLLElBQVk7WUFDNUQsZUFBZSxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUksTUFBTSxHQUFHLElBQUk7WUFDL0QsZ0JBQWdCLEVBQUUsR0FBRztZQUNyQixVQUFVLEVBQUUscUdBQXFHO1NBQ2xILENBQUM7SUFDSixDQUFDOzs4R0FwRVUsaUJBQWlCO2tHQUFqQixpQkFBaUIsOFVBMEJkLFdBQVcscUVDMUMzQix3OENBd0NBOzJGRHhCYSxpQkFBaUI7a0JBTjdCLFNBQVM7K0JBQ0UsWUFBWSx1QkFHRCxLQUFLOzBFQUdqQixVQUFVO3NCQUFsQixLQUFLO2dCQUNHLGNBQWM7c0JBQXRCLEtBQUs7Z0JBS0csVUFBVTtzQkFBbEIsS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLO2dCQUtPLE1BQU07c0JBQWxCLEtBQUs7Z0JBR0csV0FBVztzQkFBbkIsS0FBSztnQkFLTyxRQUFRO3NCQUFwQixLQUFLO2dCQUdHLElBQUk7c0JBQVosS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLO2dCQUNxQixrQkFBa0I7c0JBQTVDLFlBQVk7dUJBQUMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgQ29udGVudENoaWxkLFxuICBJbnB1dCxcbiAgT25DaGFuZ2VzLFxuICBPbkluaXQsXG4gIFNpbXBsZUNoYW5nZXMsXG4gIFRlbXBsYXRlUmVmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkLXByb2dyZXNzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb2dyZXNzLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIFByb2dyZXNzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0ICwgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgcGVyY2VudGFnZSA9IDA7XG4gIEBJbnB1dCgpIHBlcmNlbnRhZ2VUZXh0OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZFxuICAgKiDnlKhzdHJvbGVDb2xvcuabv+aNolxuICAgKi9cbiAgQElucHV0KCkgYmFyYmdjb2xvcjogc3RyaW5nO1xuICBASW5wdXQoKSBzdHJva2VDb2xvcjogc3RyaW5nO1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWRcbiAgICog57uf5LiA55Soc3Ryb2tlV2lkdGhcbiAgICovXG4gIEBJbnB1dCgpIHNldCBoZWlnaHQodmFsdWUpIHtcbiAgICB0aGlzLnN0cm9rZVdpZHRoID0gcGFyc2VJbnQodmFsdWUsIDEwKTtcbiAgfTtcbiAgQElucHV0KCkgc3Ryb2tlV2lkdGggPSAxNDsgLy8g6L+b5bqm5p2h55qE57q/5p2h5a695bqmXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZFxuICAgKiDnlKh0eXBl57G75Z6L5pu/5o2iXG4gICAqL1xuICBASW5wdXQoKSBzZXQgaXNDaXJjbGUodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLnR5cGUgPSB2YWx1ZSA/ICdjaXJjbGUnIDogJ2xpbmUnO1xuICB9O1xuICBASW5wdXQoKSB0eXBlOiAnbGluZScgfCAnY2lyY2xlJyA9ICdsaW5lJztcbiAgQElucHV0KCkgc2hvd0NvbnRlbnQgPSB0cnVlO1xuICBAQ29udGVudENoaWxkKFRlbXBsYXRlUmVmKSBjdXN0b21WaWV3VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gIHRyYWlsUGF0aDogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfTtcbiAgc3Ryb2tlUGF0aDogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfTtcbiAgcGF0aFN0cmluZzogc3RyaW5nO1xuICBjb25zdHJ1Y3RvcigpIHtcblxuICB9XG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnR5cGUgPT09ICdjaXJjbGUnKSB7XG4gICAgICB0aGlzLnNldENpcmNsZVByb2dyZXNzKCk7XG4gICAgfVxuICB9XG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAodGhpcy50eXBlID09PSAnY2lyY2xlJykge1xuICAgICAgdGhpcy5zZXRDaXJjbGVQcm9ncmVzcygpO1xuICAgIH1cbiAgfVxuICBzZXRDaXJjbGVQcm9ncmVzcygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy50eXBlICE9PSAnY2lyY2xlJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCByYWRpdXMgPSA1MCAtIHRoaXMuc3Ryb2tlV2lkdGggLyAyO1xuICAgIGNvbnN0IGJlZ2luUG9zaXRpb25ZID0gLXJhZGl1cztcbiAgICBjb25zdCBlbmRQb3NpdGlvblkgPSByYWRpdXMgKiAtMjtcblxuICAgIHRoaXMucGF0aFN0cmluZyA9IGBNIDUwLDUwIG0gMCwke2JlZ2luUG9zaXRpb25ZfVxuICAgICBhICR7cmFkaXVzfSwke3JhZGl1c30gMCAxIDEgMCwkey1lbmRQb3NpdGlvbll9XG4gICAgIGEgJHtyYWRpdXN9LCR7cmFkaXVzfSAwIDEgMSAwLCR7ZW5kUG9zaXRpb25ZfWA7XG5cbiAgICBjb25zdCBsZW4gPSBNYXRoLlBJICogMiAqIHJhZGl1cztcblxuICAgIHRoaXMudHJhaWxQYXRoID0ge1xuICAgICAgc3Ryb2tlRGFzaGFycmF5OiBgJHtsZW59cHggJHtsZW59cHhgLFxuICAgICAgc3Ryb2tlRGFzaG9mZnNldDogYDBgLFxuICAgICAgdHJhbnNpdGlvbjogJ3N0cm9rZS1kYXNob2Zmc2V0IC4zcyBlYXNlIDBzLCBzdHJva2UtZGFzaGFycmF5IC4zcyBlYXNlIDBzLCBzdHJva2UgLjNzJ1xuICAgIH07XG4gICAgdGhpcy5zdHJva2VQYXRoID0ge1xuICAgICAgc3Ryb2tlOiB0aGlzLnN0cm9rZUNvbG9yIHx8IHRoaXMuYmFyYmdjb2xvciB8fCAobnVsbCBhcyBhbnkpLFxuICAgICAgc3Ryb2tlRGFzaGFycmF5OiBgJHsodGhpcy5wZXJjZW50YWdlIC8gMTAwKSAqIGxlbiB9cHggJHtsZW59cHhgLFxuICAgICAgc3Ryb2tlRGFzaG9mZnNldDogYDBgLFxuICAgICAgdHJhbnNpdGlvbjogJ3N0cm9rZS1kYXNob2Zmc2V0IC4zcyBlYXNlIDBzLCBzdHJva2UtZGFzaGFycmF5IC4zcyBlYXNlIDBzLCBzdHJva2UgLjNzLCBzdHJva2Utd2lkdGggLjA2cyBlYXNlIC4zcydcbiAgICB9O1xuICB9XG59XG4iLCI8ZGl2ICpuZ0lmPVwidHlwZSAhPT0gJ2NpcmNsZSdcIiBjbGFzcz1cImRldnVpLXByb2dyZXNzXCIgW25nU3R5bGVdPVwieyBoZWlnaHQ6IHN0cm9rZVdpZHRoICsgJ3B4JyB9XCI+XG4gIDxkaXZcbiAgICBjbGFzcz1cImRldnVpLXByb2dyZXNzLWJhclwiXG4gICAgcm9sZT1cInByb2dyZXNzYmFyXCJcbiAgICBhcmlhLXZhbHVlbm93PVwiNjBcIlxuICAgIGFyaWEtdmFsdWVtaW49XCIwXCJcbiAgICBhcmlhLXZhbHVlbWF4PVwiMTAwXCJcbiAgICBbc3R5bGUuYmFja2dyb3VuZC1jb2xvcl09XCJzdHJva2VDb2xvciB8fCBiYXJiZ2NvbG9yXCJcbiAgICBbc3R5bGUud2lkdGhdPVwicGVyY2VudGFnZSArICclJ1wiXG4gID48L2Rpdj5cbiAgPHNwYW4gW3N0eWxlLmxpbmUtaGVpZ2h0XT1cInN0cm9rZVdpZHRoICsgJ3B4J1wiPnt7IHBlcmNlbnRhZ2VUZXh0IH19PC9zcGFuPlxuPC9kaXY+XG48ZGl2ICpuZ0lmPVwidHlwZSA9PT0gJ2NpcmNsZSdcIiBjbGFzcz1cImRldnVpLXByb2dyZXNzLWNpcmNsZVwiPlxuICA8c3ZnIGNsYXNzPVwiZGV2dWktcHJvZ3Jlc3MtY2lyY2xlXCIgdmlld0JveD1cIjAgMCAxMDAgMTAwXCI+XG4gICAgPHBhdGhcbiAgICAgIGNsYXNzPVwiZGV2dWktcHJvZ3Jlc3MtY2lyY2xlLXRyYWlsXCJcbiAgICAgIGZpbGwtb3BhY2l0eT1cIjBcIlxuICAgICAgW2F0dHIuc3Ryb2tlLXdpZHRoXT1cInN0cm9rZVdpZHRoXCJcbiAgICAgIFtuZ1N0eWxlXT1cInRyYWlsUGF0aFwiXG4gICAgICBbYXR0ci5kXT1cInBhdGhTdHJpbmdcIlxuICAgID48L3BhdGg+XG4gICAgPHBhdGhcbiAgICAgIGNsYXNzPVwiZGV2dWktcHJvZ3Jlc3MtY2lyY2xlLXBhdGhcIlxuICAgICAgW2F0dHIuZF09XCJwYXRoU3RyaW5nXCJcbiAgICAgIFthdHRyLnN0cm9rZS1saW5lY2FwXT1cIidyb3VuZCdcIlxuICAgICAgZmlsbC1vcGFjaXR5PVwiMFwiXG4gICAgICBbYXR0ci5zdHJva2VdPVwic3Ryb2tlQ29sb3IgfHwgYmFyYmdjb2xvclwiXG4gICAgICBbYXR0ci5zdHJva2Utd2lkdGhdPVwicGVyY2VudGFnZSA/IHN0cm9rZVdpZHRoIDogMFwiXG4gICAgICBbbmdTdHlsZV09XCJzdHJva2VQYXRoXCJcbiAgICA+PC9wYXRoPlxuICA8L3N2Zz5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInNob3dDb250ZW50XCI+XG4gICAgPG5nLXRlbXBsYXRlXG4gICAgICAqbmdJZj1cImN1c3RvbVZpZXdUZW1wbGF0ZVwiXG4gICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJjdXN0b21WaWV3VGVtcGxhdGVcIlxuICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInsgJGltcGxpY2l0OiB0aGlzLCBwZXJjZW50YWdlOiBwZXJjZW50YWdlIH1cIlxuICAgID48L25nLXRlbXBsYXRlPlxuICAgIDxzcGFuICpuZ0lmPVwiIWN1c3RvbVZpZXdUZW1wbGF0ZVwiIGNsYXNzPVwiZGV2dWktcHJvZ3Jlc3MtY2lyY2xlLXRleHRcIj57eyBwZXJjZW50YWdlIH19JTwvc3Bhbj5cbiAgPC9uZy1jb250YWluZXI+XG48L2Rpdj5cbiJdfQ==