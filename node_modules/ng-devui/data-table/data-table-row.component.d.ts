import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnInit } from '@angular/core';
import { ForceUpdateReason } from './force-update-reason.model';
import { DataTableColumnTmplComponent } from './tmpl/data-table-column-tmpl.component';
import * as i0 from "@angular/core";
export declare class DataTableRowComponent implements OnInit {
    dt: any;
    private changeDetectorRef;
    private rowRef;
    private ngZone;
    rowItem: any;
    fontWeight: string;
    verticalAlign: string;
    selectable: boolean;
    checkable: boolean;
    showExpandToggle: boolean;
    rowIndex: number;
    allChecked: boolean;
    columns: DataTableColumnTmplComponent[];
    editModel: string;
    editRowItem: any;
    resizeable: boolean;
    timeout: number;
    tableLevel: number;
    nestedIndex: string;
    generalRowHoveredData: boolean;
    detailChange: EventEmitter<any>;
    forceUpdateEvent: EventEmitter<ForceUpdateReason>;
    clickCount: number;
    timeoutId: any;
    constructor(dt: any, changeDetectorRef: ChangeDetectorRef, rowRef: ElementRef, ngZone: NgZone);
    ngOnInit(): void;
    forceUpdate(): void;
    onRowClick($event: any): void;
    onRowDBClick($event: any): void;
    onRowMouseEnter($event: any): void;
    onRowMouseLeave($event: any): void;
    onRowCheckChange($event: any, rowIndex: any, nestedIndex: any, rowItem: any): void;
    toggle(): void;
    trackByFn(index: any, item: any): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<DataTableRowComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DataTableRowComponent, "d-data-table-row, [dDataTableRow]", never, { "rowItem": "rowItem"; "selectable": "selectable"; "checkable": "checkable"; "showExpandToggle": "showExpandToggle"; "rowIndex": "rowIndex"; "allChecked": "allChecked"; "columns": "columns"; "editModel": "editModel"; "editRowItem": "editRowItem"; "resizeable": "resizeable"; "timeout": "timeout"; "tableLevel": "tableLevel"; "nestedIndex": "nestedIndex"; "generalRowHoveredData": "generalRowHoveredData"; }, { "detailChange": "detailChange"; }, never, never>;
}
