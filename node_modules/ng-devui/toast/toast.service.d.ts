import { ComponentFactoryResolver, Injector, Type } from '@angular/core';
import { OverlayContainerRef } from 'ng-devui/overlay-container';
import { Message, ToastComponent } from './toast.component';
import * as i0 from "@angular/core";
export interface IToastOptions {
    value?: Array<Message>;
    life?: number;
    lifeMode?: string;
    style?: object;
    styleClass?: string;
    sticky?: boolean;
    injector?: Injector;
    component?: Type<any>;
    componentFactoryResolver?: ComponentFactoryResolver;
}
export declare class ToastService {
    private overlayContainerRef;
    private componentFactoryResolver;
    constructor(overlayContainerRef: OverlayContainerRef, componentFactoryResolver: ComponentFactoryResolver);
    open({ value, life, lifeMode, sticky, style, styleClass, injector, 
    /**
     * @deprecated
     */
    component, componentFactoryResolver, }?: IToastOptions): {
        toastInstance: ToastComponent;
    };
    static ɵfac: i0.ɵɵFactoryDeclaration<ToastService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ToastService>;
}
