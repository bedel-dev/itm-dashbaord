{"version":3,"file":"ng-devui-tree.mjs","sources":["../../devui/tree/tree-factory.class.ts","../../devui/tree/pipe/filter-nodes.pipe.ts","../../devui/tree/tree-nodes.component.ts","../../devui/tree/tree-nodes.component.html","../../devui/tree/pipe/transfer-to-array.pipe.ts","../../devui/tree/tree.component.ts","../../devui/tree/tree.component.html","../../devui/tree/auto-focus.directive.ts","../../devui/tree/operable-tree.component.ts","../../devui/tree/operable-tree.component.html","../../devui/tree/tree.module.ts","../../devui/tree/ng-devui-tree.ts"],"sourcesContent":["import { forEach, isUndefined, omitBy, pickBy, reduce, trim, values } from 'lodash-es';\nimport { BehaviorSubject } from 'rxjs';\nexport interface Dictionary<T> {\n  [id: number]: T;\n}\nexport interface ITreeNodeData {\n  id?: number | string;\n  parentId?: number | string;\n  title?: string;\n  isOpen?: boolean;\n  data?: any;\n  isParent?: boolean;\n  loading?: boolean;\n  isMatch?: boolean;\n  isHide?: boolean;\n  isActive?: boolean;\n  isChecked?: boolean;\n  disabled?: boolean;\n\n  [prop: string]: any;\n\n  children?: [];\n}\n\nexport interface ITreeMap {\n  [index: number]: ITreeNodeData;\n}\n\nexport interface ITreeItem {\n  title?: string;\n  open?: boolean;\n  loading?: boolean;\n  isMatch?: boolean;\n  items?: ITreeItem[];\n  isParent?: boolean;\n  data?: any;\n  id?: number | string;\n  isHide?: boolean;\n  isActive?: boolean;\n  isChecked?: boolean;\n  halfChecked?: boolean;\n  disabled?: boolean;\n  showCheckbox?: boolean;\n  [prop: string]: any;\n\n  disableAdd?: boolean;\n  disableEdit?: boolean;\n  disableDelete?: boolean;\n  disableSelect?: boolean;\n  disableToggle?: boolean;\n}\n\nexport interface ITreeInput {\n  treeItems: Array<ITreeItem>;\n  parentId?: number | string;\n  treeNodeChildrenKey?: string;\n  treeNodeIdKey?: string;\n  checkboxDisabledKey?: string;\n  selectDisabledKey?: string;\n  toggleDisabledKey?: string;\n  treeNodeTitleKey?: string;\n  isVirtualScroll?: boolean;\n}\n\nexport class TreeNode implements ITreeNodeData {\n  constructor(public id, public parentId, public data) {}\n}\n\nexport class TreeFactory {\n  nodes: Dictionary<TreeNode>;\n  private idx: number;\n  private _checked = new Set<Object>();\n  private _treeRoot: TreeNode[] = [];\n  searchItem: string;\n  flattenNodes = new BehaviorSubject<TreeNode[]>([]);\n  virtualScroll: boolean;\n  static create(isVirtualScroll) {\n    return new TreeFactory(isVirtualScroll);\n  }\n\n  // tree model with items\n  static fromTree({\n    treeItems,\n    isVirtualScroll = false,\n    treeNodeChildrenKey = 'items',\n    treeNodeIdKey = 'id',\n    checkboxDisabledKey = 'disabled',\n    selectDisabledKey = 'disabled', // 默认值与checkboxDisabledKey相同，为了兼容以前tree的disable情况\n    toggleDisabledKey = 'disabledToggle',\n    treeNodeTitleKey = 'title',\n  }: ITreeInput): TreeFactory {\n    const treeFactory = TreeFactory.create(isVirtualScroll);\n    treeFactory.mapTreeItems(\n      {\n        treeItems,\n        parentId: undefined,\n        treeNodeChildrenKey,\n        treeNodeIdKey,\n        checkboxDisabledKey,\n        selectDisabledKey,\n        toggleDisabledKey,\n        treeNodeTitleKey,\n      },\n      false\n    );\n    return treeFactory;\n  }\n\n  constructor(public isVirtualScroll) {\n    this.virtualScroll = isVirtualScroll;\n    this.idx = 0;\n    this.nodes = {};\n  }\n\n  mapTreeItems = (\n    {\n      treeItems,\n      parentId,\n      treeNodeChildrenKey = 'items',\n      treeNodeIdKey = 'id',\n      checkboxDisabledKey = 'disabled',\n      selectDisabledKey = 'disableSelect',\n      toggleDisabledKey = 'disableToggle',\n      treeNodeTitleKey = 'title',\n    }: ITreeInput,\n    renderTree = true\n  ) => {\n    forEach(treeItems, (item: ITreeItem) => {\n      const node = this.addNode(\n        {\n          id: item[treeNodeIdKey],\n          parentId,\n          title: item[treeNodeTitleKey],\n          isOpen: !!item.open,\n          data: item.data || {},\n          originItem: item,\n          isParent: !!item.isParent || !!(item[treeNodeChildrenKey] && item[treeNodeChildrenKey].length > 0),\n          loading: !!item.loading,\n          isMatch: !!item.isMatch,\n          isHide: !!item.isHide,\n          isChecked: !!item.isChecked,\n          halfChecked: !!item.halfChecked,\n          isActive: !!item.isActive,\n          disabled: !!item[checkboxDisabledKey],\n          disableSelect: !!item[selectDisabledKey],\n          disableToggle: !!item[toggleDisabledKey],\n          disableAdd: !!item.disableAdd,\n          disableEdit: !!item.disableEdit,\n          disableDelete: !!item.disableDelete,\n          children: [],\n          showCheckbox: item.showCheckbox,\n        },\n        undefined,\n        renderTree\n      );\n\n      if (item.isChecked) {\n        this._checked.add(node);\n      }\n\n      this.mapTreeItems(\n        {\n          treeItems: item[treeNodeChildrenKey] || [],\n          parentId: node.id,\n          treeNodeChildrenKey,\n          treeNodeIdKey,\n          checkboxDisabledKey,\n          selectDisabledKey,\n          toggleDisabledKey,\n          treeNodeTitleKey,\n        },\n        renderTree\n      );\n    });\n    return this;\n  };\n\n  addNode({ id, parentId, ...data }: ITreeNodeData, index?, renderTree = true): TreeNode {\n    let newId = id;\n    if (isUndefined(id)) {\n      this.idx++;\n      newId = this.idx;\n    }\n    const treeNode = new TreeNode(newId, parentId, data);\n    if (Object.prototype.hasOwnProperty.call(this.nodes, treeNode.id)) {\n      throw new Error(`Duplicated id: ${treeNode.id} detected, please specify unique ids in the tree.`);\n    }\n    this.nodes[treeNode.id] = treeNode;\n    this.addChildNode(this.nodes[parentId], treeNode, index);\n    // 兼容当前用户外部直接调用addNode方法创建节点\n    if (renderTree) {\n      this.renderFlattenTree();\n    }\n    return treeNode;\n  }\n\n  editNodeTitle(id: number | string) {\n    if (!this.nodes[id]) {\n      return;\n    }\n    this.nodes[id].data.editable = true;\n  }\n\n  deleteNodeById(id: number | string, renderTree = true) {\n    const node = this.nodes[id];\n    const parentNode = this.nodes[node.parentId];\n    this.removeChildNode(parentNode, node);\n\n    const deleteItems = (nodeId) => {\n      this.maintainCheckedNodeList(this.nodes[nodeId], false);\n      const children = this.getChildrenById(nodeId);\n      this.nodes = omitBy<Dictionary<TreeNode>>(this.nodes, (_node) => {\n        return _node.id === nodeId;\n      });\n      forEach(children, (child) => {\n        deleteItems(child.id);\n      });\n    };\n    deleteItems(id);\n    if (parentNode && (!parentNode.data.children || !parentNode.data.children.length)) {\n      parentNode.data.isParent = false;\n    }\n    if (renderTree) {\n      this.renderFlattenTree();\n    }\n    return this;\n  }\n\n  toggleNodeById(id: number | string) {\n    if (!this.nodes[id]) {\n      return;\n    }\n    this.nodes[id].data.isOpen = !this.nodes[id].data.isOpen;\n    this.renderFlattenTree();\n    return this;\n  }\n\n  openNodesById(id: number | string) {\n    if (!this.nodes[id]) {\n      return;\n    }\n    this.nodes[id].data.isOpen = true;\n    if (this.nodes[id].parentId !== undefined) {\n      this.openNodesById(this.nodes[id].parentId);\n    }\n    this.renderFlattenTree();\n    return this;\n  }\n\n  closeNodesById(id: number | string, closeChildren = false) {\n    if (!this.nodes[id]) {\n      return;\n    }\n    this.nodes[id].data.isOpen = false;\n    if (closeChildren) {\n      if (this.nodes[id] && this.nodes[id].data.children) {\n        this.nodes[id].data.children.forEach((node) => {\n          this.closeNodesById(node.id);\n        });\n      }\n    }\n    this.renderFlattenTree();\n    return this;\n  }\n\n  disabledNodesById(id: number | string) {\n    if (!this.nodes[id]) {\n      return;\n    }\n    this.nodes[id].data.disabled = true;\n\n    const parentId = this.nodes[id].parentId;\n    this._disabledParentNodes(parentId);\n\n    const disabledNodes = (nodeId: number | string) => {\n      const children = this.getChildrenById(nodeId);\n      if (children.length > 0) {\n        children.forEach((child) => {\n          this.nodes[child.id].data.disabled = true;\n          disabledNodes(child.id);\n        });\n      }\n    };\n    disabledNodes(id);\n    return this;\n  }\n\n  private _disabledParentNodes(parentId: number | string | undefined) {\n    const children = this.getChildrenById(parentId);\n\n    if (children.length < 1) {\n      return;\n    }\n    const result = reduce(\n      children,\n      (status: boolean, child) => {\n        return status && child.data.disabled;\n      },\n      true\n    );\n\n    if (this.nodes[parentId]) {\n      this.nodes[parentId].data.disabled = result;\n    }\n  }\n\n  checkNodesById(\n    id: number | string,\n    checked: boolean,\n    checkableRelation: 'upward' | 'downward' | 'both' | 'none' = 'both'\n  ): Array<Object> {\n    if (!this.nodes[id]) {\n      return;\n    }\n    this.nodes[id].data.halfChecked = false;\n    this.nodes[id].data.isChecked = checked;\n    switch (checkableRelation) {\n    case 'upward':\n      this.checkParentNodes(this.nodes[id]);\n      break;\n    case 'downward':\n      this.checkChildNodes(this.nodes[id], checked);\n      break;\n    case 'both':\n      this.checkParentNodes(this.nodes[id]);\n      this.checkChildNodes(this.nodes[id], checked);\n      break;\n    case 'none':\n      break;\n    default:\n      break;\n    }\n    this.maintainCheckedNodeList(this.nodes[id], checked);\n    return this.getCheckedNodes();\n  }\n\n  private checkParentNodes(node: TreeNode) {\n    const { parentId } = node;\n    const parentNode = this.nodes[parentId];\n    if (parentNode) {\n      const childrenNode = this.getChildrenById(parentId);\n      if (childrenNode.every((childNode) => childNode.data.isChecked && !childNode.data.halfChecked)) {\n        parentNode.data.isChecked = true;\n        parentNode.data.halfChecked = false;\n      } else if (childrenNode.some((childNode) => childNode.data.halfChecked || childNode.data.isChecked)) {\n        parentNode.data.isChecked = true;\n        parentNode.data.halfChecked = true;\n      } else {\n        parentNode.data.isChecked = false;\n        parentNode.data.halfChecked = false;\n      }\n      this.maintainCheckedNodeList(parentNode, parentNode.data.isChecked);\n      this.checkParentNodes(parentNode);\n    }\n  }\n\n  private checkChildNodes(node: TreeNode, checked: boolean) {\n    const { id } = node;\n    const childrenNode = this.getChildrenById(id);\n    if (childrenNode.length > 0) {\n      childrenNode.forEach((childNode) => {\n        const { id: childId } = childNode;\n        const { data: nodeData } = this.nodes[childId];\n        if (!nodeData.disabled) {\n          nodeData.isChecked = checked;\n          nodeData.halfChecked = false;\n          this.maintainCheckedNodeList(childNode, checked);\n        }\n        this.checkChildNodes(childNode, checked);\n      });\n      const childrenFullCheckedCount = childrenNode.filter(({ data: nodeData }) => nodeData.isChecked).length;\n      const childrenCheckedCount = childrenNode.filter(({ data: nodeData }) => nodeData.isChecked || nodeData.halfChecked).length;\n      node.data.halfChecked = childrenCheckedCount > 0 && childrenNode.length > childrenFullCheckedCount;\n    }\n  }\n\n  getCheckedNodes(): Array<any> {\n    return Array.from(this._checked);\n  }\n\n  getActivatedNodes(): Array<any> {\n    const results = pickBy(this.nodes, (node) => node.data.isActive === true);\n    return values(results);\n  }\n\n  getDisabledNodes(): Array<any> {\n    const results = pickBy(this.nodes, (node) => node.data.disabled === true);\n    return values(results);\n  }\n\n  activeNodeById(id: number | string, isMultiple?: boolean) {\n    if (!this.nodes[id]) {\n      return;\n    }\n    if (!isMultiple) {\n      this.deactivateAllNodes();\n    }\n    this.nodes[id].data.isActive = !this.nodes[id].data.isActive;\n  }\n\n  getChildrenById(id: number | string): Array<TreeNode> {\n    if (this.nodes[id]) {\n      return this.nodes[id].data.children || [];\n    } else if (id === undefined) {\n      return this._treeRoot;\n    }\n\n    return [];\n  }\n\n  startLoading(id: number | string) {\n    if (!this.nodes[id]) {\n      return;\n    }\n    this.nodes[id].data.loading = true;\n  }\n\n  endLoading(id: number | string) {\n    if (!this.nodes[id]) {\n      return;\n    }\n    this.nodes[id].data.loading = false;\n  }\n\n  getNodeById(id: number | string): any {\n    if (!this.nodes[id]) {\n      return;\n    }\n    return this.nodes[id].data;\n  }\n\n  getCompleteNodeById(id: number | string): any {\n    return this.nodes[id];\n  }\n\n  hideNodeById(id: number | string, hide: boolean) {\n    if (!this.nodes[id]) {\n      return;\n    }\n    this.nodes[id].data.isHide = hide;\n    this.renderFlattenTree();\n    return this;\n  }\n\n  private maintainCheckedNodeList(node: TreeNode, checked: boolean) {\n    if (checked && !node.data.halfChecked) {\n      this._checked.add(node);\n    } else {\n      this._checked.delete(node);\n    }\n  }\n\n  private dfs(target, tree, hideUnmatched?: boolean, keyword?, pattern?) {\n    if (!tree) {\n      return false;\n    }\n    if (!target) {\n      return false;\n    }\n    if (Array.isArray(tree)) {\n      return tree.map((treeNode) => {\n        return this.dfs(target, treeNode, hideUnmatched, keyword, pattern);\n      });\n    } else {\n      const treeNode = tree;\n      const treeChildren = this.getChildrenById(treeNode.id);\n      const key = keyword ? treeNode.data.originItem[keyword] : treeNode.data.title;\n      const selfMatched = pattern ? pattern.test(key) : key.toLowerCase().includes(target);\n      if (selfMatched) {\n        treeNode.data.isMatch = true;\n        treeNode.data.isCustomSearch = keyword;\n      }\n      // Test if children matches target recursively, do not hide children if parent is matched.\n      const childrenMatched = this.dfs(target, treeChildren, hideUnmatched && !selfMatched, keyword, pattern).some((_) => !!_);\n      if (selfMatched || childrenMatched) {\n        if (childrenMatched && treeChildren.length > 0) {\n          this.openNodesById(treeNode.id);\n        }\n        return true;\n      } else {\n        treeNode.data.isHide = hideUnmatched;\n        return false;\n      }\n    }\n  }\n\n  public addChildNode(parentNode: TreeNode, childNode: TreeNode, index?) {\n    if (parentNode) {\n      Array.isArray(parentNode.data.children)\n        ? index !== undefined\n          ? parentNode.data.children.splice(index, 0, childNode)\n          : parentNode.data.children.push(childNode)\n        : (parentNode.data.children = [childNode]);\n    } else {\n      index !== undefined ? this._treeRoot.splice(index, 0, childNode) : this._treeRoot.push(childNode);\n    }\n  }\n\n  private removeChildNode(parentNode: TreeNode, childNode: TreeNode) {\n    if (parentNode) {\n      parentNode.data.children = parentNode.data.children.filter((node) => node.id !== childNode.id);\n    } else {\n      this._treeRoot = this._treeRoot.filter((node) => node.id !== childNode.id);\n    }\n  }\n\n  private resetSearchResults() {\n    Object.keys(this.nodes).forEach((key) => {\n      const treeNode = this.nodes[key];\n      treeNode.data.isMatch = false;\n      treeNode.data.isHide = false;\n      treeNode.data.isCustomSearch = false;\n    });\n  }\n\n  public searchTree(target: string, hideUnmatched = false, keyword?, pattern?) {\n    this.searchItem = target;\n    const TrimmedTarget = trim(target);\n    this.resetSearchResults();\n    return this.dfs(TrimmedTarget.toLowerCase(), this._treeRoot, hideUnmatched, keyword, pattern);\n  }\n\n  get treeRoot() {\n    return this._treeRoot;\n  }\n\n  public deactivateAllNodes() {\n    for (const id of Object.keys(this.nodes)) {\n      this.nodes[id].data.isActive = false;\n    }\n  }\n\n  public checkAllNodes(checked: boolean) {\n    for (const id of Object.keys(this.nodes)) {\n      if (!this.nodes[id].data.disabled) {\n        this.nodes[id].data.halfChecked = false;\n        this.nodes[id].data.isChecked = checked;\n      }\n      this.maintainCheckedNodeList(this.nodes[id], this.nodes[id].data.isChecked);\n    }\n  }\n\n  public getNodeIndex(node: TreeNode) {\n    let parentNode;\n    let children;\n    if (node.parentId !== undefined) {\n      parentNode = this.getNodeById(node.parentId);\n      children = parentNode.children;\n    } else {\n      children = this.treeRoot;\n    }\n    for (let i = 0; i < children.length; i++) {\n      if (children[i].id === node.id) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  public checkIsParent(childNodeId: number | string, parentNodeId: number | string) {\n    const realParentId = this.nodes[childNodeId].parentId;\n    if (realParentId === parentNodeId) {\n      return true;\n    } else if (realParentId !== undefined) {\n      return this.checkIsParent(realParentId, parentNodeId);\n    } else {\n      return false;\n    }\n  }\n\n  public getFlattenNodes() {\n    this.flattenNodes.next(this.flattenTree());\n  }\n\n  public flattenTree() {\n    const flattenTree = [];\n    const flatTree = (nodes) => {\n      for (let i = 0; i < nodes.length; i++) {\n        nodes[i].data.depth = nodes[i].parentId ? this.nodes[nodes[i].parentId].data.depth + 1 : 0;\n        nodes[i].data.hideInVirtualScroll =\n          nodes[i].data.isHide ||\n          (nodes[i].parentId\n            ? this.nodes[nodes[i].parentId].data.hideInVirtualScroll || !this.nodes[nodes[i].parentId].data.isOpen\n            : false);\n        nodes[i].data.isLast = i === nodes.length - 1;\n        flattenTree.push(nodes[i]);\n        if (nodes[i].data.children) {\n          flatTree(nodes[i].data.children);\n        }\n      }\n    };\n    flatTree(this.treeRoot);\n    return flattenTree;\n  }\n\n  public mergeTreeNodes(targetNode = this.treeRoot) {\n    const mergeToNode = (node) => {\n      if (node.data.children?.length === 1 && node.data.children[0]?.data?.children?.length !== 0) {\n        node.data.title = node.data.title + ' / ' + node.data.children[0]?.data?.title;\n        node.data.children = node.data.children[0]?.data?.children;\n        mergeToNode(node);\n      }\n      if (node.data.children?.length > 1) {\n        node.data.children.forEach((element) => {\n          mergeToNode(element);\n        });\n      }\n    };\n    if (targetNode === this.treeRoot) {\n      this.treeRoot.forEach((element) => {\n        mergeToNode(element);\n      });\n    } else {\n      mergeToNode(targetNode);\n    }\n  }\n\n  public renderFlattenTree() {\n    if (!this.virtualScroll) {\n      return;\n    }\n    this.getFlattenNodes();\n  }\n\n  public disableAllNodesChecked(disabled = true) {\n    for (const id of Object.keys(this.nodes)) {\n      this.nodes[id].data.disabled = disabled;\n    }\n  }\n\n  public disableAllNodesSelected(disabled = true) {\n    for (const id of Object.keys(this.nodes)) {\n      this.nodes[id].data.disableSelect = disabled;\n    }\n  }\n\n  public disableAllNodesToggled(disabled = true) {\n    for (const id of Object.keys(this.nodes)) {\n      this.nodes[id].data.disableToggle = disabled;\n    }\n  }\n\n  public transferToTreeNode(\n    originNode,\n    parentId?,\n    treeNodeChildrenKey = 'items',\n    treeNodeIdKey = 'id',\n    checkboxDisabledKey = 'disabled',\n    selectDisabledKey = 'disableSelect',\n    toggleDisabledKey = 'disableToggle',\n    treeNodeTitleKey = 'title'\n  ) {\n    const node = {\n      id: originNode[treeNodeIdKey],\n      parentId,\n      title: originNode[treeNodeTitleKey],\n      isOpen: !!originNode.open,\n      data: originNode.data || {},\n      originItem: originNode,\n      isParent: !!originNode.isParent || !!(originNode[treeNodeChildrenKey] && originNode[treeNodeChildrenKey].length > 0),\n      loading: !!originNode.loading,\n      isMatch: !!originNode.isMatch,\n      isHide: !!originNode.isHide,\n      isChecked: !!originNode.isChecked,\n      halfChecked: !!originNode.halfChecked,\n      isActive: !!originNode.isActive,\n      disabled: !!originNode[checkboxDisabledKey],\n      disableSelect: !!originNode[selectDisabledKey],\n      disableToggle: !!originNode[toggleDisabledKey],\n      disableAdd: !!originNode.disableAdd,\n      disableEdit: !!originNode.disableEdit,\n      disableDelete: !!originNode.disableDelete,\n      children: [],\n    };\n    return new TreeNode(node.id, node.parentId, { ...node });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'filterNodesPipe' })\nexport class FilterNodesPipe implements PipeTransform {\n\n  constructor() {\n  }\n\n  transform(nodes, key) {\n    return nodes.filter(item => !item.data[key]);\n  }\n}\n","import {\n  Component,\n  Input,\n  TemplateRef\n} from '@angular/core';\nimport {\n  TreeFactory,\n  TreeNode\n} from './tree-factory.class';\n\n@Component({\n  selector: 'd-tree-nodes',\n  templateUrl: './tree-nodes.component.html',\n  styleUrls: ['./tree-nodes.component.scss'],\n  preserveWhitespaces: false,\n})\nexport class TreeNodesComponent {\n  @Input() treeList: Array<TreeNode>;\n  @Input() treeNodesRef: TemplateRef<any>;\n  @Input() treeFactory: TreeFactory;\n  @Input() virtualScroll = false;\n  trackByFn(index, item) {\n    return index;\n  }\n}\n","<ng-container *ngIf=\"virtualScroll\">\n  <ng-template\n    *cdkVirtualFor=\"let treeNode of treeList | filterNodesPipe: 'hideInVirtualScroll'; trackBy: trackByFn\"\n    [ngTemplateOutlet]=\"treeNodesRef\"\n    [ngTemplateOutletContext]=\"{\n      $implicit: this,\n      treeNode: treeNode,\n      treeFactory: treeFactory\n    }\"\n  >\n  </ng-template>\n</ng-container>\n<ng-container *ngIf=\"!virtualScroll\">\n  <ng-template\n    *ngFor=\"let treeNode of treeList; trackBy: trackByFn\"\n    [ngTemplateOutlet]=\"treeNodesRef\"\n    [ngTemplateOutletContext]=\"{\n      $implicit: this,\n      treeNode: treeNode,\n      treeFactory: treeFactory\n    }\"\n  >\n  </ng-template>\n</ng-container>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'transferToArrayPipe' })\nexport class TransferToArrayPipe implements PipeTransform {\n\n  constructor() {\n  }\n\n  transform(number) {\n    return Array(number).fill(0);\n  }\n}\n","import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { I18nInterface, I18nService } from 'ng-devui/i18n';\nimport { DevConfigService, expandCollapseForDomDestroy, WithConfig } from 'ng-devui/utils';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  Dictionary,\n  ITreeItem,\n  TreeFactory,\n  TreeNode\n} from './tree-factory.class';\n@Component({\n  selector: 'd-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss'],\n  preserveWhitespaces: false,\n  animations: [expandCollapseForDomDestroy]\n})\nexport class TreeComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  treeFactory: TreeFactory;\n  @Input() tree: Array<ITreeItem>;\n  @Input() treeNodesRef: TemplateRef<any>;\n  @Input() treeNodeIdKey: string;\n  @Input() treeNodeChildrenKey: string;\n  @Input() iconParentOpen: string;\n  @Input() iconParentClose: string;\n  @Input() iconLeaf: string;\n  @Input() loadingTemplateRef: TemplateRef<any>;\n  @Input() treeNodeTitleKey = 'title';\n  @Input() checkboxDisabledKey = 'disabled';\n  @Input() selectDisabledKey = 'disabled';\n  @Input() toggleDisabledKey = 'disableToggle';\n  @Input() virtualScroll = false;\n  @Input() virtualScrollHeight = '800px';\n  @Input() @WithConfig() showAnimation = true;\n  @Input() minBufferPx = 600;\n  @Input() maxBufferPx = 900;\n  @Input() itemSize = 30;\n  @Output() nodeSelected = new EventEmitter<TreeNode>();\n  @Output() nodeDblClicked = new EventEmitter<TreeNode>();\n  @Output() nodeRightClicked = new EventEmitter<{ node: TreeNode; event: MouseEvent }>();\n  @Output() nodeToggled = new EventEmitter<TreeNode>();\n  @Output() afterTreeInit = new EventEmitter<Dictionary<TreeNode>>();\n  @ViewChildren('treeNodeContent') treeNodeContent: QueryList<ElementRef>; // 获取content以取得tree宽度\n  @ViewChild(CdkVirtualScrollViewport) viewPort: CdkVirtualScrollViewport;\n  i18nCommonText: I18nInterface['common'];\n  i18nSubscription: Subscription;\n  treeNodes = [];\n  destroy$ = new Subject();\n  afterInitAnimate = true;\n  constructor(private i18n: I18nService, private devConfigService: DevConfigService) {\n\n  }\n\n  ngOnInit() {\n    this.initTree();\n    this.i18nCommonText = this.i18n.getI18nText().common;\n    this.i18nSubscription = this.i18n.langChange().subscribe((data) => {\n      this.i18nCommonText = data.common;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes && changes.tree && !changes.tree.isFirstChange()) {\n      this.initTree();\n    }\n  }\n\n  initTree() {\n    this.treeFactory = TreeFactory.fromTree({\n      treeItems: this.tree,\n      isVirtualScroll: this.virtualScroll,\n      treeNodeChildrenKey: this.treeNodeChildrenKey,\n      treeNodeIdKey: this.treeNodeIdKey,\n      treeNodeTitleKey: this.treeNodeTitleKey,\n      checkboxDisabledKey: this.checkboxDisabledKey,\n      selectDisabledKey: this.selectDisabledKey,\n      toggleDisabledKey: this.toggleDisabledKey\n    });\n    if (this.virtualScroll) {\n      this.treeFactory.flattenNodes.pipe(takeUntil(this.destroy$)).subscribe(data => {\n        this.treeNodes = data;\n      });\n      this.treeFactory.getFlattenNodes();\n    }\n    this.afterTreeInit.emit(this.treeFactory.nodes);\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.afterInitAnimate = false;\n    });\n  }\n\n  contextmenuEvent(event, node) {\n    this.nodeRightClicked.emit({ node: node, event: event });\n  }\n\n  selectNode(event, treeNode: TreeNode) {\n    if (treeNode.data.disableSelect) {\n      return;\n    }\n    if (!this.isSelectableRegion(event.target)) {\n      return;\n    }\n    this.nodeSelected.emit(treeNode);\n    this.treeFactory.activeNodeById(treeNode.id);\n  }\n\n  toggleNode(event, treeNode: TreeNode) {\n    if (treeNode.data.disableToggle) {\n      return;\n    }\n    this.treeFactory.toggleNodeById(treeNode.id);\n    this.nodeToggled.emit(treeNode);\n  }\n\n  scrollToIndex(index: number) {\n    this.viewPort.scrollToIndex(index, 'smooth');\n  }\n\n  public appendTreeItems(treeItems: Array<ITreeItem>, parentId) {\n    if (!this.treeFactory.nodes[parentId]) {\n      throw new Error('parent node does not exist.');\n    }\n    this.treeFactory.mapTreeItems({\n      treeItems: treeItems,\n      parentId: parentId,\n      treeNodeChildrenKey: this.treeNodeChildrenKey,\n      treeNodeIdKey: this.treeNodeIdKey,\n      treeNodeTitleKey: this.treeNodeTitleKey,\n      checkboxDisabledKey: this.checkboxDisabledKey,\n      selectDisabledKey: this.selectDisabledKey,\n      toggleDisabledKey: this.toggleDisabledKey\n    });\n  }\n  public nodeDblClick(event, node) {\n    this.nodeDblClicked.emit(node);\n  }\n\n  public isSelectableRegion(ele) {\n    if (ele && !ele.classList.contains('devui-tree-node__content--value-wrapper')\n      && !ele.classList.contains('devui-tree-node__content')\n      && !ele.classList.contains('devui-tree-node__title')\n      && ele.tagName !== 'D-HIGHLIGHT'\n      && ele.parentNode?.tagName !== 'D-HIGHLIGHT') {\n      return false;\n    }\n    return true;\n  }\n\n  ngOnDestroy() {\n    if (this.i18nSubscription) {\n      this.i18nSubscription.unsubscribe();\n\n    }\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<cdk-virtual-scroll-viewport\n  *ngIf=\"virtualScroll\"\n  [itemSize]=\"itemSize\"\n  [minBufferPx]=\"minBufferPx\"\n  [maxBufferPx]=\"maxBufferPx\"\n  [style.height]=\"virtualScrollHeight\"\n>\n  <d-tree-nodes\n    [virtualScroll]=\"true\"\n    [treeList]=\"treeNodes\"\n    [treeNodesRef]=\"treeNodesRef ? treeNodesRef : virtualScrollRef\"\n    [treeFactory]=\"treeFactory\"\n  >\n  </d-tree-nodes>\n</cdk-virtual-scroll-viewport>\n\n<d-tree-nodes\n  *ngIf=\"!virtualScroll\"\n  [treeList]=\"treeFactory.treeRoot\"\n  [treeNodesRef]=\"treeNodesRef ? treeNodesRef : default\"\n  [treeFactory]=\"treeFactory\"\n>\n</d-tree-nodes>\n<!-- TODO: 虚拟滚动支持动效 -->\n<ng-template #virtualScrollRef let-treeNode=\"treeNode\" let-treeFactory=\"treeFactory\">\n  <div\n    class=\"devui-tree-node\"\n    [style.paddingLeft.px]=\"treeNode.data.depth * 24\"\n    [ngClass]=\"{\n      'devui-tree-node__open': treeNode.data.isOpen,\n      'devui-tree-node__customIcon': iconParentClose\n    }\"\n    #treeNodeContent\n  >\n    <div\n      class=\"devui-tree-vertical-line\"\n      *ngFor=\"let item of treeNode.data.depth | transferToArrayPipe; let i = index\"\n      [style.marginLeft.px]=\"i === 0 ? -16 : -16 - 24 * i\"\n      [ngStyle]=\"{ height: i === 0 && treeNode.data.isLast && !treeNode.data.isOpen ? '15px' : '30px' }\"\n    ></div>\n    <div\n      *ngIf=\"treeNode.data.depth\"\n      [ngStyle]=\"{ width: treeNode.data.isParent ? '8px' : '16px' }\"\n      class=\"devui-tree-horizontal-line\"\n    ></div>\n    <div\n      class=\"devui-tree-node__content\"\n      [class.active]=\"treeNode.data.isActive\"\n      [class.devui-tree-node--parent]=\"(treeNode.data.children || []).length > 0\"\n      (click)=\"selectNode($event, treeNode)\"\n    >\n      <div class=\"devui-tree-node__content--value-wrapper\" [class.isMatch]=\"treeNode.data.isMatch\">\n        <span\n          (click)=\"toggleNode($event, treeNode)\"\n          *ngIf=\"(treeNode.data.children || []).length > 0 || treeNode.data.isParent\"\n          class=\"devui-tree-node__folder\"\n          [class.toggle-disabled]=\"treeNode.data.disableToggle\"\n        >\n          <span class=\"devui-tree-node__folder--icon\" *ngIf=\"iconParentClose && !treeNode.data.isOpen\" [innerHTML]=\"iconParentClose\"></span>\n          <span class=\"devui-tree-node__folder--icon\" *ngIf=\"iconParentOpen && treeNode.data.isOpen\" [innerHTML]=\"iconParentOpen\"></span>\n          <span class=\"devui-tree-node__folder--icon\" *ngIf=\"!iconParentClose && !treeNode.data.isOpen\">\n            <svg\n              width=\"16px\"\n              height=\"16px\"\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              class=\"svg-icon\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n                <path\n                  d=\"M8.75,4 L8.75,7.25 L12,7.25 L12,8.75 L8.749,8.75 L8.75,12 L7.25,12 L7.249,8.75 L4,8.75 L4,7.25 L7.25,7.25 L7.25,4 L8.75,4 Z\"\n                ></path>\n              </g>\n            </svg>\n          </span>\n          <span class=\"devui-tree-node__folder--icon\" *ngIf=\"!iconParentOpen && treeNode.data.isOpen\">\n            <svg\n              width=\"16px\"\n              height=\"16px\"\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              class=\"svg-icon svg-icon-close\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n                <rect x=\"4\" y=\"7\" width=\"8\" height=\"2\"></rect>\n              </g>\n            </svg>\n          </span>\n        </span>\n        <span class=\"devui-tree-node__leaf\" *ngIf=\"(treeNode.data.children || []).length === 0 && !treeNode.data.isParent\">\n          <span *ngIf=\"!iconLeaf\" class=\"devui-leaf-icon-none\"></span>\n          <span *ngIf=\"iconLeaf\" [innerHTML]=\"iconLeaf\"></span>\n        </span>\n        <span\n          (dblclick)=\"nodeDblClick($event, treeNode)\"\n          (contextmenu)=\"contextmenuEvent($event, treeNode)\"\n          class=\"devui-tree-node__title\"\n          [class.select-disabled]=\"treeNode.data.disableSelect\"\n          title=\"{{ treeNode.data.title }}\"\n          >{{ treeNode.data.title }}</span\n        >\n        <span\n          dLoading\n          [showLoading]=\"treeNode.data.loading\"\n          [loadingTemplateRef]=\"loadingTemplateRef ? loadingTemplateRef : defaultLoadingTmpl\"\n        >\n        </span>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<ng-template #default let-treeNode=\"treeNode\" let-treeFactory=\"treeFactory\">\n  <div\n    class=\"devui-tree-node devui-tree-without-virtual-scroll\"\n    [ngClass]=\"{\n      'devui-tree-node__open': treeNode.data.isOpen,\n      'devui-tree-node__customIcon': iconParentClose\n    }\"\n    #treeNodeContent\n  >\n    <div\n      class=\"devui-tree-node__content\"\n      [class.active]=\"treeNode.data.isActive\"\n      [class.devui-tree-node--parent]=\"(treeNode.data.children || []).length > 0\"\n      (click)=\"selectNode($event, treeNode)\"\n    >\n      <div class=\"devui-tree-node__content--value-wrapper\" [class.isMatch]=\"treeNode.data.isMatch\">\n        <span\n          (click)=\"toggleNode($event, treeNode)\"\n          *ngIf=\"(treeNode.data.children || []).length > 0 || treeNode.data.isParent\"\n          class=\"devui-tree-node__folder\"\n          [class.toggle-disabled]=\"treeNode.data.disableToggle\"\n        >\n          <span class=\"devui-tree-node__folder--icon\" *ngIf=\"iconParentClose && !treeNode.data.isOpen\" [innerHTML]=\"iconParentClose\"></span>\n          <span class=\"devui-tree-node__folder--icon\" *ngIf=\"iconParentOpen && treeNode.data.isOpen\" [innerHTML]=\"iconParentOpen\"></span>\n          <span class=\"devui-tree-node__folder--icon\" *ngIf=\"!iconParentClose && !treeNode.data.isOpen\">\n            <svg\n              width=\"16px\"\n              height=\"16px\"\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              class=\"svg-icon\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n                <path\n                  d=\"M8.75,4 L8.75,7.25 L12,7.25 L12,8.75 L8.749,8.75 L8.75,12 L7.25,12 L7.249,8.75 L4,8.75 L4,7.25 L7.25,7.25 L7.25,4 L8.75,4 Z\"\n                ></path>\n              </g>\n            </svg>\n          </span>\n          <span class=\"devui-tree-node__folder--icon\" *ngIf=\"!iconParentOpen && treeNode.data.isOpen\">\n            <svg\n              width=\"16px\"\n              height=\"16px\"\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              class=\"svg-icon svg-icon-close\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n                <rect x=\"4\" y=\"7\" width=\"8\" height=\"2\"></rect>\n              </g>\n            </svg>\n          </span>\n        </span>\n        <span class=\"devui-tree-node__leaf\" *ngIf=\"(treeNode.data.children || []).length === 0 && !treeNode.data.isParent\">\n          <span *ngIf=\"!iconLeaf\" class=\"devui-leaf-icon-none\"></span>\n          <span *ngIf=\"iconLeaf\" [innerHTML]=\"iconLeaf\"></span>\n        </span>\n        <span\n          (dblclick)=\"nodeDblClick($event, treeNode)\"\n          (contextmenu)=\"contextmenuEvent($event, treeNode)\"\n          class=\"devui-tree-node__title\"\n          [class.select-disabled]=\"treeNode.data.disableSelect\"\n          title=\"{{ treeNode.data.title }}\"\n          >{{ treeNode.data.title }}</span\n        >\n        <span\n          dLoading\n          [showLoading]=\"treeNode.data.loading\"\n          [loadingTemplateRef]=\"loadingTemplateRef ? loadingTemplateRef : defaultLoadingTmpl\"\n        >\n        </span>\n      </div>\n    </div>\n    <div\n      *ngIf=\"treeNode.data.isOpen\"\n      class=\"devui-tree-node__children\"\n      @collapseForDomDestroy\n      [@.disabled]=\"afterInitAnimate || !showAnimation\"\n    >\n      <d-tree-nodes [treeList]=\"treeNode.data.children || []\" [treeNodesRef]=\"default\" [treeFactory]=\"treeFactory\"> </d-tree-nodes>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #defaultLoadingTmpl>\n  <span class=\"devui-loading-children\">{{ i18nCommonText?.loading }}</span>\n</ng-template>\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[dTreeAutoFocus]'\n})\nexport class AutofocusDirective implements OnInit {\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.elementRef.nativeElement.focus();\n      this.elementRef.nativeElement.select();\n    });\n  }\n\n}\n","import {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { I18nInterface, I18nService } from 'ng-devui/i18n';\nimport { DevConfigService, expandCollapseForDomDestroy, WithConfig } from 'ng-devui/utils';\nimport { Subscription } from 'rxjs';\nimport { Dictionary, ITreeItem, ITreeNodeData, TreeNode } from './tree-factory.class';\nimport { TreeComponent } from './tree.component';\nimport { ICheckboxInput, IDropType } from './tree.types';\n@Component({\n  selector: 'd-operable-tree',\n  templateUrl: './operable-tree.component.html',\n  styleUrls: ['./operable-tree.component.scss'],\n  exportAs: 'dOperableTreeComponent',\n  preserveWhitespaces: false,\n  animations: [expandCollapseForDomDestroy],\n})\nexport class OperableTreeComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() tree: Array<ITreeItem>;\n  @Input() treeNodeIdKey: string;\n  @Input() treeNodeChildrenKey: string;\n  @Input() checkboxDisabledKey: string;\n  @Input() selectDisabledKey: string;\n  @Input() toggleDisabledKey: string;\n  @Input() iconParentOpen: string;\n  @Input() iconParentClose: string;\n  @Input() iconLeaf: string;\n  /**\n   * @deprecated\n   */\n  @Input() showLoading: boolean;\n  @Input() loadingTemplateRef: TemplateRef<any>;\n  @Input() treeNodesRef: TemplateRef<any>;\n  @Input() checkable = true;\n  @Input() deletable = false;\n  @Input() addable = false;\n  @Input() editable = false;\n  @Input() draggable = false;\n  @Input() checkboxInput: ICheckboxInput = {};\n  @Input() beforeAddNode: (node: TreeNode) => Promise<any>;\n  @Input() disableMouseEvent: boolean;\n  @Input() beforeDeleteNode: (node: TreeNode) => Promise<any>;\n  @Input() beforeNodeDrop: (dragNodeId: string, dropNodeId: string, dropType: string, dragNodeIds?: string[]) => Promise<any>;\n  @Input() beforeEditNode: (node: TreeNode) => Promise<any>;\n  @Input() canActivateNode = true;\n  @Input() canActivateParentNode = true;\n  @Input() canActivateMultipleNode = false;\n  @Input() treeNodeTitleKey = 'title';\n  @Input() postAddNode: (node: TreeNode) => Promise<any>;\n  @Input() iconTemplatePosition: string;\n  @Input() virtualScroll = false;\n  @Input() virtualScrollHeight = '800px';\n  @Input() @WithConfig() showAnimation = true;\n  @Input() itemSize = 30;\n  @Input() minBufferPx = 600;\n  @Input() maxBufferPx = 900;\n  @Input() checkableRelation: 'upward' | 'downward' | 'both' | 'none' = 'both';\n  @Output() nodeSelected = new EventEmitter<TreeNode | TreeNode[]>();\n  @Output() nodeDblClicked = new EventEmitter<TreeNode>();\n  @Output() nodeRightClicked = new EventEmitter<{ node: TreeNode; event: MouseEvent }>();\n  @Output() nodeToggled = new EventEmitter<TreeNode>();\n  @Output() afterTreeInit = new EventEmitter<Dictionary<TreeNode>>();\n  @Output() nodeDeleted = new EventEmitter<TreeNode>();\n  @Output() nodeChecked = new EventEmitter<any>();\n  @Output() currentNodeChecked = new EventEmitter<{ id: string | number; data: ITreeNodeData }>();\n  @Output() nodeEdited = new EventEmitter<TreeNode>();\n  @Output() editValueChange = new EventEmitter<{ value: string; callback: Function }>();\n  @Output() nodeDragStart = new EventEmitter<{ event: DragEvent; treeNode: TreeNode; treeNodes?: TreeNode[] }>();\n  @Output() nodeOnDrop = new EventEmitter<{ event: DragEvent; treeNode: TreeNode; dropType: IDropType }>();\n  @ViewChild('operableTree', { static: true }) operableTree: TreeComponent;\n  @ViewChild('operableTreeContainer', { static: true }) operableTreeEle: ElementRef;\n  @ViewChild('treeDropIndicator') treeDropIndicator: ElementRef;\n  @ContentChild('iconTemplate') iconTemplate;\n  @ContentChild('nodeTemplate') nodeTemplate;\n  @ContentChild('operatorTemplate') operatorTemplate;\n  @ContentChild('statusTemplate') statusTemplate;\n  @Input() dropType: IDropType = {\n    dropPrev: false,\n    dropNext: false,\n    dropInner: true,\n  };\n  private addingNode = false;\n  private mouseRightButton = 2;\n  private treeNodeDragoverResponder = {\n    node: null,\n    timeout: null,\n  };\n  @ViewChildren('treeNodeContent') treeNodeContent: QueryList<ElementRef>;\n  i18nCommonText: I18nInterface['common'];\n  i18nSubscription: Subscription;\n  dragState = {\n    showIndicator: true,\n    dropType: null,\n    draggingNode: null,\n    indicatorTop: 0,\n    indicatorLeft: 0,\n    indicatorWidth: 0,\n  };\n  afterInitAnimate = true;\n\n  constructor(private i18n: I18nService, private devConfigService: DevConfigService) {}\n\n  ngOnInit(): void {\n    this.i18nCommonText = this.i18n.getI18nText().common;\n    this.i18nSubscription = this.i18n.langChange().subscribe((data) => {\n      this.i18nCommonText = data.common;\n    });\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.afterInitAnimate = false;\n    });\n  }\n\n  contextmenuEvent(event, node) {\n    this.nodeRightClicked.emit({ node: node, event: event });\n  }\n\n  onDragstart(event, treeNode) {\n    this.dragState.draggingNode = event.target;\n    const result = { event, treeNode };\n    const data = {\n      type: 'operable-tree-node',\n      nodeId: treeNode.id,\n      parentId: treeNode.parentId,\n      nodeTitle: treeNode.data.title,\n      isParent: treeNode.data.isParent,\n    };\n    if (this.canActivateMultipleNode) {\n      const activatedNodes = this.treeFactory.getActivatedNodes() || [];\n      data['multipleData'] = activatedNodes;\n      result['treeNodes'] = activatedNodes;\n    }\n    event.dataTransfer.setData('Text', JSON.stringify(data));\n    this.nodeDragStart.emit(result);\n  }\n\n  onDragover(event, droppable, treeNode) {\n    if (droppable) {\n      event.preventDefault();\n      event.dataTransfer.dropEffect = 'move';\n      if (\n        this.dropType.dropInner &&\n        (!this.treeNodeDragoverResponder.node ||\n          (this.treeNodeDragoverResponder.node && this.treeNodeDragoverResponder.node.id !== treeNode.id))\n      ) {\n        clearTimeout(this.treeNodeDragoverResponder.timeout);\n        this.treeNodeDragoverResponder.node = treeNode;\n        this.treeNodeDragoverResponder.timeout = setTimeout(() => {\n          this.treeFactory.openNodesById(treeNode.id);\n          this.nodeToggled.emit(treeNode);\n        }, 1000);\n      }\n      this.handlerDragState(event, treeNode);\n    }\n  }\n\n  handlerDragState(event, treeNode) {\n    const dropPrev = this.dropType.dropPrev;\n    const dropNext = this.dropType.dropNext;\n    const dropInner = this.dropType.dropInner;\n    let dropType;\n    const treePosition = this.operableTreeEle.nativeElement.getBoundingClientRect();\n    const prevPercent = dropPrev ? (dropInner ? 0.25 : dropNext ? 0.45 : 1) : -1;\n    const nextPercent = dropNext ? (dropInner ? 0.75 : dropPrev ? 0.55 : 0) : 1;\n    const targetPosition = event.currentTarget.getBoundingClientRect();\n    const treeNodePosition = event.currentTarget.querySelector('.devui-tree-node__title').getBoundingClientRect();\n    const distance = event.clientY - targetPosition.top;\n\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = 'prev';\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = 'next';\n    } else if (dropInner) {\n      dropType = 'inner';\n    } else {\n      dropType = 'none';\n    }\n\n    if (dropType === 'prev') {\n      this.dragState.indicatorTop = treeNodePosition.top - treePosition.top - 10;\n    }\n    if (dropType === 'next') {\n      this.dragState.indicatorTop = treeNodePosition.bottom - treePosition.top + 10;\n    }\n    if (dropType === 'inner') {\n      event.currentTarget.classList.add('devui-drop-inner');\n    } else {\n      event.currentTarget.classList.remove('devui-drop-inner');\n    }\n    this.dragState.indicatorLeft = treeNodePosition.left - treePosition.left;\n    this.dragState.indicatorWidth = treePosition.width - this.dragState.indicatorLeft;\n    this.dragState.dropType = dropType;\n    this.dragState.showIndicator = dropType === 'prev' || dropType === 'next';\n  }\n\n  onDragleave(event, treeNode) {\n    this.removeDraggingStyle(event.currentTarget);\n    if (this.treeNodeDragoverResponder.node && this.treeNodeDragoverResponder.node.id === treeNode.id) {\n      this.treeNodeDragoverResponder.node = null;\n      clearTimeout(this.treeNodeDragoverResponder.timeout);\n    }\n  }\n\n  removeDraggingStyle(target) {\n    this.dragState.showIndicator = false;\n    target.classList.remove('devui-drop-inner');\n  }\n\n  onDrop(event, dropNode) {\n    this.removeDraggingStyle(event.currentTarget);\n    if (!this.draggable) {\n      return;\n    }\n    event.preventDefault();\n    const transferDataStr = event.dataTransfer.getData('Text');\n    const dropNodeId = dropNode.id;\n    if (transferDataStr) {\n      try {\n        const transferData = JSON.parse(transferDataStr);\n        if (typeof transferData === 'object' && transferData.type === 'operable-tree-node') {\n          const dragNodeId = transferData['nodeId'];\n          const dragNodeIds: string[] = [];\n          if (this.canActivateMultipleNode) {\n            const multipleData = transferData['multipleData'];\n            multipleData.forEach((node) => {\n              const id = node.id;\n              const isParent = this.treeFactory.checkIsParent(dropNodeId, id);\n              if (!isParent && id !== dropNodeId) {\n                dragNodeIds.push(id);\n              }\n            });\n          } else {\n            const isParent = this.treeFactory.checkIsParent(dropNodeId, dragNodeId);\n            if (dragNodeId === dropNodeId || isParent) {\n              return;\n            }\n          }\n\n          let dragResult = Promise.resolve(true);\n          if (this.beforeNodeDrop) {\n            dragResult = this.beforeNodeDrop(dragNodeId, dropNodeId, this.dragState.dropType, dragNodeIds);\n          }\n\n          dragResult.then(() => {\n            if (this.canActivateMultipleNode) {\n              dragNodeIds.forEach((id) => this.handlerDropNode(id, dropNode));\n            } else {\n              this.handlerDropNode(dragNodeId, dropNode);\n            }\n            this.treeFactory.renderFlattenTree();\n          });\n        }\n      } catch (e) {\n      } finally {\n        if (this.nodeOnDrop.observers.length > 0) {\n          this.nodeOnDrop.emit({ event, treeNode: dropNode, dropType: this.dragState.dropType });\n        }\n      }\n    }\n  }\n\n  handlerDropNode(dragNodeId, dropNode) {\n    const movingNode = this.treeFactory.nodes[dragNodeId];\n    const movingNodeIndex = this.treeFactory.getNodeIndex(movingNode);\n    const dropNodeIndex = this.treeFactory.getNodeIndex(dropNode);\n    const originalParentNode = movingNode.parentId ? this.treeFactory.nodes[movingNode.parentId] : this.treeFactory.treeRoot;\n\n    switch (this.dragState.dropType) {\n    case 'prev':\n      this.handlerDropSort(movingNodeIndex, dropNodeIndex, movingNode, dropNode, originalParentNode, 'prev');\n      break;\n    case 'next':\n      this.handlerDropSort(movingNodeIndex, dropNodeIndex, movingNode, dropNode, originalParentNode, 'next');\n      break;\n    case 'inner':\n      this.handlerDropInner(movingNodeIndex, movingNode, dropNode, originalParentNode);\n      break;\n    }\n  }\n\n  handlerDropSort(oldIndex, newIndex, movingNode, dropNode, originalParentNode, type) {\n    const dropIndex = type === 'next' ? newIndex + 1 : newIndex;\n    movingNode.parentId = dropNode.parentId;\n    let parentNode;\n    if (dropNode.parentId === undefined) {\n      parentNode = this.treeFactory.treeRoot;\n      parentNode.splice(dropIndex, 0, movingNode);\n    } else {\n      parentNode = this.treeFactory.getNodeById(dropNode.parentId);\n      parentNode.children.splice(dropIndex, 0, movingNode);\n    }\n    if (dropNode.parentId === originalParentNode.id && newIndex < oldIndex) {\n      this.handlerOriginalParentNode(originalParentNode, oldIndex + 1);\n    } else {\n      this.handlerOriginalParentNode(originalParentNode, oldIndex);\n    }\n  }\n\n  handlerOriginalParentNode(originalParentNode, oldIndex) {\n    if (originalParentNode.id === undefined) {\n      originalParentNode.splice(oldIndex, 1);\n    } else {\n      originalParentNode.data.children.splice(oldIndex, 1);\n      if (!originalParentNode.data.children || !originalParentNode.data.children.length) {\n        originalParentNode.data.isParent = false;\n      }\n    }\n  }\n\n  handlerDropInner(oldIndex, movingNode, dropNode, originalParentNode) {\n    movingNode.parentId = dropNode.id;\n    dropNode.data.isParent = true;\n    this.treeFactory.openNodesById(dropNode.id);\n    this.treeFactory.addChildNode(dropNode, movingNode);\n    this.handlerOriginalParentNode(originalParentNode, oldIndex);\n    this.nodeToggled.emit(dropNode);\n  }\n\n  selectNode(event, treeNode: TreeNode) {\n    if (treeNode.data.disableSelect) {\n      return;\n    }\n    if (!this.operableTree.isSelectableRegion(event.target)) {\n      return;\n    }\n    if (!this.canActivateNode) {\n      this.checkNode(event, treeNode);\n      return;\n    }\n    if (this.canActivateParentNode || (!this.canActivateParentNode && !treeNode.data.isParent)) {\n      const isMultiple = this.canActivateMultipleNode && (event.ctrlKey || event.shiftKey);\n      this.treeFactory.activeNodeById(treeNode.id, isMultiple);\n      if (isMultiple) {\n        this.nodeSelected.emit(this.treeFactory.getActivatedNodes());\n        return;\n      }\n    } else {\n      this.toggleNode(event, treeNode);\n      return;\n    }\n    this.nodeSelected.emit(treeNode);\n  }\n\n  toggleNode(event, treeNode: TreeNode) {\n    if (treeNode.data.disableToggle) {\n      return;\n    }\n    this.treeFactory.toggleNodeById(treeNode.id);\n    this.nodeToggled.emit(treeNode);\n  }\n\n  deleteNodes(event, treeNode: TreeNode) {\n    let delResult = Promise.resolve(true);\n    if (this.beforeDeleteNode) {\n      delResult = this.beforeDeleteNode(treeNode);\n    }\n\n    delResult.then(() => {\n      this.treeFactory.deleteNodeById(treeNode.id);\n      this.nodeDeleted.emit(treeNode);\n    });\n  }\n\n  deleteNodesProxy = (event, treeNode: TreeNode) => {\n    this.deleteNodes(event, treeNode);\n  };\n\n  addChildNode(event, treeNode: TreeNode, newNode?) {\n    let addResult = Promise.resolve(newNode ? newNode : true);\n    if (this.beforeAddNode) {\n      addResult = this.beforeAddNode(treeNode);\n    }\n\n    addResult.then((nodeInfo) => {\n      if (!nodeInfo) {\n        return;\n      }\n      const node = this.treeFactory.addNode(\n        {\n          parentId: treeNode.id,\n          title: nodeInfo['title'] ? nodeInfo['title'] : '新增节点',\n          isParent: nodeInfo['isParent'],\n          id: nodeInfo['id'] ? nodeInfo['id'] : undefined,\n          data: nodeInfo.data,\n        },\n        nodeInfo.index,\n        false\n      );\n      this.treeFactory.editNodeTitle(node.id);\n      this.addingNode = true;\n      treeNode.data.isParent = true;\n      this.treeFactory.openNodesById(treeNode.id);\n      return treeNode;\n    });\n  }\n\n  addChildNodeProxy = (event, treeNode: TreeNode, newNode?) => {\n    this.addChildNode(event, treeNode, newNode);\n  };\n\n  editNode(event, treeNode: TreeNode) {\n    let editResult = Promise.resolve(true);\n    if (this.beforeEditNode) {\n      editResult = this.beforeEditNode(treeNode);\n    }\n    editResult.then(() => {\n      this.treeFactory.editNodeTitle(treeNode.id);\n    });\n  }\n\n  editNodeProxy = (event, treeNode: TreeNode) => {\n    this.editNode(event, treeNode);\n  };\n\n  public checkNodeById(checked: boolean, id: number | string) {\n    const results = this.treeFactory.checkNodesById(id, checked, this.checkableRelation);\n    this.nodeChecked.emit(results);\n    this.currentNodeChecked.emit({ id: id, data: this.treeFactory.getNodeById(id) });\n  }\n\n  onBlurEdit(treeNode) {\n    if (!treeNode.data.errTips) {\n      treeNode.data.editable = false;\n      return this.postEditNode(treeNode);\n    }\n  }\n\n  onInputChange(event, treeNode) {\n    const targe = event.target as HTMLInputElement;\n    this.editValueChange.emit({\n      value: targe.value,\n      callback: (validateInfo) => {\n        if (validateInfo && validateInfo.errTips) {\n          treeNode.data.errTips = validateInfo.errTips;\n          treeNode.data.errTipsPosition = validateInfo.errTipsPosition || 'top';\n        } else {\n          if (treeNode.data.errTips) {\n            delete treeNode.data.errTips;\n            delete treeNode.data.errTipsPosition;\n          }\n        }\n      },\n    });\n  }\n\n  treeNodeHover(treeNode, type) {\n    if (this.disableMouseEvent) {\n      return;\n    }\n    treeNode.data.isHover = type === 'enter';\n  }\n\n  isSelectedNode(node: any) {\n    if (this.checkable) {\n      return node.isChecked;\n    } else {\n      return node.isActive;\n    }\n  }\n\n  get nodes(): any[] {\n    return this.operableTree\n      ? Object.keys(this.treeFactory.nodes).map((k) => {\n        return this.treeFactory.nodes[k];\n      })\n      : [];\n  }\n\n  private postEditNode(treeNode) {\n    if (this.addingNode === true) {\n      this.addingNode = false;\n      if (typeof this.postAddNode === 'function') {\n        const originalId = treeNode.id;\n        return this.postAddNode(treeNode)\n          .then((nodeInfo) => {\n            // Swap id if id was modified by outer system\n            treeNode.id = nodeInfo.id ? nodeInfo.id : originalId;\n            delete this.treeFactory.nodes[originalId];\n            if (Object.prototype.hasOwnProperty.call(nodeInfo, 'data') && nodeInfo.data) {\n              if (Object.prototype.hasOwnProperty.call(treeNode, 'data') && Object.prototype.hasOwnProperty.call(treeNode.data, 'data')) {\n                treeNode.data.data = { ...treeNode.data.data, ...nodeInfo.data };\n              } else {\n                treeNode.data = Object.assign(treeNode.data, { data: nodeInfo.data });\n              }\n            }\n            this.treeFactory.nodes[treeNode.id] = treeNode;\n            return treeNode;\n          })\n          .catch((e, reaction = 'cancel') => {\n            switch (reaction) {\n            case 'justify': {\n              const parentNode = this.treeFactory.nodes[treeNode.parentId];\n              const title = treeNode.data.title;\n              this.treeFactory.deleteNodeById(treeNode.id);\n              this.addChildNode(null, parentNode, { title: title });\n              break;\n            }\n            case 'cancel':\n            default:\n              this.treeFactory.deleteNodeById(treeNode.id);\n            }\n            return Promise.reject(e);\n          });\n      }\n    } else {\n      this.nodeEdited.emit(treeNode);\n    }\n    return Promise.resolve(treeNode);\n  }\n\n  public appendTreeItems(treeItems: Array<ITreeItem>, parentId) {\n    if (!this.treeFactory.nodes[parentId]) {\n      throw new Error('parent node does not exist.');\n    }\n    this.treeFactory.mapTreeItems({\n      treeItems: treeItems,\n      parentId: parentId,\n      treeNodeChildrenKey: this.treeNodeChildrenKey,\n      treeNodeIdKey: this.treeNodeIdKey,\n      checkboxDisabledKey: this.checkboxDisabledKey,\n      selectDisabledKey: this.selectDisabledKey,\n      toggleDisabledKey: this.toggleDisabledKey,\n      treeNodeTitleKey: this.treeNodeTitleKey,\n    });\n  }\n\n  public get treeFactory() {\n    return this.operableTree.treeFactory;\n  }\n\n  public checkNode(checked, treeNode: TreeNode) {\n    if (!treeNode.data.disabled) {\n      treeNode.data.isChecked = !treeNode.data.isChecked;\n      this.checkNodeById(treeNode.data.isChecked, treeNode.id);\n    }\n  }\n  public nodeDblClick(event, node) {\n    this.nodeDblClicked.emit(node);\n  }\n\n  initTreeFinishEvent($event) {\n    this.afterTreeInit.emit($event);\n  }\n\n  eventTriggerBlur(event) {\n    (event.target as HTMLElement).blur();\n  }\n\n  ngOnDestroy() {\n    if (this.i18nSubscription) {\n      this.i18nSubscription.unsubscribe();\n    }\n  }\n}\n","<div #operableTreeContainer style=\"position: relative\">\n  <d-tree\n    #operableTree\n    [tree]=\"tree\"\n    [virtualScroll]=\"virtualScroll\"\n    [treeNodeIdKey]=\"treeNodeIdKey\"\n    [treeNodeChildrenKey]=\"treeNodeChildrenKey\"\n    [treeNodesRef]=\"treeNodesRef ? treeNodesRef : virtualScroll ? operableTreeVirtualScrollRef : operableTreeNodeRef\"\n    [iconParentOpen]=\"iconParentOpen\"\n    [iconParentClose]=\"iconParentClose\"\n    [iconLeaf]=\"iconLeaf\"\n    [treeNodeTitleKey]=\"treeNodeTitleKey\"\n    [checkboxDisabledKey]=\"checkboxDisabledKey\"\n    [selectDisabledKey]=\"selectDisabledKey\"\n    [toggleDisabledKey]=\"toggleDisabledKey\"\n    [virtualScrollHeight]=\"virtualScrollHeight\"\n    [minBufferPx]=\"minBufferPx\"\n    [maxBufferPx]=\"maxBufferPx\"\n    [itemSize]=\"itemSize\"\n    (afterTreeInit)=\"initTreeFinishEvent($event)\"\n  >\n  </d-tree>\n  <div\n    *ngIf=\"dragState.showIndicator\"\n    #treeDropIndicator\n    class=\"devui-tree-indicator\"\n    [style.top.px]=\"dragState.indicatorTop\"\n    [style.width.px]=\"dragState.indicatorWidth\"\n    [style.left.px]=\"dragState.indicatorLeft\"\n  ></div>\n</div>\n<!-- TODO: 虚拟滚动支持动效 -->\n<ng-template #operableTreeVirtualScrollRef let-treeNode=\"treeNode\" let-treeFactory=\"treeFactory\">\n  <div\n    *ngIf=\"!treeNode.data.isHide\"\n    [id]=\"'devui-tree-node-' + treeNode.id\"\n    class=\"devui-tree-node devui-operable-tree-node\"\n    [style.paddingLeft.px]=\"treeNode.data.depth * 24\"\n    [ngClass]=\"{\n      selected: isSelectedNode(treeNode.data),\n      'devui-tree-node__open': treeNode.data.isOpen,\n      'devui-tree-node__customIcon': iconParentClose\n    }\"\n    #treeNodeContent\n  >\n    <div\n      class=\"devui-tree-vertical-line\"\n      *ngFor=\"let item of treeNode.data.depth | transferToArrayPipe; let i = index\"\n      [style.marginLeft.px]=\"i === 0 ? -16 : -16 - 24 * i\"\n      [ngStyle]=\"{ height: i === 0 && treeNode.data.isLast && !treeNode.data.isOpen ? '15px' : '30px' }\"\n    ></div>\n    <div\n      *ngIf=\"treeNode.data.depth\"\n      [ngStyle]=\"{ width: treeNode.data.isParent ? '8px' : '16px' }\"\n      class=\"devui-tree-horizontal-line\"\n    ></div>\n    <div\n      class=\"devui-tree-node__content\"\n      [class.active]=\"treeNode.data.isActive\"\n      [class.devui-tree-node--parent]=\"(treeNode.data.children || []).length > 0\"\n      (mouseenter)=\"treeNodeHover(treeNode, 'enter')\"\n      (mouseleave)=\"treeNodeHover(treeNode, 'leave')\"\n      [draggable]=\"draggable && !treeNode?.data?.editable\"\n      (dragstart)=\"onDragstart($event, treeNode)\"\n      (dragover)=\"onDragover($event, draggable, treeNode)\"\n      (dragleave)=\"onDragleave($event, treeNode)\"\n      (drop)=\"onDrop($event, treeNode)\"\n      [class.disabled]=\"treeNode.data.disabled\"\n      (click)=\"selectNode($event, treeNode)\"\n    >\n      <div class=\"devui-tree-node__content--value-wrapper\" [class.isMatch]=\"treeNode.data.isMatch\">\n        <span\n          (click)=\"toggleNode($event, treeNode)\"\n          *ngIf=\"(treeNode.data.children || []).length > 0 || treeNode.data.isParent\"\n          class=\"devui-tree-node__folder\"\n          [class.toggle-disabled]=\"treeNode.data.disableToggle\"\n        >\n          <span\n            class=\"devui-tree-node__folder--icon\"\n            [ngStyle]=\"{\n              display: iconParentClose && !treeNode.data.isOpen ? 'inline-block' : 'none'\n            }\"\n            [innerHTML]=\"iconParentClose | safe: 'html'\"\n          ></span>\n          <span\n            class=\"devui-tree-node__folder--icon\"\n            [ngStyle]=\"{\n              display: iconParentOpen && treeNode.data.isOpen ? 'inline-block' : 'none'\n            }\"\n            [innerHTML]=\"iconParentOpen | safe: 'html'\"\n          ></span>\n          <span\n            class=\"devui-tree-node__folder--icon\"\n            [ngStyle]=\"{\n              display: !iconParentOpen && !treeNode.data.isOpen ? 'inline-block' : 'none'\n            }\"\n          >\n            <svg\n              width=\"16px\"\n              height=\"16px\"\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              class=\"svg-icon\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n                <path\n                  d=\"M8.75,4 L8.75,7.25 L12,7.25 L12,8.75 L8.749,8.75 L8.75,12 L7.25,12 L7.249,8.75 L4,8.75 L4,7.25 L7.25,7.25 L7.25,4 L8.75,4 Z\"\n                ></path>\n              </g>\n            </svg>\n          </span>\n          <span\n            class=\"devui-tree-node__folder--icon\"\n            [ngStyle]=\"{\n              display: !iconParentOpen && treeNode.data.isOpen ? 'inline-block' : 'none'\n            }\"\n          >\n            <svg\n              width=\"16px\"\n              height=\"16px\"\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              class=\"svg-icon svg-icon-close\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n                <rect x=\"4\" y=\"7\" width=\"8\" height=\"2\"></rect>\n              </g>\n            </svg>\n          </span>\n        </span>\n        <span class=\"devui-tree-node__leaf\" *ngIf=\"(treeNode.data.children || []).length === 0 && !treeNode.data.isParent\">\n          <span *ngIf=\"!iconLeaf\" class=\"devui-leaf-icon-none\"></span>\n          <span *ngIf=\"iconLeaf\" [innerHTML]=\"iconLeaf | safe: 'html'\"></span>\n        </span>\n        <ng-container *ngIf=\"iconTemplate && iconTemplatePosition === 'before-checkbox'\">\n          <ng-template [ngTemplateOutlet]=\"iconTemplate\" [ngTemplateOutletContext]=\"{ node: treeNode.data, completeNode: treeNode }\">\n          </ng-template>\n        </ng-container>\n        <d-checkbox\n          *ngIf=\"checkable && (treeNode.data.showCheckbox === undefined ? true : treeNode.data.showCheckbox)\"\n          [showAnimation]=\"treeNode.data.isHover\"\n          [(ngModel)]=\"treeNode.data.isChecked\"\n          (ngModelChange)=\"checkNodeById($event, treeNode.id)\"\n          [halfchecked]=\"treeNode.data.halfChecked\"\n          [color]=\"checkboxInput?.color\"\n          [cssClass]=\"'devui-tree-node__checkbox'\"\n          [disabled]=\"treeNode.data.disabled\"\n        >\n        </d-checkbox>\n        <ng-container *ngIf=\"iconTemplate && (!iconTemplatePosition || iconTemplatePosition === 'after-checkbox')\">\n          <ng-template [ngTemplateOutlet]=\"iconTemplate\" [ngTemplateOutletContext]=\"{ node: treeNode.data, completeNode: treeNode }\">\n          </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"nodeTemplate\">\n          <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ node: treeNode.data, completeNode: treeNode }\">\n          </ng-template>\n        </ng-container>\n        <span\n          *ngIf=\"!nodeTemplate && !treeNode.data?.editable\"\n          (dblclick)=\"nodeDblClick($event, treeNode)\"\n          (contextmenu)=\"contextmenuEvent($event, treeNode)\"\n          class=\"devui-tree-node__title\"\n          [class.select-disabled]=\"treeNode.data.disableSelect\"\n          title=\"{{ treeNode.data.title }}\"\n        >\n          <d-highlight *ngIf=\"treeNode.data?.isMatch\" [value]=\"treeNode.data.title\" [term]=\"treeFactory.searchItem\"> </d-highlight>\n          <ng-container *ngIf=\"!treeNode.data?.isMatch\">{{ treeNode.data.title }}</ng-container>\n        </span>\n        <span class=\"devui-tree-node__edit\" *ngIf=\"!nodeTemplate && treeNode.data?.editable\">\n          <input\n            [class.error]=\"!!treeNode.data.errTips\"\n            class=\"devui-form-control devui-input-sm\"\n            type=\"text\"\n            dTreeAutoFocus\n            [(ngModel)]=\"treeNode.data.title\"\n            (blur)=\"onBlurEdit(treeNode)\"\n            (keyup.enter)=\"eventTriggerBlur($event)\"\n            (input)=\"onInputChange($event, treeNode)\"\n            dPopover\n            [content]=\"treeNode.data.errTips\"\n            [position]=\"treeNode.data.errTipsPosition\"\n            [appendToBody]=\"true\"\n            [visible]=\"!!treeNode.data.errTips\"\n            [popType]=\"'error'\"\n          />\n        </span>\n        <ng-container *ngIf=\"statusTemplate\">\n          <ng-template [ngTemplateOutlet]=\"statusTemplate\" [ngTemplateOutletContext]=\"{ node: treeNode }\"> </ng-template>\n        </ng-container>\n        <span\n          dLoading\n          [showLoading]=\"treeNode.data.loading\"\n          [loadingTemplateRef]=\"loadingTemplateRef ? loadingTemplateRef : defaultLoadingTmpl\"\n        >\n        </span>\n        <span\n          class=\"devui-tree-icons\"\n          *ngIf=\"!treeNode.data.disableAdd && (treeNode.data.isActive || treeNode.data.isHover) && addable\"\n          (click)=\"addChildNode($event, treeNode)\"\n        >\n          <svg\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g fill-rule=\"nonzero\">\n                <path\n                  d=\"M8,0 C12.418278,0 16,3.59071231 16,8 C16,12.418278 12.4092877,16 8,16 C3.581722,16 0,12.4092877 0,8 C0,3.581722 3.59071231,0 8,0 Z M8,1.5 C4.41577399,1.5 1.5,4.41351238 1.5,8 C1.5,11.584226 4.41351238,14.5 8,14.5 C11.584226,14.5 14.5,11.5864876 14.5,8 C14.5,4.41577399 11.5864876,1.5 8,1.5 Z M8,4.3 C8.38659932,4.3 8.7,4.61340068 8.7,5 L8.699,7.299 L11,7.3 C11.3865993,7.3 11.7,7.61340068 11.7,8 C11.7,8.38659932 11.3865993,8.7 11,8.7 L8.699,8.699 L8.7,11 C8.7,11.3865993 8.38659932,11.7 8,11.7 C7.61340068,11.7 7.3,11.3865993 7.3,11 L7.299,8.699 L5,8.7 C4.61340068,8.7 4.3,8.38659932 4.3,8 C4.3,7.61340068 4.61340068,7.3 5,7.3 L7.299,7.299 L7.3,5 C7.3,4.61340068 7.61340068,4.3 8,4.3 Z\"\n                ></path>\n              </g>\n            </g>\n          </svg>\n        </span>\n        <span\n          class=\"devui-tree-icons\"\n          *ngIf=\"!treeNode.data.disableEdit && (treeNode.data.isActive || treeNode.data.isHover) && editable\"\n          (click)=\"editNode($event, treeNode)\"\n        >\n          <svg\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M12.3087741,0.74795609 L14.4300944,2.86927643 C14.9182498,3.3574318 14.9182498,4.14888802 14.4300944,4.63704339 L6.76529422,12.3018436 C6.6135568,12.453581 6.42531143,12.5637003 6.21868103,12.6215999 L3.29553945,13.4406895 C2.63078755,13.6269587 1.9408986,13.2390719 1.75462937,12.57432 C1.69358229,12.356457 1.69281139,12.1261099 1.75239888,11.9078433 L2.55548559,8.96616788 C2.61274771,8.75641893 2.7237298,8.5652334 2.87747239,8.41149081 L10.5410071,0.74795609 C11.0291625,0.259800726 11.8206187,0.259800726 12.3087741,0.74795609 Z M11.4248906,1.98539296 L3.98505387,9.42522967 L3.31563544,11.8772834 L5.75092262,11.1948948 L13.1926575,3.75315991 L11.4248906,1.98539296 Z\"\n                fill-rule=\"nonzero\"\n              ></path>\n              <rect fill-rule=\"nonzero\" x=\"0\" y=\"14.5\" width=\"15\" height=\"1.5\" rx=\"0.75\"></rect>\n            </g>\n          </svg>\n        </span>\n        <span\n          class=\"devui-tree-icons\"\n          *ngIf=\"!treeNode.data.disableDelete && (treeNode.data.isActive || treeNode.data.isHover) && deletable\"\n          (click)=\"deleteNodes($event, treeNode)\"\n        >\n          <svg\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g fill-rule=\"nonzero\">\n                <path\n                  d=\"M13.0996399,1.27743711 C13.4935963,0.882043175 14.1784277,0.912988481 14.6292951,1.34651479 C15.0800797,1.78012228 15.1261817,2.45212782 14.7322253,2.84752174 L9.59690531,7.99860255 L14.7322253,13.1524782 C15.0903675,13.5119272 15.084825,14.0999809 14.7421763,14.5297048 L14.6292951,14.6534852 C14.1784277,15.0870115 13.4935963,15.1179567 13.0996399,14.7225628 L8,9.60284628 L2.90036004,14.7225628 C2.54221791,15.082012 1.94368316,15.0891145 1.49907515,14.7617204 L1.37070487,14.6534852 C0.919920289,14.2198777 0.873818322,13.5478721 1.26777466,13.1524782 L6.40166885,7.99860255 L1.26777466,2.84752174 C0.909632535,2.48807271 0.915174959,1.90001906 1.25782365,1.47029514 L1.37070487,1.34651479 C1.82157229,0.912988481 2.50640369,0.882043175 2.90036004,1.27743711 L8,6.39575625 L13.0996399,1.27743711 Z\"\n                ></path>\n              </g>\n            </g>\n          </svg>\n        </span>\n        <ng-container *ngIf=\"operatorTemplate && (treeNode.data.isActive || treeNode.data.isHover)\">\n          <ng-template\n            [ngTemplateOutlet]=\"operatorTemplate\"\n            [ngTemplateOutletContext]=\"{\n              $implicit: this,\n              node: treeNode,\n              addNode: addChildNodeProxy,\n              editNode: editNodeProxy,\n              deleteNode: deleteNodesProxy\n            }\"\n          >\n          </ng-template>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<ng-template #operableTreeNodeRef let-treeNode=\"treeNode\" let-treeFactory=\"treeFactory\">\n  <div\n    class=\"devui-tree-node devui-operable-tree-node devui-tree-without-virtual-scroll\"\n    [style.display]=\"treeNode.data.isHide ? 'none' : ''\"\n    [ngClass]=\"{\n      selected: isSelectedNode(treeNode.data),\n      'devui-tree-node__open': treeNode.data.isOpen,\n      'devui-tree-node__customIcon': iconParentClose\n    }\"\n    #treeNodeContent\n  >\n    <div\n      class=\"devui-tree-node__content\"\n      [class.active]=\"treeNode.data.isActive\"\n      [class.devui-tree-node--parent]=\"(treeNode.data.children || []).length > 0\"\n      (mouseenter)=\"treeNodeHover(treeNode, 'enter')\"\n      (mouseleave)=\"treeNodeHover(treeNode, 'leave')\"\n      [draggable]=\"draggable && !treeNode?.data?.editable\"\n      (dragstart)=\"onDragstart($event, treeNode)\"\n      (dragover)=\"onDragover($event, draggable, treeNode)\"\n      (dragleave)=\"onDragleave($event, treeNode)\"\n      (drop)=\"onDrop($event, treeNode)\"\n      [class.disabled]=\"treeNode.data.disabled\"\n      (click)=\"selectNode($event, treeNode)\"\n    >\n      <div class=\"devui-tree-node__content--value-wrapper\" [class.isMatch]=\"treeNode.data.isMatch\">\n        <span\n          (click)=\"toggleNode($event, treeNode)\"\n          *ngIf=\"(treeNode.data.children || []).length > 0 || treeNode.data.isParent\"\n          class=\"devui-tree-node__folder\"\n          [class.toggle-disabled]=\"treeNode.data.disableToggle\"\n        >\n          <span\n            class=\"devui-tree-node__folder--icon\"\n            [ngStyle]=\"{\n              display: iconParentClose && !treeNode.data.isOpen ? 'inline-block' : 'none'\n            }\"\n            [innerHTML]=\"iconParentClose | safe: 'html'\"\n          ></span>\n          <span\n            class=\"devui-tree-node__folder--icon\"\n            [ngStyle]=\"{\n              display: iconParentOpen && treeNode.data.isOpen ? 'inline-block' : 'none'\n            }\"\n            [innerHTML]=\"iconParentOpen | safe: 'html'\"\n          ></span>\n          <span\n            class=\"devui-tree-node__folder--icon\"\n            [ngStyle]=\"{\n              display: !iconParentOpen && !treeNode.data.isOpen ? 'inline-block' : 'none'\n            }\"\n          >\n            <svg\n              width=\"16px\"\n              height=\"16px\"\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              class=\"svg-icon\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n                <path\n                  d=\"M8.75,4 L8.75,7.25 L12,7.25 L12,8.75 L8.749,8.75 L8.75,12 L7.25,12 L7.249,8.75 L4,8.75 L4,7.25 L7.25,7.25 L7.25,4 L8.75,4 Z\"\n                ></path>\n              </g>\n            </svg>\n          </span>\n          <span\n            class=\"devui-tree-node__folder--icon\"\n            [ngStyle]=\"{\n              display: !iconParentOpen && treeNode.data.isOpen ? 'inline-block' : 'none'\n            }\"\n          >\n            <svg\n              width=\"16px\"\n              height=\"16px\"\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              class=\"svg-icon svg-icon-close\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"2\"></rect>\n                <rect x=\"4\" y=\"7\" width=\"8\" height=\"2\"></rect>\n              </g>\n            </svg>\n          </span>\n        </span>\n        <span class=\"devui-tree-node__leaf\" *ngIf=\"(treeNode.data.children || []).length === 0 && !treeNode.data.isParent\">\n          <span *ngIf=\"!iconLeaf\" class=\"devui-leaf-icon-none\"></span>\n          <span *ngIf=\"iconLeaf\" [innerHTML]=\"iconLeaf | safe: 'html'\"></span>\n        </span>\n        <ng-container *ngIf=\"iconTemplate && iconTemplatePosition === 'before-checkbox'\">\n          <ng-template [ngTemplateOutlet]=\"iconTemplate\" [ngTemplateOutletContext]=\"{ node: treeNode.data, completeNode: treeNode }\">\n          </ng-template>\n        </ng-container>\n        <d-checkbox\n          *ngIf=\"checkable && checkable && (treeNode.data.showCheckbox === undefined ? true : treeNode.data.showCheckbox)\"\n          [(ngModel)]=\"treeNode.data.isChecked\"\n          (ngModelChange)=\"checkNodeById($event, treeNode.id)\"\n          [halfchecked]=\"treeNode.data.halfChecked\"\n          [color]=\"checkboxInput?.color\"\n          [cssClass]=\"'devui-tree-node__checkbox'\"\n          [disabled]=\"treeNode.data.disabled\"\n        >\n        </d-checkbox>\n        <ng-container *ngIf=\"iconTemplate && (!iconTemplatePosition || iconTemplatePosition === 'after-checkbox')\">\n          <ng-template [ngTemplateOutlet]=\"iconTemplate\" [ngTemplateOutletContext]=\"{ node: treeNode.data, completeNode: treeNode }\">\n          </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"nodeTemplate\">\n          <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ node: treeNode.data, completeNode: treeNode }\">\n          </ng-template>\n        </ng-container>\n        <span\n          *ngIf=\"!nodeTemplate && !treeNode.data?.editable\"\n          (dblclick)=\"nodeDblClick($event, treeNode)\"\n          (contextmenu)=\"contextmenuEvent($event, treeNode)\"\n          class=\"devui-tree-node__title\"\n          [class.select-disabled]=\"treeNode.data.disableSelect\"\n          title=\"{{ treeNode.data.title }}\"\n        >\n          <d-highlight\n            *ngIf=\"treeNode.data?.isMatch && !treeNode.data?.isCustomSearch\"\n            [value]=\"treeNode.data.title\"\n            [term]=\"treeFactory.searchItem\"\n          >\n          </d-highlight>\n          <span *ngIf=\"treeNode.data?.isMatch && treeNode.data?.isCustomSearch\" class=\"tree-node-highlight\">{{ treeNode.data.title }}</span>\n          <ng-container *ngIf=\"!treeNode.data?.isMatch\">{{ treeNode.data.title }}</ng-container>\n        </span>\n        <span class=\"devui-tree-node__edit\" *ngIf=\"!nodeTemplate && treeNode.data?.editable\">\n          <input\n            [class.error]=\"!!treeNode.data.errTips\"\n            class=\"devui-form-control devui-input-sm\"\n            type=\"text\"\n            dTreeAutoFocus\n            [(ngModel)]=\"treeNode.data.title\"\n            (blur)=\"onBlurEdit(treeNode)\"\n            (keyup.enter)=\"eventTriggerBlur($event)\"\n            (input)=\"onInputChange($event, treeNode)\"\n            dPopover\n            [content]=\"treeNode.data.errTips\"\n            [position]=\"treeNode.data.errTipsPosition\"\n            [appendToBody]=\"true\"\n            [visible]=\"!!treeNode.data.errTips\"\n            [popType]=\"'error'\"\n          />\n        </span>\n        <ng-container *ngIf=\"statusTemplate\">\n          <ng-template [ngTemplateOutlet]=\"statusTemplate\" [ngTemplateOutletContext]=\"{ node: treeNode }\"> </ng-template>\n        </ng-container>\n        <span\n          dLoading\n          [showLoading]=\"treeNode.data.loading\"\n          [loadingTemplateRef]=\"loadingTemplateRef ? loadingTemplateRef : defaultLoadingTmpl\"\n        >\n        </span>\n        <span\n          class=\"devui-tree-icons\"\n          *ngIf=\"!treeNode.data.disableAdd && (treeNode.data.isActive || treeNode.data.isHover) && addable\"\n          (click)=\"addChildNode($event, treeNode)\"\n        >\n          <svg\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g fill-rule=\"nonzero\">\n                <path\n                  d=\"M8,0 C12.418278,0 16,3.59071231 16,8 C16,12.418278 12.4092877,16 8,16 C3.581722,16 0,12.4092877 0,8 C0,3.581722 3.59071231,0 8,0 Z M8,1.5 C4.41577399,1.5 1.5,4.41351238 1.5,8 C1.5,11.584226 4.41351238,14.5 8,14.5 C11.584226,14.5 14.5,11.5864876 14.5,8 C14.5,4.41577399 11.5864876,1.5 8,1.5 Z M8,4.3 C8.38659932,4.3 8.7,4.61340068 8.7,5 L8.699,7.299 L11,7.3 C11.3865993,7.3 11.7,7.61340068 11.7,8 C11.7,8.38659932 11.3865993,8.7 11,8.7 L8.699,8.699 L8.7,11 C8.7,11.3865993 8.38659932,11.7 8,11.7 C7.61340068,11.7 7.3,11.3865993 7.3,11 L7.299,8.699 L5,8.7 C4.61340068,8.7 4.3,8.38659932 4.3,8 C4.3,7.61340068 4.61340068,7.3 5,7.3 L7.299,7.299 L7.3,5 C7.3,4.61340068 7.61340068,4.3 8,4.3 Z\"\n                ></path>\n              </g>\n            </g>\n          </svg>\n        </span>\n        <span\n          class=\"devui-tree-icons\"\n          *ngIf=\"!treeNode.data.disableEdit && (treeNode.data.isActive || treeNode.data.isHover) && editable\"\n          (click)=\"editNode($event, treeNode)\"\n        >\n          <svg\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M12.3087741,0.74795609 L14.4300944,2.86927643 C14.9182498,3.3574318 14.9182498,4.14888802 14.4300944,4.63704339 L6.76529422,12.3018436 C6.6135568,12.453581 6.42531143,12.5637003 6.21868103,12.6215999 L3.29553945,13.4406895 C2.63078755,13.6269587 1.9408986,13.2390719 1.75462937,12.57432 C1.69358229,12.356457 1.69281139,12.1261099 1.75239888,11.9078433 L2.55548559,8.96616788 C2.61274771,8.75641893 2.7237298,8.5652334 2.87747239,8.41149081 L10.5410071,0.74795609 C11.0291625,0.259800726 11.8206187,0.259800726 12.3087741,0.74795609 Z M11.4248906,1.98539296 L3.98505387,9.42522967 L3.31563544,11.8772834 L5.75092262,11.1948948 L13.1926575,3.75315991 L11.4248906,1.98539296 Z\"\n                fill-rule=\"nonzero\"\n              ></path>\n              <rect fill-rule=\"nonzero\" x=\"0\" y=\"14.5\" width=\"15\" height=\"1.5\" rx=\"0.75\"></rect>\n            </g>\n          </svg>\n        </span>\n        <span\n          class=\"devui-tree-icons\"\n          *ngIf=\"!treeNode.data.disableDelete && (treeNode.data.isActive || treeNode.data.isHover) && deletable\"\n          (click)=\"deleteNodes($event, treeNode)\"\n        >\n          <svg\n            width=\"16px\"\n            height=\"16px\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g fill-rule=\"nonzero\">\n                <path\n                  d=\"M13.0996399,1.27743711 C13.4935963,0.882043175 14.1784277,0.912988481 14.6292951,1.34651479 C15.0800797,1.78012228 15.1261817,2.45212782 14.7322253,2.84752174 L9.59690531,7.99860255 L14.7322253,13.1524782 C15.0903675,13.5119272 15.084825,14.0999809 14.7421763,14.5297048 L14.6292951,14.6534852 C14.1784277,15.0870115 13.4935963,15.1179567 13.0996399,14.7225628 L8,9.60284628 L2.90036004,14.7225628 C2.54221791,15.082012 1.94368316,15.0891145 1.49907515,14.7617204 L1.37070487,14.6534852 C0.919920289,14.2198777 0.873818322,13.5478721 1.26777466,13.1524782 L6.40166885,7.99860255 L1.26777466,2.84752174 C0.909632535,2.48807271 0.915174959,1.90001906 1.25782365,1.47029514 L1.37070487,1.34651479 C1.82157229,0.912988481 2.50640369,0.882043175 2.90036004,1.27743711 L8,6.39575625 L13.0996399,1.27743711 Z\"\n                ></path>\n              </g>\n            </g>\n          </svg>\n        </span>\n        <ng-container *ngIf=\"operatorTemplate && (treeNode.data.isActive || treeNode.data.isHover)\">\n          <ng-template\n            [ngTemplateOutlet]=\"operatorTemplate\"\n            [ngTemplateOutletContext]=\"{\n              $implicit: this,\n              node: treeNode,\n              addNode: addChildNodeProxy,\n              editNode: editNodeProxy,\n              deleteNode: deleteNodesProxy\n            }\"\n          >\n          </ng-template>\n        </ng-container>\n      </div>\n    </div>\n    <div\n      *ngIf=\"treeNode.data.isOpen\"\n      @collapseForDomDestroy\n      [@.disabled]=\"afterInitAnimate || !showAnimation\"\n      class=\"devui-tree-node__children\"\n    >\n      <d-tree-nodes [treeList]=\"treeNode.data.children || []\" [treeNodesRef]=\"operableTreeNodeRef\" [treeFactory]=\"treeFactory\">\n      </d-tree-nodes>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #defaultLoadingTmpl>\n  <span class=\"devui-loading-children\">{{ i18nCommonText?.loading }}</span>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CheckBoxModule } from 'ng-devui/checkbox';\nimport { LoadingModule } from 'ng-devui/loading';\nimport { OperableTreeComponent } from './operable-tree.component';\nimport { TreeNodesComponent } from './tree-nodes.component';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { PopoverModule } from 'ng-devui/popover';\nimport { HighlightModule, SafePipeModule} from 'ng-devui/utils';\nimport { AutofocusDirective } from './auto-focus.directive';\nimport { FilterNodesPipe } from './pipe/filter-nodes.pipe';\nimport { TransferToArrayPipe } from './pipe/transfer-to-array.pipe';\nimport { TreeComponent } from './tree.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, LoadingModule, CheckBoxModule, PopoverModule, SafePipeModule, HighlightModule, ScrollingModule],\n  exports: [TreeComponent, TreeNodesComponent, OperableTreeComponent],\n  declarations: [TreeComponent, TreeNodesComponent, OperableTreeComponent, AutofocusDirective, FilterNodesPipe, TransferToArrayPipe],\n  providers: [],\n})\nexport class TreeModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}