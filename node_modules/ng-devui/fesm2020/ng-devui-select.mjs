import { __decorate, __metadata } from 'tslib';
import * as i8 from '@angular/cdk/overlay';
import { CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';
import * as i5 from '@angular/cdk/scrolling';
import { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';
import * as i7 from '@angular/common';
import { DOCUMENT, CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { EventEmitter, forwardRef, TemplateRef, Component, ChangeDetectionStrategy, Inject, Input, ContentChild, Output, ViewChild, HostListener, NgModule } from '@angular/core';
import * as i10 from '@angular/forms';
import { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';
import * as i2 from 'ng-devui/i18n';
import * as i3 from 'ng-devui/utils';
import { addClassToOrigin, removeClassFromOrigin, AppendToBodyDirectionsConfig, formWithDropDown, fadeInOut, WithConfig, LazyLoadModule } from 'ng-devui/utils';
import * as i1 from 'ng-devui/window-ref';
import { WindowRefModule } from 'ng-devui/window-ref';
import { of, BehaviorSubject, fromEvent } from 'rxjs';
import { switchMap, map, filter, debounceTime } from 'rxjs/operators';
import * as i4 from 'ng-devui/tags';
import { TagsModule } from 'ng-devui/tags';
import * as i6 from 'ng-devui/checkbox';
import { CheckBoxModule } from 'ng-devui/checkbox';
import * as i9 from 'ng-devui/loading';
import { LoadingModule } from 'ng-devui/loading';

class SelectComponent {
    constructor(renderer, windowRef, changeDetectorRef, i18n, ngZone, devConfigService, doc) {
        this.renderer = renderer;
        this.windowRef = windowRef;
        this.changeDetectorRef = changeDetectorRef;
        this.i18n = i18n;
        this.ngZone = ngZone;
        this.devConfigService = devConfigService;
        this.doc = doc;
        /**
         * 【必选】下拉选项资源，支持Array<string>, Array<{key: value}>
         */
        this.options = [];
        /**
         * 【可选】是否支持过滤搜索
         */
        this.isSearch = false;
        /**
         * 【可选】是否支持聚焦自动展开下拉
         */
        this.toggleOnFocus = false;
        /**
         * 【可选】下拉菜单高度，建议使用px作为高度单位
         */
        this.scrollHight = '300px';
        /**
         * 【可选】下拉高亮css
         */
        this.highlightItemClass = 'active';
        /**
         * 【可选】是否支持全选
         */
        this.isSelectAll = false;
        /**
         * 【可选】是否可以输入
         */
        this.readonly = true;
        /**
         * 【可选】是否appendToBody
         */
        this.appendToBody = false;
        /**
       * 【可选】cdk模式overlay Positions的控制
       */
        this.appendToBodyDirections = [
            'rightDown', 'leftDown', 'rightUp', 'leftUp'
        ];
        /**
         * 【可选】是否禁用下拉框
         */
        this.disabled = false;
        /**
         * 【可选】下拉默认显示文字
         */
        this.placeholder = '';
        this.searchPlaceholder = '';
        this.direction = 'down';
        this.overview = 'border';
        /**
         *  【可选】是否开启clear功能（是否开启只对单选生效）
         */
        this.allowClear = false;
        /**
         *  【可选】启用数据懒加载，默认不启用
         */
        this.enableLazyLoad = false;
        /**
         * 输出函数，当选中某个选项项后，将会调用此函数，参数为当前选择项的值。如果需要获取所有选择状态的值，请参考(ngModelChange)方法
         */
        this.valueChange = new EventEmitter();
        /**
         * select下拉toggle事件，值为true或false
         */
        this.toggleChange = new EventEmitter();
        this.loadMore = new EventEmitter();
        /**
         * 【当传入资源（options）类型为Array<{key: value}，必选】针对传入资源options的每项对应字段做禁用操作的key
         */
        this.optionDisabledKey = '';
        /**
         * 【当传入资源（options）类型为Array<{key: value}，必选】针对传入资源options的每项对应字段禁止变更的key
         */
        this.optionImmutableKey = '';
        /**
         * 【可选】配置多选的时候是否维持原数组排序还是用户选择的顺序排序，默认是用户顺序
         */
        this.keepMultipleOrder = 'user-select';
        /**
         * customViewTemplate的方向，支持下方和右方
         */
        this.customViewDirection = 'bottom';
        this.autoFocus = false;
        this.notAutoScroll = false; // 自动聚焦的时候，自动滚动到select位置
        this.showAnimation = true;
        this.virtualScrollViewportSizeMightChange = false;
        this.showLoading = false;
        this._isOpen = false;
        this.menuPosition = 'bottom';
        this.halfChecked = false;
        this.allChecked = false;
        this.isMouseEvent = false;
        this.startAnimation = false;
        this.filter = '';
        this.activeIndex = -1;
        // for multiple
        this.availableOptions = [];
        this.multiItems = [];
        this.selectIndex = -1;
        this.virtualScrollItemSize = {
            sm: 30,
            normal: 36,
            lg: 50,
            space: 4
        };
        this.resetting = false;
        this.onChange = (_) => null;
        this.onTouch = () => null;
        this.choose = (option, index, $event) => {
            if ($event) {
                $event.preventDefault();
                $event.stopPropagation();
            }
            if (typeof option === 'object') {
                if (Object.keys(option).length === 0 || this.disabled) {
                    this.isOpen = false;
                    return;
                }
            }
            else {
                if (this.disabled) {
                    this.isOpen = false;
                    return;
                }
            }
            if (this.optionDisabledKey && option[this.optionDisabledKey]) {
                return;
            }
            if (this.optionImmutableKey && option[this.optionImmutableKey]) {
                return;
            }
            if (this.multiple) {
                const indexOfOption = this.multiItems.findIndex(item => JSON.stringify(item.option) === JSON.stringify(option));
                if (indexOfOption === -1) {
                    this.multiItems.push({ id: index, option });
                }
                else {
                    this.multiItems.splice(indexOfOption, 1);
                }
                if (this.keepMultipleOrder === 'origin') {
                    this.multiItems.sort((a, b) => a.id - b.id);
                }
                this.value = this.multiItems.map(item => item.option);
            }
            else {
                this.value = option;
                this.activeIndex = index;
                this.selectIndex = index;
                this.toggle();
            }
            this.writeIntoInput(this.value);
            this.onChange(this.value);
            this.valueChange.emit(option);
            this.setChecked(this.value);
        };
        this.onDocumentClick = ($event) => {
            if (this.isOpen && !this.selectBoxElement.nativeElement.contains($event.target)) {
                this.isOpen = false;
                this.selectIndex = this.activeIndex ? this.activeIndex : -1;
                this.changeDetectorRef.detectChanges();
            }
        };
        this.getSelectedItem = () => {
            return this.extraConfig?.enableFocusFirstFilteredOption && this.multiple && this.availableOptions.length
                ? this.availableOptions[0]
                : this.availableOptions[this.selectIndex];
        };
        this.valueParser = item => (typeof item === 'object' ? item[this.filterKey] || '' : (String(item)) ? item.toString() : '');
        this.formatter = item => (typeof item === 'object' ? item[this.filterKey] || '' : (String(item)) ? item.toString() : '');
        this.document = this.doc;
    }
    get isOpen() {
        return this._isOpen;
    }
    set isOpen(value) {
        this._isOpen = value;
        this.toggleChange.emit(value);
        this.setDocumentClickListener();
        if (this.selectWrapper) {
            this.dropDownWidth = this.width ? this.width : (this.selectWrapper.nativeElement.offsetWidth);
        }
        if (value) {
            addClassToOrigin(this.selectWrapper);
            setTimeout(() => {
                this.startAnimation = true;
                this.changeDetectorRef.detectChanges();
            });
        }
        else {
            removeClassFromOrigin(this.selectWrapper);
            this.onTouch();
        }
    }
    get isClearIconShow() {
        return this.allowClear && !this.multiple && !this.disabled && this.value;
    }
    ngOnInit() {
        if (!this.searchFn) {
            this.searchFn = (term) => {
                return of((this.options ? this.options : [])
                    .map((option, index) => ({ option: option, id: index }))
                    .filter(item => this.formatter(item.option)
                    .toLowerCase()
                    .indexOf(term.toLowerCase()) !== -1));
            };
        }
        // 只有多选的情况isSelectAll为true才有意义
        if (!this.multiple) {
            this.isSelectAll = false;
        }
        this.setI18nText();
        this.registerFilterChange();
        this.setPositions();
    }
    ngAfterViewInit() {
        if (this.autoFocus && this.selectBoxElement) {
            setTimeout(() => {
                this.selectBoxElement.nativeElement.focus({
                    preventScroll: this.notAutoScroll
                });
            });
        }
    }
    ngOnDestroy() {
        if (this.sourceSubscription) {
            this.sourceSubscription.unsubscribe();
        }
        if (this.filterSubscription) {
            this.filterSubscription.unsubscribe();
        }
        if (this.i18nSubscription) {
            this.i18nSubscription.unsubscribe();
        }
        this.document.removeEventListener('click', this.onDocumentClick);
    }
    ngOnChanges(changes) {
        if (changes && (changes.searchFn || changes.options)) {
            this.resetSource();
            if (this.virtualScroll && this.virtualScrollViewport) {
                this.virtualScrollViewportSizeMightChange = true;
                this.virtualScrollViewport.checkViewportSize();
            }
        }
        if (changes['appendToBodyDirections']) {
            this.setPositions();
        }
    }
    setPositions() {
        if (this.appendToBodyDirections && this.appendToBodyDirections.length > 0) {
            this.overlayPositions = this.appendToBodyDirections.map(position => {
                if (typeof position === 'string') {
                    return AppendToBodyDirectionsConfig[position];
                }
                else {
                    return position;
                }
            }).filter(position => position !== undefined);
        }
        else {
            this.overlayPositions = undefined;
        }
    }
    setI18nText() {
        this.i18nCommonText = this.i18n.getI18nText().common;
        this.i18nSubscription = this.i18n.langChange().subscribe((data) => {
            this.i18nCommonText = data.common;
        });
    }
    getVirtualScrollHeight(len, size) {
        if (len > 0) {
            let height = (this.templateItemSize || this.virtualScrollItemSize[size || 'normal']) * len + this.virtualScrollItemSize.space * (len - 1);
            if (this.isSelectAll && this.multiple) {
                height += this.virtualScrollItemSize[size ? size : 'normal'] + this.virtualScrollItemSize.space;
            }
            const scrollHeight = parseInt(this.scrollHight, 10);
            this.scrollHeightNum = height > scrollHeight ? scrollHeight : height;
            return `${this.scrollHeightNum}px`;
        }
    }
    get realVirtualScrollItemSize() {
        const itemSize = (this.templateItemSize || this.virtualScrollItemSize[this.size || 'normal']) + this.virtualScrollItemSize.space;
        const num = Math.round(this.scrollHeightNum / itemSize) || 10;
        this.minBuffer = num * 1.5 * itemSize;
        this.maxBuffer = num * 2.5 * itemSize;
        return itemSize;
    }
    resetSource() {
        if (this.sourceSubscription && this.searchFn) {
            this.resetting = true;
            this.sourceSubscription.next('');
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouch = fn;
    }
    registerFilterChange() {
        this.sourceSubscription = new BehaviorSubject('');
        this.sourceSubscription.pipe(switchMap(term => this.searchFn(term))).subscribe(options => {
            this.availableOptions = options;
            this.setAvailableOptions();
            this.changeDetectorRef.markForCheck();
            if (this.appendToBody) {
                setTimeout(() => {
                    if (this.connectedOverlay && this.connectedOverlay.overlayRef) {
                        this.connectedOverlay.overlayRef.updatePosition();
                    }
                });
            }
            // 显示数据变更，需要判断全选半选状态
            if (this.isSelectAll) {
                const selectedItemForFilterOptions = [];
                this.multiItems.forEach(item => {
                    this.availableOptions.forEach(option => {
                        if (item['id'] === option['id']) {
                            selectedItemForFilterOptions.push(item);
                        }
                    });
                });
                this.setChecked(selectedItemForFilterOptions);
            }
            if (!this.multiple && (!this.value || this.availableOptions && !this.availableOptions.find(option => option.option === this.value))) {
                this.selectIndex = this.filter && this.availableOptions && this.availableOptions.length > 0 ? 0 : -1;
            }
        });
        this.sourceSubscription.subscribe(term => {
            if (this.resetting && term === '') {
                this.writeValue(this.value);
                this.resetting = false;
            }
        });
        this.searchInputValueChangeEvent();
    }
    searchInputValueChangeEvent() {
        if (this.isSearch && this.isOpen && this.filterInputElement) {
            this.filterInputElement.nativeElement.focus();
            if (!this.filterSubscription || this.appendToBody) { // 避免重复订阅
                this.filterSubscription = fromEvent(this.filterInputElement.nativeElement, 'input')
                    .pipe(map((e) => e.target.value), filter(term => !this.disabled && this.searchFn && term.length >= 0), debounceTime(300) // hard code need refactory
                )
                    .subscribe(term => {
                    this.selectIndex = -1;
                    return this.sourceSubscription.next(term);
                });
            }
        }
    }
    writeValue(obj) {
        let objValue = obj;
        if (obj === null || obj === undefined) {
            if (this.multiple) {
                objValue = [];
            }
            else {
                objValue = '';
            }
        }
        this.value = objValue;
        if (this.multiple) {
            this.value = this.value ? this.value : [];
            this.value = Array.isArray(this.value) ? this.value : [this.value];
            this.multiItems = this.value.map((option, index) => ({ option: option, id: this.options.indexOf(option) }));
        }
        else {
            const selectedItem = this.availableOptions.find(item => this.formatter(item.option) === this.formatter(this.value));
            this.activeIndex = selectedItem ? selectedItem.id : -1;
            this.selectIndex = this.activeIndex ? this.activeIndex : -1;
        }
        this.writeIntoInput(this.value);
        this.changeDetectorRef.markForCheck();
        this.setChecked(this.value);
    }
    writeIntoInput(value) {
        this._inputValue = this.multiple
            ? (value || []).map(option => this.valueParser(option)).join(', ')
            : this.valueParser(value);
        this.setAvailableOptions();
    }
    setAvailableOptions() {
        if (!this.value || !Array.isArray(this.availableOptions)) {
            return;
        }
        let _value = this.value;
        if (!this.multiple) {
            _value = [_value];
        }
        this.availableOptions = this.availableOptions
            .map((item) => ({
            isChecked: _value.findIndex(i => JSON.stringify(i) === JSON.stringify(item.option)) > -1, id: item.id, option: item.option
        }));
    }
    updateCdkConnectedOverlayOrigin() {
        if (this.selectWrapper.nativeElement) {
            this.cdkConnectedOverlayOrigin = new CdkOverlayOrigin(formWithDropDown(this.selectWrapper) || this.selectWrapper.nativeElement);
        }
    }
    autoToggle($event) {
        $event.preventDefault();
        $event.stopPropagation();
        if (this.toggleOnFocus && !this.disabled && !this.isOpen && !this.isMouseEvent) {
            this.toggle();
        }
    }
    // mousedown mouseup解决focus与click冲突问题
    setMouseEventTrue(event) {
        this.isMouseEvent = true;
    }
    setMouseEventFalse(event) {
        this.isMouseEvent = false;
    }
    toggle() {
        if (this.disabled) {
            this.isOpen = false;
            return;
        }
        if (!this.isOpen) {
            this.filter = '';
            this.resetSource();
            if (!this.appendToBody) {
                let direction = '';
                switch (this.direction) {
                    case 'auto':
                        direction = this.isBottomRectEnough() ? 'bottom' : 'top';
                        break;
                    case 'down':
                        direction = 'bottom';
                        break;
                    case 'up':
                        direction = 'top';
                        break;
                    default:
                        direction = 'bottom';
                }
                this.popDirection = direction;
            }
            else {
                this.updateCdkConnectedOverlayOrigin();
            }
        }
        else if (!this.showAnimation) {
            this.startAnimation = false;
        }
        this.isOpen = !this.isOpen;
        if (this.virtualScrollViewportSizeMightChange) { // 解决虚拟滚动更新options长度展开前无法获取正确高度影响
            setTimeout(() => {
                if (this.virtualScrollViewportSizeMightChange && this.virtualScrollViewport) {
                    this.virtualScrollViewportSizeMightChange = false;
                    this.virtualScrollViewport.checkViewportSize();
                }
            }, 0);
        }
        if (this.isSearch && this.isOpen) { // 条件外移减少setTimeout
            setTimeout(() => {
                this.searchInputValueChangeEvent();
            }, 100);
        }
    }
    isBottomRectEnough() {
        const selectMenuElement = this.selectMenuElement.nativeElement;
        const selectInputElement = this.selectInputElement || this.selectInputWithLabelElement || this.selectInputWithTemplateElement;
        const displayStyle = selectMenuElement.style['display'] || window.getComputedStyle(selectMenuElement).display;
        let tempStyle;
        if (displayStyle === 'none') { // 必要， 否则首次展开必有问题， 如果animationEnd之后设置为none也会有问题
            tempStyle = {
                visibility: selectMenuElement.style.visibility,
                display: selectMenuElement.style.display,
                transform: selectMenuElement.style.transform,
            };
            this.renderer.setStyle(selectMenuElement, 'visibility', 'hidden');
            this.renderer.setStyle(selectMenuElement, 'display', 'block');
            this.renderer.setStyle(selectMenuElement, 'transform', 'translate(0, -9999)');
        }
        const elementHeight = selectMenuElement.offsetHeight;
        const bottomDistance = this.windowRef.innerHeight - selectInputElement.nativeElement.getBoundingClientRect().bottom;
        const isBottomEnough = bottomDistance >= elementHeight;
        if (displayStyle === 'none') {
            this.renderer.setStyle(selectMenuElement, 'visibility', tempStyle.visibility);
            this.renderer.setStyle(selectMenuElement, 'display', tempStyle.display);
            this.renderer.setStyle(selectMenuElement, 'transform', tempStyle.transform);
        }
        return isBottomEnough;
    }
    setDocumentClickListener() {
        this.ngZone.runOutsideAngular(() => {
            if (this.isOpen) {
                this.document.addEventListener('click', this.onDocumentClick);
            }
            else {
                this.document.removeEventListener('click', this.onDocumentClick);
            }
        });
    }
    onEscKeyup($event) {
        if (this.isOpen) {
            $event.stopPropagation();
        }
        this.isOpen = false;
    }
    handleKeyUpEvent($event) {
        if (this.isOpen) {
            $event.preventDefault();
            $event.stopPropagation();
            this.selectIndex = this.selectIndex === 0 || this.selectIndex === -1 ? this.availableOptions.length - 1 : this.selectIndex - 1;
            this.scrollToActive();
        }
    }
    handleKeyDownEvent($event) {
        if (this.isOpen) {
            $event.preventDefault();
            $event.stopPropagation();
            this.selectIndex =
                this.selectIndex === this.availableOptions.length - 1 ? 0 : this.selectIndex + 1;
            this.scrollToActive();
        }
    }
    scrollToActive() {
        const that = this;
        setTimeout(_ => {
            try {
                const selectIndex = that.selectIndex + (that.isSelectAll ? 1 : 0); // 多了个全选会导致问题，index需要加1
                const scrollPane = that.dropdownUl.nativeElement.children[selectIndex];
                if (scrollPane.scrollIntoViewIfNeeded) {
                    scrollPane.scrollIntoViewIfNeeded(false);
                }
                else {
                    const containerInfo = that.dropdownUl.nativeElement.getBoundingClientRect();
                    const elementInfo = scrollPane.getBoundingClientRect();
                    if (elementInfo.bottom > containerInfo.bottom || elementInfo.top < containerInfo.top) {
                        scrollPane.scrollIntoView(false);
                    }
                }
            }
            catch (e) {
            }
        });
    }
    handleKeyEnterEvent($event) {
        if (this.isOpen) {
            $event.preventDefault();
            $event.stopPropagation();
            const item = this.getSelectedItem();
            if (item) {
                this.choose(item.option, item.id, $event);
            }
            else {
                this.toggle();
            }
        }
        else {
            this.toggle();
        }
    }
    removeItem(item, $event) {
        this.choose(item.option, item.id, $event);
    }
    selectAll() {
        const mutableOption = this.optionImmutableKey
            ? this.availableOptions.filter(item => !item.option[this.optionImmutableKey])
            : this.availableOptions;
        const selectedImmutableOption = this.optionImmutableKey
            ? this.multiItems.filter(item => item.option[this.optionImmutableKey])
            : [];
        if (mutableOption && mutableOption.length > (this.multiItems.length - selectedImmutableOption.length)) {
            mutableOption.forEach(item => {
                const indexOfOption = this.multiItems
                    .findIndex(i => JSON.stringify(i.option) === JSON.stringify(item.option));
                if (indexOfOption === -1) {
                    this.multiItems.push({ id: item.id, option: item.option });
                }
            });
        }
        else {
            this.multiItems = [...selectedImmutableOption];
        }
        this.value = this.multiItems.map(item => item.option);
        this.writeIntoInput(this.value);
        this.onChange(this.value);
        this.valueChange.emit(this.multiItems);
        this.setChecked(this.value);
    }
    trackByFn(index, item) {
        return index;
    }
    trackByOptionPointer(index, item) {
        return item.option;
    }
    loadMoreEvent(event) {
        this.showLoading = true;
        this.loadMore.emit({ instance: this, event: event });
    }
    loadFinish() {
        this.showLoading = false;
        this.changeDetectorRef.markForCheck();
    }
    loadStart() {
        this.showLoading = true;
        this.changeDetectorRef.markForCheck();
    }
    onPositionChange(position) {
        this.menuPosition = position.connectionPair.originY;
    }
    animationEnd($event) {
        if (!this.isOpen && this.selectMenuElement && this.showAnimation) {
            const targetElement = this.selectMenuElement.nativeElement;
            this.startAnimation = false;
            setTimeout(() => {
                // 动画会覆盖导致display还是block， 所以要等动画覆盖完
                this.renderer.setStyle(targetElement, 'display', 'none');
            });
        }
    }
    setChecked(selectedItem) {
        if (!selectedItem) {
            return;
        }
        if (!this.isSelectAll) {
            return;
        }
        this.halfChecked = false;
        if (selectedItem.length === this.availableOptions.length) {
            this.allChecked = true;
        }
        else if (selectedItem.length === 0) {
            this.allChecked = false;
        }
        else {
            this.halfChecked = true;
        }
    }
    showSelectAll() {
        return this.isSelectAll && this.multiple && this.availableOptions.length > 0;
    }
    forceSearchNext() {
        this.sourceSubscription.next(this.filter);
    }
    valueClear($event) {
        $event.stopPropagation();
        this.value = null;
        this.resetStatus();
        this.onChange(this.value);
        this.valueChange.emit(this.value);
    }
    resetStatus() {
        this.writeIntoInput('');
        if (this.availableOptions && this.availableOptions[this.activeIndex]) {
            this.availableOptions[this.activeIndex].isChecked = false;
        }
        this.activeIndex = -1;
        this.selectIndex = -1;
        this.changeDetectorRef.markForCheck();
    }
    clearText() {
        this.filter = '';
        this.forceSearchNext();
    }
}
SelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: SelectComponent, deps: [{ token: i0.Renderer2 }, { token: i1.WindowRef }, { token: i0.ChangeDetectorRef }, { token: i2.I18nService }, { token: i0.NgZone }, { token: i3.DevConfigService }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });
SelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: SelectComponent, selector: "d-select", inputs: { options: "options", isSearch: "isSearch", toggleOnFocus: "toggleOnFocus", scrollHight: "scrollHight", highlightItemClass: "highlightItemClass", filterKey: "filterKey", multiple: "multiple", isSelectAll: "isSelectAll", readonly: "readonly", size: "size", appendToBody: "appendToBody", appendToBodyDirections: "appendToBodyDirections", width: "width", templateItemSize: "templateItemSize", disabled: "disabled", placeholder: "placeholder", searchPlaceholder: "searchPlaceholder", searchFn: "searchFn", valueParser: "valueParser", formatter: "formatter", direction: "direction", overview: "overview", allowClear: "allowClear", color: "color", enableLazyLoad: "enableLazyLoad", virtualScroll: "virtualScroll", inputItemTemplate: "inputItemTemplate", extraConfig: "extraConfig", optionDisabledKey: "optionDisabledKey", optionImmutableKey: "optionImmutableKey", noResultItemTemplate: "noResultItemTemplate", keepMultipleOrder: "keepMultipleOrder", customViewTemplate: "customViewTemplate", customViewDirection: "customViewDirection", autoFocus: "autoFocus", notAutoScroll: "notAutoScroll", loadingTemplateRef: "loadingTemplateRef", showAnimation: "showAnimation" }, outputs: { valueChange: "valueChange", toggleChange: "toggleChange", loadMore: "loadMore" }, host: { listeners: { "mousedown": "setMouseEventTrue($event)", "mouseup": "setMouseEventFalse($event)" } }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            useExisting: forwardRef(() => SelectComponent),
            multi: true
        }
    ], queries: [{ propertyName: "itemTemplate", first: true, predicate: TemplateRef, descendants: true }], viewQueries: [{ propertyName: "selectWrapper", first: true, predicate: ["selectWrapper"], descendants: true, static: true }, { propertyName: "selectInputElement", first: true, predicate: ["selectInput"], descendants: true }, { propertyName: "selectMenuElement", first: true, predicate: ["selectMenu"], descendants: true }, { propertyName: "selectBoxElement", first: true, predicate: ["selectBox"], descendants: true, static: true }, { propertyName: "selectInputWithTemplateElement", first: true, predicate: ["selectInputWithTemplate"], descendants: true }, { propertyName: "selectInputWithLabelElement", first: true, predicate: ["selectInputWithLabel"], descendants: true }, { propertyName: "filterInputElement", first: true, predicate: ["filterInput"], descendants: true }, { propertyName: "dropdownUl", first: true, predicate: ["dropdownUl"], descendants: true }, { propertyName: "connectedOverlay", first: true, predicate: CdkConnectedOverlay, descendants: true }, { propertyName: "virtualScrollViewport", first: true, predicate: CdkVirtualScrollViewport, descendants: true }], exportAs: ["select"], usesOnChanges: true, ngImport: i0, template: "<div\n  class=\"devui-drop{{ popDirection === 'bottom' ? 'down' : 'up' }} \n  {{ size ? 'devui-select-' + size : '' }} \n  devui-dropdown-origin\"\n  [ngClass]=\"[isOpen ? 'open' : '', overview === 'underlined' ? 'devui-select-underlined-border' : '', disabled ? 'disabled' : '']\"\n  #selectWrapper\n>\n  <div\n    #selectBox\n    class=\"devui-form-group devui-has-feedback\"\n    (click)=\"toggle()\"\n    (focus)=\"autoToggle($event)\"\n    [tabindex]=\"0\"\n    (keydown.esc)=\"onEscKeyup($event)\"\n    (keydown.ArrowUp)=\"handleKeyUpEvent($event)\"\n    (keydown.ArrowDown)=\"handleKeyDownEvent($event)\"\n    (keydown.enter)=\"handleKeyEnterEvent($event)\"\n  >\n    <input\n      #selectInput\n      [placeholder]=\"placeholder\"\n      [disabled]=\"disabled\"\n      [ngClass]=\"[size ? 'devui-select-input-' + size : '']\"\n      type=\"text\"\n      class=\"devui-form-control devui-select-input devui-input\"\n      [minLength]=\"0\"\n      autocomplete=\"off\"\n      [tabindex]=\"-1\"\n      [readonly]=\"readonly\"\n      [value]=\"_inputValue || ''\"\n      *ngIf=\"\n        !(extraConfig?.labelization?.enable && multiple) &&\n        !(!extraConfig?.labelization?.enable && extraConfig?.selectedItemWithTemplate?.enable && (inputItemTemplate || itemTemplate))\n      \"\n    />\n    <div\n      #selectInputWithTemplate\n      class=\"devui-select-list-wrapper devui-form-control {{ size ? 'devui-select-input-' + size : '' }}\"\n      *ngIf=\"extraConfig?.selectedItemWithTemplate?.enable && (inputItemTemplate || itemTemplate) && !extraConfig?.labelization?.enable\"\n    >\n      <div class=\"devui-select-placeholder\" *ngIf=\"!_inputValue\">\n        {{ placeholder }}\n      </div>\n      <div class=\"devui-select-selected-item-with-template\" *ngIf=\"_inputValue\">\n        <ng-template\n          [ngTemplateOutlet]=\"inputItemTemplate || itemTemplate\"\n          [ngTemplateOutletContext]=\"{\n            option: value,\n            filterKey: filterKey,\n            position: 'result',\n            inputValue: _inputValue\n          }\"\n        >\n        </ng-template>\n      </div>\n    </div>\n\n    <div\n      #selectInputWithLabel\n      class=\"devui-select-list-wrapper devui-form-control {{ size ? 'devui-select-input-' + size : '' }}\"\n      *ngIf=\"extraConfig?.labelization?.enable && multiple\"\n    >\n      <div class=\"devui-select-placeholder\" *ngIf=\"multiItems.length === 0\">\n        {{ placeholder }}\n      </div>\n      <ul\n        class=\"devui-select-tag-list {{ extraConfig?.labelization?.overflow }}\"\n        [style.maxHeight]=\"extraConfig?.labelization?.containerMaxHeight || extraConfig?.labelization?.containnerMaxHeight\"\n        *ngIf=\"multiItems.length > 0\"\n      >\n        <li\n          class=\"devui-select-tag-item\"\n          *ngFor=\"let item of multiItems; let index = index; trackBy: trackByOptionPointer\"\n          [style.maxWidth]=\"extraConfig?.labelization?.labelMaxWidth\"\n          [ngClass]=\"{\n            disabled: optionDisabledKey && item.option[optionDisabledKey]\n          }\"\n        >\n          <d-tag\n            [deletable]=\"!(disabled || (optionDisabledKey && item.option[optionDisabledKey]))\"\n            [tag]=\"valueParser(item.option)\"\n            (tagDelete)=\"removeItem(item, $event?.event)\"\n          ></d-tag>\n        </li>\n      </ul>\n    </div>\n\n    <span class=\"devui-form-control-feedback devui-input-group-addon\" [ngClass]=\"{ 'devui-clear-icon-show': isClearIconShow }\">\n      <span class=\"devui-select-clear-icon\" (mousedown)=\"$event.preventDefault()\" (click)=\"valueClear($event)\"> </span>\n      <span class=\"devui-select-chevron-icon\" [ngClass]=\"{ 'devui-select-chevron-icon-animation': showAnimation }\">\n        <svg\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <path\n              d=\"M12.1464466,6.85355339 L8.35355339,10.6464466 C8.15829124,10.8417088 7.84170876,10.8417088 7.64644661,10.6464466 L3.85355339,6.85355339 C3.65829124,6.65829124 3.65829124,6.34170876 3.85355339,6.14644661 C3.94732158,6.05267842 4.07449854,6 4.20710678,6 L11.7928932,6 C12.0690356,6 12.2928932,6.22385763 12.2928932,6.5 C12.2928932,6.63260824 12.2402148,6.7597852 12.1464466,6.85355339 Z\"\n              fill-rule=\"nonzero\"\n            ></path>\n          </g>\n        </svg>\n      </span>\n    </span>\n  </div>\n  <ng-container *ngIf=\"appendToBody\">\n    <ng-template\n      cdk-connected-overlay\n      [cdkConnectedOverlayOrigin]=\"cdkConnectedOverlayOrigin\"\n      [cdkConnectedOverlayWidth]=\"dropDownWidth\"\n      [cdkConnectedOverlayOpen]=\"isOpen\"\n      [cdkConnectedOverlayPositions]=\"overlayPositions\"\n      (positionChange)=\"onPositionChange($event)\"\n      (backdropClick)=\"isOpen = false\"\n    >\n      <ng-template [ngTemplateOutlet]=\"selectDropdownTpl\"></ng-template>\n    </ng-template>\n  </ng-container>\n  <ng-container *ngIf=\"!appendToBody\">\n    <ng-template [ngTemplateOutlet]=\"selectDropdownTpl\"></ng-template>\n  </ng-container>\n</div>\n\n<!--\u4E0B\u62C9\u6A21\u677F-->\n<ng-template #selectDropdownTpl>\n  <div\n    #selectMenu\n    class=\"devui-dropdown-menu\"\n    [ngClass]=\"{\n      'devui-dropdown-menu-cdk': appendToBody,\n      'devui-custom-right': customViewTemplate && customViewDirection === 'right',\n      'devui-custom-left': customViewTemplate && customViewDirection === 'left',\n      'devui-custom-top': customViewTemplate && customViewDirection === 'top',\n      'devui-dropdown-menu-multiple': multiple,\n      'devui-reset-min-width': width\n    }\"\n    [@fadeInOut]=\"isOpen && startAnimation ? (appendToBody ? menuPosition : popDirection) : 'void'\"\n    (@fadeInOut.done)=\"animationEnd($event)\"\n    [@.disabled]=\"!showAnimation\"\n  >\n    <ul\n      dLoading\n      [showLoading]=\"showLoading\"\n      positionType=\"relative\"\n      [message]=\"i18nCommonText?.loading\"\n      [loadingTemplateRef]=\"loadingTemplateRef\"\n      [backdrop]=\"true\"\n      class=\"devui-dropdown-menu-wrap {{ size ? 'devui-dropdown-menu-' + size : '' }}\"\n      (click)=\"$event.stopPropagation(); $event.preventDefault()\"\n    >\n      <li [style.display]=\"isSearch ? 'block' : 'none'\">\n        <div class=\"devui-form-group devui-has-feedback\" [style.margin]=\"'0'\">\n          <input\n            #filterInput\n            [ngClass]=\"[size ? 'devui-select-input-' + size : '', filter ? 'devui-search-filter' : '']\"\n            name=\"select\"\n            type=\"text\"\n            [(ngModel)]=\"filter\"\n            autocomplete=\"off\"\n            [placeholder]=\"searchPlaceholder\"\n            class=\"devui-form-control devui-select-search devui-select-input\"\n            (keydown.ArrowUp)=\"handleKeyUpEvent($event)\"\n            (keydown.ArrowDown)=\"handleKeyDownEvent($event)\"\n            (keydown.enter)=\"handleKeyEnterEvent($event)\"\n            (keydown.esc)=\"onEscKeyup($event)\"\n          />\n          <span class=\"devui-form-control-feedback\">\n            <svg\n              width=\"14px\"\n              height=\"14px\"\n              viewBox=\"0 0 14 14\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              class=\"svg-icon-search\"\n              style=\"vertical-align: middle\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <g transform=\"translate(-1.000000, -1.000000)\">\n                  <path\n                    d=\"M7.30811922,1 C10.7919973,1 13.6162384,3.82424117 13.6162384,7.30811922 C13.6162384,8.72507634 13.149053,10.0329164 12.3603151,11.0860065 L14.7360564,13.4616238 C15.0879812,13.8135487 15.0879812,14.3841316 14.7360564,14.7360564 C14.3841316,15.0879812 13.8135487,15.0879812 13.4616238,14.7360564 L11.0860065,12.3603151 C10.0329164,13.149053 8.72507634,13.6162384 7.30811922,13.6162384 C3.82424117,13.6162384 1,10.7919973 1,7.30811922 C1,3.82424117 3.82424117,1 7.30811922,1 Z M7.31,2.51 C4.6590332,2.51 2.51,4.6590332 2.51,7.31 C2.51,9.9609668 4.6590332,12.11 7.31,12.11 C9.9609668,12.11 12.11,9.9609668 12.11,7.31 C12.11,4.6590332 9.9609668,2.51 7.31,2.51 Z\"\n                    fill-rule=\"nonzero\"\n                  ></path>\n                </g>\n              </g>\n            </svg>\n          </span>\n          <span\n            #clearIcon\n            class=\"devui-form-control-feedback devui-search-clear\"\n            [ngClass]=\"size ? 'devui-search-clear-' + size : ''\"\n            (click)=\"clearText()\"\n            *ngIf=\"filter\"\n          >\n            <svg\n              width=\"16px\"\n              height=\"16px\"\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <path\n                  d=\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M5.87867966,5.17157288 C5.68341751,4.97631073 5.36683502,4.97631073 5.17157288,5.17157288 C4.99800652,5.34513923 4.97872137,5.61456363 5.11371742,5.80943177 L5.17157288,5.87867966 L7.29218611,7.99929289 L5.17157288,10.1213203 C4.97631073,10.3165825 4.97631073,10.633165 5.17157288,10.8284271 C5.34513923,11.0019935 5.61456363,11.0212786 5.80943177,10.8862826 L5.87867966,10.8284271 L7.99929289,8.70639967 L10.1213203,10.8284271 C10.3165825,11.0236893 10.633165,11.0236893 10.8284271,10.8284271 C11.0019935,10.6548608 11.0212786,10.3854364 10.8862826,10.1905682 L10.8284271,10.1213203 L8.70710678,8 L10.8284271,5.87867966 C11.0236893,5.68341751 11.0236893,5.36683502 10.8284271,5.17157288 C10.6548608,4.99800652 10.3854364,4.97872137 10.1905682,5.11371742 L10.1213203,5.17157288 L8,7.29289322 L5.87867966,5.17157288 Z\"\n                  fill-rule=\"nonzero\"\n                ></path>\n              </g>\n            </svg>\n          </span>\n        </div>\n      </li>\n      <ul\n        *ngIf=\"!virtualScroll || enableLazyLoad; else scrollViewTpl\"\n        class=\"devui-select-list-unstyled devui-scrollbar\"\n        dLazyLoad\n        [enableLazyLoad]=\"enableLazyLoad\"\n        (loadMore)=\"loadMoreEvent($event)\"\n        [ngStyle]=\"{ 'max-height': scrollHight, width: '100%' }\"\n        #dropdownUl\n      >\n        <ng-template [ngTemplateOutlet]=\"selectAllTpl\"></ng-template>\n        <ng-container *ngFor=\"let item of availableOptions; let index = index; trackBy: trackByFn\">\n          <ng-template [ngTemplateOutlet]=\"dropdownItemTpl\" [ngTemplateOutletContext]=\"{ item: item, index: index }\"></ng-template>\n        </ng-container>\n        <div *ngIf=\"availableOptions?.length === 0 && !noResultItemTemplate && !this.showLoading\" class=\"devui-no-data-tip\">\n          {{ filter ? i18nCommonText?.noRecordsFound : i18nCommonText?.noData }}\n        </div>\n      </ul>\n\n      <div *ngIf=\"availableOptions?.length === 0 && noResultItemTemplate && !this.showLoading\" class=\"devui-no-data-tip\">\n        <ng-template [ngTemplateOutlet]=\"noResultItemTemplate\" [ngTemplateOutletContext]=\"{ options: options }\"></ng-template>\n      </div>\n    </ul>\n    <ng-container *ngIf=\"customViewTemplate\">\n      <div class=\"devui-select-custom-area\">\n        <ng-template [ngTemplateOutlet]=\"customViewTemplate\" [ngTemplateOutletContext]=\"{ $implicit: this, choose: choose }\"></ng-template>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n\n<!--\u865A\u62DF\u6EDA\u52A8\u6A21\u677F-->\n<ng-template #scrollViewTpl>\n  <cdk-virtual-scroll-viewport\n    [ngStyle]=\"{\n      height: getVirtualScrollHeight(availableOptions?.length, size),\n      width: '100%',\n      'max-height': scrollHight\n    }\"\n    [itemSize]=\"realVirtualScrollItemSize\"\n    [minBufferPx]=\"minBuffer\"\n    [maxBufferPx]=\"maxBuffer\"\n    class=\"viewport-wrapper devui-select-list-unstyled devui-scrollbar\"\n    #dropdownUl\n  >\n    <ng-template [ngTemplateOutlet]=\"selectAllTpl\"></ng-template>\n    <ng-container *cdkVirtualFor=\"let item of availableOptions; let index = index; trackBy: trackByFn\">\n      <ng-template [ngTemplateOutlet]=\"dropdownItemTpl\" [ngTemplateOutletContext]=\"{ item: item, index: index }\"></ng-template>\n    </ng-container>\n  </cdk-virtual-scroll-viewport>\n</ng-template>\n\n<!--\u5168\u9009\u6A21\u677F-->\n<ng-template #selectAllTpl>\n  <li class=\"devui-dropdown-item\" *ngIf=\"showSelectAll()\" (click)=\"selectAll()\">\n    <span>\n      <d-checkbox [label]=\"i18nCommonText.checkAll\" [isShowTitle]=\"false\" [halfchecked]=\"halfChecked\" [(ngModel)]=\"allChecked\"></d-checkbox>\n    </span>\n  </li>\n</ng-template>\n\n<!--\u4E0B\u62C9Item\u6A21\u677F-->\n<ng-template #dropdownItemTpl let-item=\"item\" let-index=\"index\">\n  <li\n    [title]=\"inputItemTemplate || itemTemplate ? '' : formatter(item.option)\"\n    [ngClass]=\"[\n      'devui-dropdown-item',\n      item.isChecked ? highlightItemClass : '',\n      selectIndex === index && item.id !== activeIndex ? 'selected' : '',\n      optionDisabledKey && item.option[optionDisabledKey] ? 'disabled' : ''\n    ]\"\n    (click)=\"choose(item.option, item.id, $event)\"\n  >\n    <ng-template\n      [ngTemplateOutlet]=\"inputItemTemplate || itemTemplate || (multiple ? checkBoxItem : defaultItem)\"\n      [ngTemplateOutletContext]=\"\n        multiple\n          ? {\n              option: item.option,\n              checked: item.isChecked,\n              filterKey: filterKey,\n              position: 'list',\n              template: checkBoxItem\n            }\n          : {\n              option: item.option,\n              filterKey: filterKey,\n              position: 'list',\n              template: defaultItem\n            }\n      \"\n    >\n    </ng-template>\n  </li>\n</ng-template>\n\n<ng-template #defaultItem let-option=\"option\">\n  {{ formatter(option) }}\n</ng-template>\n\n<ng-template #checkBoxItem let-option=\"option\" let-checked=\"checked\">\n  <d-checkbox\n    [color]=\"color\"\n    [label]=\"formatter(option)\"\n    [cssClass]=\"'devui-select-checkbox'\"\n    [ngModel]=\"checked\"\n    [disabled]=\"option[optionDisabledKey]\"\n  >\n  </d-checkbox>\n</ng-template>\n", styles: ["@charset \"UTF-8\";.devui-font-size-base{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-font-base{font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400;line-height:1.5}.devui-font-size-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px)}.devui-font-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px);font-weight:700;line-height:1.5}.devui-font-size-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px)}.devui-font-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px);font-weight:700;line-height:1.5}.devui-font-size-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px)}.devui-font-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px);font-weight:700;line-height:1.5}.devui-dropdown-menu:not(.devui-dropdown-menu-cdk){width:calc(100% + 2px);left:-1px;margin:4px 0}.devui-dropdown-menu.devui-custom-right,.devui-dropdown-menu.devui-custom-left,.devui-dropdown-menu.devui-custom-top{min-width:400px;display:flex!important}.devui-dropdown-menu.devui-custom-right>.devui-dropdown-menu-wrap,.devui-dropdown-menu.devui-custom-left>.devui-dropdown-menu-wrap,.devui-dropdown-menu.devui-custom-top>.devui-dropdown-menu-wrap{display:inline-block}.devui-dropdown-menu.devui-custom-right>.devui-select-custom-area,.devui-dropdown-menu.devui-custom-left>.devui-select-custom-area,.devui-dropdown-menu.devui-custom-top>.devui-select-custom-area{display:inline-block;overflow:auto}.devui-dropdown-menu.devui-custom-right:not(.devui-custom-top)>.devui-dropdown-menu-wrap,.devui-dropdown-menu.devui-custom-left:not(.devui-custom-top)>.devui-dropdown-menu-wrap,.devui-dropdown-menu.devui-custom-top:not(.devui-custom-top)>.devui-dropdown-menu-wrap{width:calc(50% - 1px)}.devui-dropdown-menu.devui-custom-right:not(.devui-custom-top)>.devui-select-custom-area,.devui-dropdown-menu.devui-custom-left:not(.devui-custom-top)>.devui-select-custom-area,.devui-dropdown-menu.devui-custom-top:not(.devui-custom-top)>.devui-select-custom-area{width:50%}.devui-dropdown-menu.devui-custom-right>.devui-select-custom-area:before,.devui-dropdown-menu.devui-custom-left>.devui-select-custom-area:before,.devui-dropdown-menu.devui-custom-top>.devui-select-custom-area:before{display:none}.devui-dropdown-menu.devui-custom-top{flex-direction:column-reverse}.devui-dropdown-menu.devui-custom-left>.devui-select-custom-area{border-right:1px solid #f2f2f3;border-right:1px solid var(--devui-dividing-line, #f2f2f3);order:-1}.devui-dropdown-menu.devui-custom-right>.devui-select-custom-area{border-left:1px solid #f2f2f3;border-left:1px solid var(--devui-dividing-line, #f2f2f3)}.devui-dropdown-menu.devui-custom-top>.devui-select-custom-area{border-bottom:1px solid #f2f2f3;border-bottom:1px solid var(--devui-dividing-line, #f2f2f3)}.devui-dropdown-menu.devui-reset-min-width{min-width:auto}.devui-dropdown-menu .devui-dropdown-menu-wrap{position:static;position:initial}.devui-dropdown-menu-cdk{position:static;display:block;width:100%}.devui-form-group.devui-has-feedback[tabindex]{outline:none}.devui-select-placeholder,.devui-select-list-wrapper.devui-form-control,.devui-select-selected-item-with-template{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-form-group>input.devui-form-control.devui-select-input{cursor:pointer;padding-right:2em;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.devui-form-group>input.devui-form-control.devui-select-input.devui-select-search{padding-right:2em;cursor:text}.devui-form-group>input.devui-form-control.devui-select-input.devui-select-search.devui-search-filter{padding-right:4em}.devui-select-list-wrapper.devui-form-control{cursor:pointer}.devui-dropdown-item{clear:both;color:#252b3a;color:var(--devui-text, #252b3a);font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-dropdown-item input[name=search]{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-dropdown-item ::ng-deep .devui-select-checkbox label{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.devui-select-lg{font-size:14px;font-size:var(--devui-font-size-lg, 14px);min-height:46px;line-height:46px}.devui-select-lg .devui-form-control:not(.devui-select-list-wrapper){height:44px}.devui-select-lg .devui-select-placeholder,.devui-select-lg .devui-select-list-wrapper.devui-form-control,.devui-select-lg .devui-select-selected-item-with-template{font-size:14px;font-size:var(--devui-font-size-lg, 14px)}.devui-select-lg .devui-dropdown-item{font-size:14px;font-size:var(--devui-font-size-lg, 14px);min-height:40px;line-height:28px;padding:11px 10px}.devui-select-lg .devui-dropdown-item input[name=search]{font-size:14px;font-size:var(--devui-font-size-lg, 14px)}.devui-select-lg ::ng-deep .devui-checkbox,.devui-select-lg ::ng-deep .devui-select-checkbox label,.devui-select-lg ::ng-deep .devui-select-checkbox label .checkbox-label{font-size:14px;font-size:var(--devui-font-size-lg, 14px);height:18px}.devui-select-lg ::ng-deep .devui-checkbox-material{width:16px;height:16px}.devui-select-sm{font-size:12px;font-size:var(--devui-font-size-sm, 12px);line-height:14px;height:unset}.devui-select-sm.devui-dropdown-origin:not(d-button):not(.icon):not([class^=icon-]){min-height:26px}.devui-select-sm .devui-form-control:not(.devui-select-list-wrapper){height:24px}.devui-select-sm .devui-select-placeholder,.devui-select-sm .devui-select-list-wrapper.devui-form-control,.devui-select-sm .devui-select-selected-item-with-template{font-size:12px;font-size:var(--devui-font-size-sm, 12px)}.devui-select-sm .devui-dropdown-item{font-size:12px;font-size:var(--devui-font-size-sm, 12px);min-height:26px;line-height:14px}.devui-select-sm .devui-dropdown-item input[name=search]{font-size:12px;font-size:var(--devui-font-size-sm, 12px)}.devui-select-sm ::ng-deep .devui-select-checkbox label .checkbox-label{font-size:12px;font-size:var(--devui-font-size-sm, 12px);line-height:16px}.devui-select-sm ::ng-deep .devui-checkbox-material{width:12px;height:12px}.devui-select-sm ::ng-deep .devui-checkbox-material>svg{width:12px;height:12px}.devui-dropdown-menu-lg .devui-dropdown-item{font-size:14px;font-size:var(--devui-font-size-lg, 14px);min-height:40px;line-height:28px}.devui-dropdown-menu-lg .devui-dropdown-item input[name=search]{font-size:14px;font-size:var(--devui-font-size-lg, 14px)}.devui-dropdown-menu-lg ::ng-deep .devui-checkbox,.devui-dropdown-menu-lg ::ng-deep .devui-select-checkbox label .checkbox-label{font-size:14px;font-size:var(--devui-font-size-lg, 14px);line-height:28px}.devui-dropdown-menu-lg ::ng-deep .devui-checkbox-material{width:16px;height:16px}.devui-dropdown-menu-lg ::ng-deep .devui-checkbox-material>svg{width:16px;height:16px}.devui-dropdown-menu-sm .devui-dropdown-item{font-size:12px;font-size:var(--devui-font-size-sm, 12px);min-height:26px;line-height:14px}.devui-dropdown-menu-sm .devui-dropdown-item input[name=search]{font-size:12px;font-size:var(--devui-font-size-sm, 12px)}.devui-dropdown-menu-sm ::ng-deep .devui-select-checkbox label .checkbox-label{font-size:12px;font-size:var(--devui-font-size-sm, 12px);line-height:16px}.devui-dropdown-menu-sm ::ng-deep .devui-checkbox-material{width:12px;height:12px}div.devui-dropdown-menu{cursor:pointer;min-width:auto;box-shadow:0 2px 8px rgba(37,43,58,.2);box-shadow:var(--devui-shadow-connected-overlay, 0 2px 8px 0) var(--devui-shadow, rgba(37, 43, 58, .2))}div.devui-dropdown-menu .devui-select-list-unstyled li:hover:not(.active):not(.disabled),div.devui-dropdown-menu>ul.devui-select-list-unstyled li:hover:not(.active):not(.disabled){background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);color:#252b3a;color:var(--devui-list-item-hover-text, #252b3a)}div.devui-dropdown-menu .devui-select-list-unstyled li.selected,div.devui-dropdown-menu>ul.devui-select-list-unstyled li.selected{background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);color:#252b3a;color:var(--devui-list-item-hover-text, #252b3a)}div.devui-dropdown-menu:not(.devui-dropdown-menu-multiple) .devui-select-list-unstyled li.active,div.devui-dropdown-menu:not(.devui-dropdown-menu-multiple) .devui-select-list-unstyled li.active:hover,div.devui-dropdown-menu:not(.devui-dropdown-menu-multiple)>ul.devui-select-list-unstyled li.active,div.devui-dropdown-menu:not(.devui-dropdown-menu-multiple)>ul.devui-select-list-unstyled li.active:hover{background-color:#f2f5fc;background-color:var(--devui-list-item-active-bg, #f2f5fc);color:#252b3a;color:var(--devui-list-item-active-text, #252b3a)}:host ::ng-deep .devui-dropdown-menu.devui-dropdown-menu-multiple .devui-select-list-unstyled li:not(.disabled):hover .devui-checkbox>label,:host ::ng-deep .devui-dropdown-menu.devui-dropdown-menu-multiple>ul.devui-select-list-unstyled li:not(.disabled):hover .devui-checkbox>label{color:#252b3a;color:var(--devui-list-item-hover-text, #252b3a)}:host ::ng-deep .devui-dropdown-menu.devui-dropdown-menu-multiple .devui-select-list-unstyled li:not(.disabled):hover .devui-checkbox>label>.devui-checkbox-material,:host ::ng-deep .devui-dropdown-menu.devui-dropdown-menu-multiple>ul.devui-select-list-unstyled li:not(.disabled):hover .devui-checkbox>label>.devui-checkbox-material{border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0)}div.devui-dropdown-menu.devui-dropdown-menu-multiple .devui-select-list-unstyled li.active:not(.disabled),div.devui-dropdown-menu.devui-dropdown-menu-multiple>ul.devui-list-unstyled li.active:not(.disabled){background-color:transparent;color:#252b3a;color:var(--devui-text, #252b3a)}div.devui-dropdown-menu.devui-dropdown-menu-multiple .devui-select-list-unstyled li.active:not(.disabled):hover,div.devui-dropdown-menu.devui-dropdown-menu-multiple>ul.devui-list-unstyled li.active:not(.disabled):hover{background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);color:#252b3a;color:var(--devui-list-item-hover-text, #252b3a)}.devui-has-feedback{z-index:1}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input{background-color:#f2f2f3;background-color:var(--devui-embed-search-bg, #f2f2f3)}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input:focus{background-color:#fff;background-color:var(--devui-form-control-bg, #ffffff);border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0)}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input:hover,.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input:hover:focus{background-color:#fff;background-color:var(--devui-form-control-bg, #ffffff);border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0)}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input::-moz-placeholder{color:#babbc0;color:var(--devui-placeholder, #babbc0)}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input:-ms-input-placeholder{color:#babbc0;color:var(--devui-placeholder, #babbc0)}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input::placeholder{color:#babbc0;color:var(--devui-placeholder, #babbc0)}.devui-form-control,.devui-form-group .devui-form-control{border-radius:2px;border-radius:var(--devui-border-radius, 2px);box-shadow:none}.devui-select-underlined-border{border:0;border-bottom:1px solid #d7d8da;border-bottom:1px solid var(--devui-line, #d7d8da);border-radius:0}.devui-select-list-wrapper.devui-form-control{height:auto;margin:0;padding:0 30px 0 0}.devui-select-list-wrapper.devui-form-control+.devui-form-control-feedback{height:100%;padding:0;display:inline-flex;align-items:center;justify-content:center}.devui-form-control.devui-select-input{line-height:14px;height:26px;border-color:transparent;outline:none}.devui-form-control.devui-select-input+.devui-form-control-feedback{height:100%;padding:0;display:inline-flex;align-items:center;justify-content:center}.devui-form-control.devui-select-input-lg{line-height:32px}.devui-form-control.devui-select-input-sm{line-height:12px}.devui-select-list-wrapper .devui-select-selected-item-with-template{height:24px;line-height:24px;padding:0 10px;cursor:pointer}.devui-select-list-wrapper .devui-select-placeholder{height:24px;line-height:24px;color:#babbc0;color:var(--devui-placeholder, #babbc0);padding-left:10px}.devui-select-list-wrapper .devui-select-tag-list{height:26px;margin:0;padding:0;list-style-type:none;overflow:hidden}.devui-select-list-wrapper .devui-select-tag-list.normal{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.devui-select-list-wrapper .devui-select-tag-list.scroll-y{overflow-y:auto;overflow-x:hidden}.devui-select-list-wrapper .devui-select-tag-list.multiple-line{height:auto;overflow-y:auto;overflow-x:hidden;line-height:1.5;max-height:48px}.devui-select-list-wrapper .devui-select-tag-item{display:inline-block;margin:2px 0 0 2px}.devui-select-list-wrapper .devui-select-tag-item.disabled{background:#f5f5f5;background:var(--devui-disabled-bg, #f5f5f5);border-color:#f5f5f5;border-color:var(--devui-disabled-bg, #f5f5f5);cursor:not-allowed}.devui-select-list-wrapper .over-flow-ellipsis{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;height:20px;line-height:20px;vertical-align:middle}.devui-select-list-wrapper.devui-select-input-lg{line-height:1.5}.devui-select-list-wrapper.devui-select-input-lg .devui-select-selected-item-with-template,.devui-select-list-wrapper.devui-select-input-lg .devui-select-placeholder,.devui-select-list-wrapper.devui-select-input-lg .devui-select-tag-list{height:42px}.devui-select-list-wrapper.devui-select-input-lg .devui-select-selected-item-with-template.multiple-line,.devui-select-list-wrapper.devui-select-input-lg .devui-select-placeholder.multiple-line,.devui-select-list-wrapper.devui-select-input-lg .devui-select-tag-list.multiple-line{max-height:74px;height:unset}.devui-select-list-wrapper.devui-select-input-lg .devui-select-selected-item-with-template,.devui-select-list-wrapper.devui-select-input-lg .devui-select-placeholder{line-height:42px}.devui-select-list-wrapper.devui-select-input-sm{line-height:1.5}.devui-select-list-wrapper.devui-select-input-sm .devui-select-selected-item-with-template,.devui-select-list-wrapper.devui-select-input-sm .devui-select-placeholder,.devui-select-list-wrapper.devui-select-input-sm .devui-select-tag-list{height:24px}.devui-select-list-wrapper.devui-select-input-sm .devui-select-selected-item-with-template.multiple-line,.devui-select-list-wrapper.devui-select-input-sm .devui-select-placeholder.multiple-line,.devui-select-list-wrapper.devui-select-input-sm .devui-select-tag-list.multiple-line{max-height:48px;height:unset}.devui-select-list-wrapper.devui-select-input-sm .devui-select-selected-item-with-template,.devui-select-list-wrapper.devui-select-input-sm .devui-select-placeholder{line-height:22px}.disabled .devui-select-list-wrapper .devui-select-tag-item span{padding-right:0}.devui-dropdown-item.disabled,.devui-dropdown-item.disabled:hover,div.devui-dropdown-menu li.disabled:hover,div.devui-dropdown-menu .devui-select-list-unstyled li.disabled:hover,div.devui-dropdown-menu>ul.devui-select-list-unstyled li.disabled:hover{cursor:not-allowed;color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}div.devui-dropdown-menu .devui-select-list-unstyled li.active.disabled,div.devui-dropdown-menu>ul.devui-select-list-unstyled li.active.disabled,div.devui-dropdown-menu .devui-select-list-unstyled li.active.disabled:hover,div.devui-dropdown-menu>ul.devui-select-list-unstyled li.active.disabled:hover{background:#f5f5f5;background:var(--devui-disabled-bg, #f5f5f5);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}:host ::ng-deep li.disabled .devui-checkbox.disabled label,:host ::ng-deep .li.disabled .devui-checkbox.disabled label,li.disabled ::ng-deep .devui-checkbox.disabled label,li.disabled ::ng-deep .devui-checkbox.disabled label{color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-dropdown-origin.disabled,.devui-dropdown-origin.disabled:hover{cursor:not-allowed;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-color:#dfe1e6;border-color:var(--devui-disabled-line, #dfe1e6);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-dropdown-origin.disabled .devui-select-list-wrapper.devui-form-control,.devui-dropdown-origin.disabled .devui-form-control.devui-select-input,.devui-dropdown-origin.disabled:hover .devui-select-list-wrapper.devui-form-control,.devui-dropdown-origin.disabled:hover .devui-form-control.devui-select-input{cursor:not-allowed;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-dropdown-origin.disabled .devui-select-list-wrapper.devui-form-control.disabled,.devui-dropdown-origin.disabled:hover .devui-select-list-wrapper.devui-form-control.disabled{color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-dropdown-origin.disabled .devui-select-tag-list .devui-select-tag-item,.devui-dropdown-origin .devui-select-tag-list .devui-select-tag-item.disabled,.devui-dropdown-origin:hover.disabled .devui-select-tag-list .devui-select-tag-item,.devui-dropdown-origin:hover .devui-select-tag-list .devui-select-tag-item.disabled{background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-color:#dfe1e6;border-color:var(--devui-disabled-line, #dfe1e6)}.devui-dropdown-origin.disabled .devui-select-tag-list .devui-select-tag-item>span,.devui-dropdown-origin .devui-select-tag-list .devui-select-tag-item.disabled>span,.devui-dropdown-origin:hover.disabled .devui-select-tag-list .devui-select-tag-item>span,.devui-dropdown-origin:hover .devui-select-tag-list .devui-select-tag-item.disabled>span{color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-dropdown-origin.disabled .devui-select-tag-list .devui-select-tag-item>.devui-select-tag-remove-button,.devui-dropdown-origin .devui-select-tag-list .devui-select-tag-item.disabled>.devui-select-tag-remove-button,.devui-dropdown-origin:hover.disabled .devui-select-tag-list .devui-select-tag-item>.devui-select-tag-remove-button,.devui-dropdown-origin:hover .devui-select-tag-list .devui-select-tag-item.disabled>.devui-select-tag-remove-button{background-color:#dfe1e6;background-color:var(--devui-disabled-line, #dfe1e6)}.devui-select-list-wrapper.devui-form-control.disabled+.devui-form-control-feedback,.devui-form-control.devui-select-input:disabled+.devui-form-control-feedback{cursor:not-allowed;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5)}.devui-select-list-wrapper.devui-form-control.disabled+.devui-form-control-feedback .devui-select-clear-icon svg path,.devui-select-list-wrapper.devui-form-control.disabled+.devui-form-control-feedback .devui-select-chevron-icon svg path,.devui-form-control.devui-select-input:disabled+.devui-form-control-feedback .devui-select-clear-icon svg path,.devui-form-control.devui-select-input:disabled+.devui-form-control-feedback .devui-select-chevron-icon svg path{fill:#cfd0d3;fill:var(--devui-disabled-text, #cfd0d3)}.devui-select-custom-area:before{display:block;content:\"\";width:calc(100% - 20px);margin:0 10px;height:1px;border-top:1px solid #f2f2f3;border-top:1px solid var(--devui-dividing-line, #f2f2f3)}svg.svg-icon-search path{fill:#71757f;fill:var(--devui-icon-text, #71757f)}.open .devui-select-chevron-icon{transform:rotate(180deg)}.devui-select-chevron-icon{display:inline-flex;vertical-align:middle}.devui-select-chevron-icon-animation{transition:transform .3s cubic-bezier(.645,.045,.355,1);transition:transform var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1))}.devui-select-chevron-icon svg path{fill:#71757f;fill:var(--devui-icon-text, #71757f)}.disabled .devui-select-chevron-icon svg path{fill:#cfd0d3;fill:var(--devui-disabled-text, #cfd0d3)}.devui-form-group.devui-has-feedback:hover .devui-form-control-feedback.devui-clear-icon-show .devui-select-chevron-icon{display:none}.devui-form-group.devui-has-feedback:hover .devui-form-control-feedback.devui-clear-icon-show .devui-select-clear-icon{display:inline-flex;vertical-align:middle}.devui-form-control-feedback.devui-search-clear{right:28px;cursor:pointer;pointer-events:initial}.devui-form-control-feedback.devui-search-clear>svg{vertical-align:middle}.devui-form-control-feedback.devui-search-clear>svg path{fill:#d7d8da;fill:var(--devui-shape-icon-fill, #d7d8da)}.devui-form-control-feedback.devui-search-clear:hover svg path{fill:#babbc0;fill:var(--devui-shape-icon-fill-active, #babbc0)}.devui-form-control-feedback.devui-search-clear:after{content:\"\";display:block;position:absolute;right:0;top:15%;height:70%;width:1px;border-left:1px solid #d7d8da;border-left:1px solid var(--devui-line, #d7d8da)}.devui-form-control-feedback.devui-search-clear.devui-search-clear-lg{right:30px;width:32px;height:44px;line-height:44px}.devui-form-control-feedback.devui-search-clear.devui-search-clear-sm{right:26px;width:24px;height:24px;line-height:24px}.devui-select-clear-icon{width:14px;height:14px;display:none;transition:transform .2s ease;pointer-events:auto;cursor:pointer}.devui-select-clear-icon:after,.devui-select-clear-icon:before{position:absolute;content:\"\";height:14px;width:2px;background-color:#71757f;background-color:var(--devui-icon-text, #71757f);left:50%}.devui-select-clear-icon:before{transform:rotate(45deg)}.devui-select-clear-icon:after{transform:rotate(-45deg)}.devui-form-control-feedback.devui-search-clear:hover g>g>polygon{fill:#252b3a;fill:var(--devui-icon-fill-active, #252b3a)}.devui-select-clear-icon:hover:before,.devui-select-clear-icon:hover:after{background-color:#252b3a;background-color:var(--devui-icon-fill-active, #252b3a)}input::-ms-clear{display:none}.devui-dropup .devui-dropdown-menu{top:auto;bottom:100%}.devui-dropdown{height:unset}:host ::ng-deep .devui-select-tag-item d-tag{width:100%}:host ::ng-deep .devui-select-tag-item d-tag .devui-tag-item>span{vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:inline-block;width:100%}:host ::ng-deep .devui-select-tag-item.disabled{line-height:18px}:host ::ng-deep .devui-select-tag-item.disabled d-tag .devui-tag-item{border:solid 1px #dfe1e6;border:solid 1px var(--devui-disabled-line, #dfe1e6);line-height:18px;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3);cursor:not-allowed}\n"], components: [{ type: i4.TagComponent, selector: "d-tag", inputs: ["tag", "labelStyle", "customColor", "deletable", "titleContent", "mode", "checked", "maxWidth", "customViewTemplate"], outputs: ["tagDelete", "checkedChange"], exportAs: ["Tag"] }, { type: i5.CdkVirtualScrollViewport, selector: "cdk-virtual-scroll-viewport", inputs: ["orientation", "appendOnly"], outputs: ["scrolledIndexChange"] }, { type: i6.CheckBoxComponent, selector: "d-checkbox", inputs: ["name", "label", "cssClass", "color", "disabled", "isShowTitle", "title", "labelTemplate", "halfchecked", "showAnimation", "beforeChange"], outputs: ["change"] }], directives: [{ type: i7.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i7.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i8.CdkConnectedOverlay, selector: "[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]", inputs: ["cdkConnectedOverlayOrigin", "cdkConnectedOverlayPositions", "cdkConnectedOverlayPositionStrategy", "cdkConnectedOverlayOffsetX", "cdkConnectedOverlayOffsetY", "cdkConnectedOverlayWidth", "cdkConnectedOverlayHeight", "cdkConnectedOverlayMinWidth", "cdkConnectedOverlayMinHeight", "cdkConnectedOverlayBackdropClass", "cdkConnectedOverlayPanelClass", "cdkConnectedOverlayViewportMargin", "cdkConnectedOverlayScrollStrategy", "cdkConnectedOverlayOpen", "cdkConnectedOverlayDisableClose", "cdkConnectedOverlayTransformOriginOn", "cdkConnectedOverlayHasBackdrop", "cdkConnectedOverlayLockPosition", "cdkConnectedOverlayFlexibleDimensions", "cdkConnectedOverlayGrowAfterOpen", "cdkConnectedOverlayPush"], outputs: ["backdropClick", "positionChange", "attach", "detach", "overlayKeydown", "overlayOutsideClick"], exportAs: ["cdkConnectedOverlay"] }, { type: i9.LoadingDirective, selector: "[dLoading]", inputs: ["message", "backdrop", "loadingTemplateRef", "positionType", "view", "showLoading", "loading", "zIndex"], exportAs: ["dLoading"] }, { type: i10.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i10.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i10.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i3.LazyLoadDirective, selector: "[dLazyLoad]", inputs: ["enableLazyLoad", "contentMode", "target", "imgLoadSrc"], outputs: ["loadMore"] }, { type: i7.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i5.CdkFixedSizeVirtualScroll, selector: "cdk-virtual-scroll-viewport[itemSize]", inputs: ["itemSize", "minBufferPx", "maxBufferPx"] }, { type: i5.CdkVirtualForOf, selector: "[cdkVirtualFor][cdkVirtualForOf]", inputs: ["cdkVirtualForOf", "cdkVirtualForTrackBy", "cdkVirtualForTemplate", "cdkVirtualForTemplateCacheSize"] }], animations: [
        fadeInOut
    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    WithConfig(),
    __metadata("design:type", Object)
], SelectComponent.prototype, "showAnimation", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: SelectComponent, decorators: [{
            type: Component,
            args: [{ selector: 'd-select', exportAs: 'select', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => SelectComponent),
                            multi: true
                        }
                    ], animations: [
                        fadeInOut
                    ], preserveWhitespaces: false, template: "<div\n  class=\"devui-drop{{ popDirection === 'bottom' ? 'down' : 'up' }} \n  {{ size ? 'devui-select-' + size : '' }} \n  devui-dropdown-origin\"\n  [ngClass]=\"[isOpen ? 'open' : '', overview === 'underlined' ? 'devui-select-underlined-border' : '', disabled ? 'disabled' : '']\"\n  #selectWrapper\n>\n  <div\n    #selectBox\n    class=\"devui-form-group devui-has-feedback\"\n    (click)=\"toggle()\"\n    (focus)=\"autoToggle($event)\"\n    [tabindex]=\"0\"\n    (keydown.esc)=\"onEscKeyup($event)\"\n    (keydown.ArrowUp)=\"handleKeyUpEvent($event)\"\n    (keydown.ArrowDown)=\"handleKeyDownEvent($event)\"\n    (keydown.enter)=\"handleKeyEnterEvent($event)\"\n  >\n    <input\n      #selectInput\n      [placeholder]=\"placeholder\"\n      [disabled]=\"disabled\"\n      [ngClass]=\"[size ? 'devui-select-input-' + size : '']\"\n      type=\"text\"\n      class=\"devui-form-control devui-select-input devui-input\"\n      [minLength]=\"0\"\n      autocomplete=\"off\"\n      [tabindex]=\"-1\"\n      [readonly]=\"readonly\"\n      [value]=\"_inputValue || ''\"\n      *ngIf=\"\n        !(extraConfig?.labelization?.enable && multiple) &&\n        !(!extraConfig?.labelization?.enable && extraConfig?.selectedItemWithTemplate?.enable && (inputItemTemplate || itemTemplate))\n      \"\n    />\n    <div\n      #selectInputWithTemplate\n      class=\"devui-select-list-wrapper devui-form-control {{ size ? 'devui-select-input-' + size : '' }}\"\n      *ngIf=\"extraConfig?.selectedItemWithTemplate?.enable && (inputItemTemplate || itemTemplate) && !extraConfig?.labelization?.enable\"\n    >\n      <div class=\"devui-select-placeholder\" *ngIf=\"!_inputValue\">\n        {{ placeholder }}\n      </div>\n      <div class=\"devui-select-selected-item-with-template\" *ngIf=\"_inputValue\">\n        <ng-template\n          [ngTemplateOutlet]=\"inputItemTemplate || itemTemplate\"\n          [ngTemplateOutletContext]=\"{\n            option: value,\n            filterKey: filterKey,\n            position: 'result',\n            inputValue: _inputValue\n          }\"\n        >\n        </ng-template>\n      </div>\n    </div>\n\n    <div\n      #selectInputWithLabel\n      class=\"devui-select-list-wrapper devui-form-control {{ size ? 'devui-select-input-' + size : '' }}\"\n      *ngIf=\"extraConfig?.labelization?.enable && multiple\"\n    >\n      <div class=\"devui-select-placeholder\" *ngIf=\"multiItems.length === 0\">\n        {{ placeholder }}\n      </div>\n      <ul\n        class=\"devui-select-tag-list {{ extraConfig?.labelization?.overflow }}\"\n        [style.maxHeight]=\"extraConfig?.labelization?.containerMaxHeight || extraConfig?.labelization?.containnerMaxHeight\"\n        *ngIf=\"multiItems.length > 0\"\n      >\n        <li\n          class=\"devui-select-tag-item\"\n          *ngFor=\"let item of multiItems; let index = index; trackBy: trackByOptionPointer\"\n          [style.maxWidth]=\"extraConfig?.labelization?.labelMaxWidth\"\n          [ngClass]=\"{\n            disabled: optionDisabledKey && item.option[optionDisabledKey]\n          }\"\n        >\n          <d-tag\n            [deletable]=\"!(disabled || (optionDisabledKey && item.option[optionDisabledKey]))\"\n            [tag]=\"valueParser(item.option)\"\n            (tagDelete)=\"removeItem(item, $event?.event)\"\n          ></d-tag>\n        </li>\n      </ul>\n    </div>\n\n    <span class=\"devui-form-control-feedback devui-input-group-addon\" [ngClass]=\"{ 'devui-clear-icon-show': isClearIconShow }\">\n      <span class=\"devui-select-clear-icon\" (mousedown)=\"$event.preventDefault()\" (click)=\"valueClear($event)\"> </span>\n      <span class=\"devui-select-chevron-icon\" [ngClass]=\"{ 'devui-select-chevron-icon-animation': showAnimation }\">\n        <svg\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 16 16\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <path\n              d=\"M12.1464466,6.85355339 L8.35355339,10.6464466 C8.15829124,10.8417088 7.84170876,10.8417088 7.64644661,10.6464466 L3.85355339,6.85355339 C3.65829124,6.65829124 3.65829124,6.34170876 3.85355339,6.14644661 C3.94732158,6.05267842 4.07449854,6 4.20710678,6 L11.7928932,6 C12.0690356,6 12.2928932,6.22385763 12.2928932,6.5 C12.2928932,6.63260824 12.2402148,6.7597852 12.1464466,6.85355339 Z\"\n              fill-rule=\"nonzero\"\n            ></path>\n          </g>\n        </svg>\n      </span>\n    </span>\n  </div>\n  <ng-container *ngIf=\"appendToBody\">\n    <ng-template\n      cdk-connected-overlay\n      [cdkConnectedOverlayOrigin]=\"cdkConnectedOverlayOrigin\"\n      [cdkConnectedOverlayWidth]=\"dropDownWidth\"\n      [cdkConnectedOverlayOpen]=\"isOpen\"\n      [cdkConnectedOverlayPositions]=\"overlayPositions\"\n      (positionChange)=\"onPositionChange($event)\"\n      (backdropClick)=\"isOpen = false\"\n    >\n      <ng-template [ngTemplateOutlet]=\"selectDropdownTpl\"></ng-template>\n    </ng-template>\n  </ng-container>\n  <ng-container *ngIf=\"!appendToBody\">\n    <ng-template [ngTemplateOutlet]=\"selectDropdownTpl\"></ng-template>\n  </ng-container>\n</div>\n\n<!--\u4E0B\u62C9\u6A21\u677F-->\n<ng-template #selectDropdownTpl>\n  <div\n    #selectMenu\n    class=\"devui-dropdown-menu\"\n    [ngClass]=\"{\n      'devui-dropdown-menu-cdk': appendToBody,\n      'devui-custom-right': customViewTemplate && customViewDirection === 'right',\n      'devui-custom-left': customViewTemplate && customViewDirection === 'left',\n      'devui-custom-top': customViewTemplate && customViewDirection === 'top',\n      'devui-dropdown-menu-multiple': multiple,\n      'devui-reset-min-width': width\n    }\"\n    [@fadeInOut]=\"isOpen && startAnimation ? (appendToBody ? menuPosition : popDirection) : 'void'\"\n    (@fadeInOut.done)=\"animationEnd($event)\"\n    [@.disabled]=\"!showAnimation\"\n  >\n    <ul\n      dLoading\n      [showLoading]=\"showLoading\"\n      positionType=\"relative\"\n      [message]=\"i18nCommonText?.loading\"\n      [loadingTemplateRef]=\"loadingTemplateRef\"\n      [backdrop]=\"true\"\n      class=\"devui-dropdown-menu-wrap {{ size ? 'devui-dropdown-menu-' + size : '' }}\"\n      (click)=\"$event.stopPropagation(); $event.preventDefault()\"\n    >\n      <li [style.display]=\"isSearch ? 'block' : 'none'\">\n        <div class=\"devui-form-group devui-has-feedback\" [style.margin]=\"'0'\">\n          <input\n            #filterInput\n            [ngClass]=\"[size ? 'devui-select-input-' + size : '', filter ? 'devui-search-filter' : '']\"\n            name=\"select\"\n            type=\"text\"\n            [(ngModel)]=\"filter\"\n            autocomplete=\"off\"\n            [placeholder]=\"searchPlaceholder\"\n            class=\"devui-form-control devui-select-search devui-select-input\"\n            (keydown.ArrowUp)=\"handleKeyUpEvent($event)\"\n            (keydown.ArrowDown)=\"handleKeyDownEvent($event)\"\n            (keydown.enter)=\"handleKeyEnterEvent($event)\"\n            (keydown.esc)=\"onEscKeyup($event)\"\n          />\n          <span class=\"devui-form-control-feedback\">\n            <svg\n              width=\"14px\"\n              height=\"14px\"\n              viewBox=\"0 0 14 14\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              class=\"svg-icon-search\"\n              style=\"vertical-align: middle\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <g transform=\"translate(-1.000000, -1.000000)\">\n                  <path\n                    d=\"M7.30811922,1 C10.7919973,1 13.6162384,3.82424117 13.6162384,7.30811922 C13.6162384,8.72507634 13.149053,10.0329164 12.3603151,11.0860065 L14.7360564,13.4616238 C15.0879812,13.8135487 15.0879812,14.3841316 14.7360564,14.7360564 C14.3841316,15.0879812 13.8135487,15.0879812 13.4616238,14.7360564 L11.0860065,12.3603151 C10.0329164,13.149053 8.72507634,13.6162384 7.30811922,13.6162384 C3.82424117,13.6162384 1,10.7919973 1,7.30811922 C1,3.82424117 3.82424117,1 7.30811922,1 Z M7.31,2.51 C4.6590332,2.51 2.51,4.6590332 2.51,7.31 C2.51,9.9609668 4.6590332,12.11 7.31,12.11 C9.9609668,12.11 12.11,9.9609668 12.11,7.31 C12.11,4.6590332 9.9609668,2.51 7.31,2.51 Z\"\n                    fill-rule=\"nonzero\"\n                  ></path>\n                </g>\n              </g>\n            </svg>\n          </span>\n          <span\n            #clearIcon\n            class=\"devui-form-control-feedback devui-search-clear\"\n            [ngClass]=\"size ? 'devui-search-clear-' + size : ''\"\n            (click)=\"clearText()\"\n            *ngIf=\"filter\"\n          >\n            <svg\n              width=\"16px\"\n              height=\"16px\"\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            >\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <path\n                  d=\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M5.87867966,5.17157288 C5.68341751,4.97631073 5.36683502,4.97631073 5.17157288,5.17157288 C4.99800652,5.34513923 4.97872137,5.61456363 5.11371742,5.80943177 L5.17157288,5.87867966 L7.29218611,7.99929289 L5.17157288,10.1213203 C4.97631073,10.3165825 4.97631073,10.633165 5.17157288,10.8284271 C5.34513923,11.0019935 5.61456363,11.0212786 5.80943177,10.8862826 L5.87867966,10.8284271 L7.99929289,8.70639967 L10.1213203,10.8284271 C10.3165825,11.0236893 10.633165,11.0236893 10.8284271,10.8284271 C11.0019935,10.6548608 11.0212786,10.3854364 10.8862826,10.1905682 L10.8284271,10.1213203 L8.70710678,8 L10.8284271,5.87867966 C11.0236893,5.68341751 11.0236893,5.36683502 10.8284271,5.17157288 C10.6548608,4.99800652 10.3854364,4.97872137 10.1905682,5.11371742 L10.1213203,5.17157288 L8,7.29289322 L5.87867966,5.17157288 Z\"\n                  fill-rule=\"nonzero\"\n                ></path>\n              </g>\n            </svg>\n          </span>\n        </div>\n      </li>\n      <ul\n        *ngIf=\"!virtualScroll || enableLazyLoad; else scrollViewTpl\"\n        class=\"devui-select-list-unstyled devui-scrollbar\"\n        dLazyLoad\n        [enableLazyLoad]=\"enableLazyLoad\"\n        (loadMore)=\"loadMoreEvent($event)\"\n        [ngStyle]=\"{ 'max-height': scrollHight, width: '100%' }\"\n        #dropdownUl\n      >\n        <ng-template [ngTemplateOutlet]=\"selectAllTpl\"></ng-template>\n        <ng-container *ngFor=\"let item of availableOptions; let index = index; trackBy: trackByFn\">\n          <ng-template [ngTemplateOutlet]=\"dropdownItemTpl\" [ngTemplateOutletContext]=\"{ item: item, index: index }\"></ng-template>\n        </ng-container>\n        <div *ngIf=\"availableOptions?.length === 0 && !noResultItemTemplate && !this.showLoading\" class=\"devui-no-data-tip\">\n          {{ filter ? i18nCommonText?.noRecordsFound : i18nCommonText?.noData }}\n        </div>\n      </ul>\n\n      <div *ngIf=\"availableOptions?.length === 0 && noResultItemTemplate && !this.showLoading\" class=\"devui-no-data-tip\">\n        <ng-template [ngTemplateOutlet]=\"noResultItemTemplate\" [ngTemplateOutletContext]=\"{ options: options }\"></ng-template>\n      </div>\n    </ul>\n    <ng-container *ngIf=\"customViewTemplate\">\n      <div class=\"devui-select-custom-area\">\n        <ng-template [ngTemplateOutlet]=\"customViewTemplate\" [ngTemplateOutletContext]=\"{ $implicit: this, choose: choose }\"></ng-template>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n\n<!--\u865A\u62DF\u6EDA\u52A8\u6A21\u677F-->\n<ng-template #scrollViewTpl>\n  <cdk-virtual-scroll-viewport\n    [ngStyle]=\"{\n      height: getVirtualScrollHeight(availableOptions?.length, size),\n      width: '100%',\n      'max-height': scrollHight\n    }\"\n    [itemSize]=\"realVirtualScrollItemSize\"\n    [minBufferPx]=\"minBuffer\"\n    [maxBufferPx]=\"maxBuffer\"\n    class=\"viewport-wrapper devui-select-list-unstyled devui-scrollbar\"\n    #dropdownUl\n  >\n    <ng-template [ngTemplateOutlet]=\"selectAllTpl\"></ng-template>\n    <ng-container *cdkVirtualFor=\"let item of availableOptions; let index = index; trackBy: trackByFn\">\n      <ng-template [ngTemplateOutlet]=\"dropdownItemTpl\" [ngTemplateOutletContext]=\"{ item: item, index: index }\"></ng-template>\n    </ng-container>\n  </cdk-virtual-scroll-viewport>\n</ng-template>\n\n<!--\u5168\u9009\u6A21\u677F-->\n<ng-template #selectAllTpl>\n  <li class=\"devui-dropdown-item\" *ngIf=\"showSelectAll()\" (click)=\"selectAll()\">\n    <span>\n      <d-checkbox [label]=\"i18nCommonText.checkAll\" [isShowTitle]=\"false\" [halfchecked]=\"halfChecked\" [(ngModel)]=\"allChecked\"></d-checkbox>\n    </span>\n  </li>\n</ng-template>\n\n<!--\u4E0B\u62C9Item\u6A21\u677F-->\n<ng-template #dropdownItemTpl let-item=\"item\" let-index=\"index\">\n  <li\n    [title]=\"inputItemTemplate || itemTemplate ? '' : formatter(item.option)\"\n    [ngClass]=\"[\n      'devui-dropdown-item',\n      item.isChecked ? highlightItemClass : '',\n      selectIndex === index && item.id !== activeIndex ? 'selected' : '',\n      optionDisabledKey && item.option[optionDisabledKey] ? 'disabled' : ''\n    ]\"\n    (click)=\"choose(item.option, item.id, $event)\"\n  >\n    <ng-template\n      [ngTemplateOutlet]=\"inputItemTemplate || itemTemplate || (multiple ? checkBoxItem : defaultItem)\"\n      [ngTemplateOutletContext]=\"\n        multiple\n          ? {\n              option: item.option,\n              checked: item.isChecked,\n              filterKey: filterKey,\n              position: 'list',\n              template: checkBoxItem\n            }\n          : {\n              option: item.option,\n              filterKey: filterKey,\n              position: 'list',\n              template: defaultItem\n            }\n      \"\n    >\n    </ng-template>\n  </li>\n</ng-template>\n\n<ng-template #defaultItem let-option=\"option\">\n  {{ formatter(option) }}\n</ng-template>\n\n<ng-template #checkBoxItem let-option=\"option\" let-checked=\"checked\">\n  <d-checkbox\n    [color]=\"color\"\n    [label]=\"formatter(option)\"\n    [cssClass]=\"'devui-select-checkbox'\"\n    [ngModel]=\"checked\"\n    [disabled]=\"option[optionDisabledKey]\"\n  >\n  </d-checkbox>\n</ng-template>\n", styles: ["@charset \"UTF-8\";.devui-font-size-base{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-font-base{font-size:12px;font-size:var(--devui-font-size, 12px);font-weight:400;line-height:1.5}.devui-font-size-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px)}.devui-font-modal-title{font-size:18px;font-size:var(--devui-font-size-modal-title, 18px);font-weight:700;line-height:1.5}.devui-font-size-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px)}.devui-font-page-title{font-size:16px;font-size:var(--devui-font-size-page-title, 16px);font-weight:700;line-height:1.5}.devui-font-size-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px)}.devui-font-secondary-title{font-size:14px;font-size:var(--devui-font-size-card-title, 14px);font-weight:700;line-height:1.5}.devui-dropdown-menu:not(.devui-dropdown-menu-cdk){width:calc(100% + 2px);left:-1px;margin:4px 0}.devui-dropdown-menu.devui-custom-right,.devui-dropdown-menu.devui-custom-left,.devui-dropdown-menu.devui-custom-top{min-width:400px;display:flex!important}.devui-dropdown-menu.devui-custom-right>.devui-dropdown-menu-wrap,.devui-dropdown-menu.devui-custom-left>.devui-dropdown-menu-wrap,.devui-dropdown-menu.devui-custom-top>.devui-dropdown-menu-wrap{display:inline-block}.devui-dropdown-menu.devui-custom-right>.devui-select-custom-area,.devui-dropdown-menu.devui-custom-left>.devui-select-custom-area,.devui-dropdown-menu.devui-custom-top>.devui-select-custom-area{display:inline-block;overflow:auto}.devui-dropdown-menu.devui-custom-right:not(.devui-custom-top)>.devui-dropdown-menu-wrap,.devui-dropdown-menu.devui-custom-left:not(.devui-custom-top)>.devui-dropdown-menu-wrap,.devui-dropdown-menu.devui-custom-top:not(.devui-custom-top)>.devui-dropdown-menu-wrap{width:calc(50% - 1px)}.devui-dropdown-menu.devui-custom-right:not(.devui-custom-top)>.devui-select-custom-area,.devui-dropdown-menu.devui-custom-left:not(.devui-custom-top)>.devui-select-custom-area,.devui-dropdown-menu.devui-custom-top:not(.devui-custom-top)>.devui-select-custom-area{width:50%}.devui-dropdown-menu.devui-custom-right>.devui-select-custom-area:before,.devui-dropdown-menu.devui-custom-left>.devui-select-custom-area:before,.devui-dropdown-menu.devui-custom-top>.devui-select-custom-area:before{display:none}.devui-dropdown-menu.devui-custom-top{flex-direction:column-reverse}.devui-dropdown-menu.devui-custom-left>.devui-select-custom-area{border-right:1px solid #f2f2f3;border-right:1px solid var(--devui-dividing-line, #f2f2f3);order:-1}.devui-dropdown-menu.devui-custom-right>.devui-select-custom-area{border-left:1px solid #f2f2f3;border-left:1px solid var(--devui-dividing-line, #f2f2f3)}.devui-dropdown-menu.devui-custom-top>.devui-select-custom-area{border-bottom:1px solid #f2f2f3;border-bottom:1px solid var(--devui-dividing-line, #f2f2f3)}.devui-dropdown-menu.devui-reset-min-width{min-width:auto}.devui-dropdown-menu .devui-dropdown-menu-wrap{position:static;position:initial}.devui-dropdown-menu-cdk{position:static;display:block;width:100%}.devui-form-group.devui-has-feedback[tabindex]{outline:none}.devui-select-placeholder,.devui-select-list-wrapper.devui-form-control,.devui-select-selected-item-with-template{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-form-group>input.devui-form-control.devui-select-input{cursor:pointer;padding-right:2em;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.devui-form-group>input.devui-form-control.devui-select-input.devui-select-search{padding-right:2em;cursor:text}.devui-form-group>input.devui-form-control.devui-select-input.devui-select-search.devui-search-filter{padding-right:4em}.devui-select-list-wrapper.devui-form-control{cursor:pointer}.devui-dropdown-item{clear:both;color:#252b3a;color:var(--devui-text, #252b3a);font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-dropdown-item input[name=search]{font-size:12px;font-size:var(--devui-font-size, 12px)}.devui-dropdown-item ::ng-deep .devui-select-checkbox label{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.devui-select-lg{font-size:14px;font-size:var(--devui-font-size-lg, 14px);min-height:46px;line-height:46px}.devui-select-lg .devui-form-control:not(.devui-select-list-wrapper){height:44px}.devui-select-lg .devui-select-placeholder,.devui-select-lg .devui-select-list-wrapper.devui-form-control,.devui-select-lg .devui-select-selected-item-with-template{font-size:14px;font-size:var(--devui-font-size-lg, 14px)}.devui-select-lg .devui-dropdown-item{font-size:14px;font-size:var(--devui-font-size-lg, 14px);min-height:40px;line-height:28px;padding:11px 10px}.devui-select-lg .devui-dropdown-item input[name=search]{font-size:14px;font-size:var(--devui-font-size-lg, 14px)}.devui-select-lg ::ng-deep .devui-checkbox,.devui-select-lg ::ng-deep .devui-select-checkbox label,.devui-select-lg ::ng-deep .devui-select-checkbox label .checkbox-label{font-size:14px;font-size:var(--devui-font-size-lg, 14px);height:18px}.devui-select-lg ::ng-deep .devui-checkbox-material{width:16px;height:16px}.devui-select-sm{font-size:12px;font-size:var(--devui-font-size-sm, 12px);line-height:14px;height:unset}.devui-select-sm.devui-dropdown-origin:not(d-button):not(.icon):not([class^=icon-]){min-height:26px}.devui-select-sm .devui-form-control:not(.devui-select-list-wrapper){height:24px}.devui-select-sm .devui-select-placeholder,.devui-select-sm .devui-select-list-wrapper.devui-form-control,.devui-select-sm .devui-select-selected-item-with-template{font-size:12px;font-size:var(--devui-font-size-sm, 12px)}.devui-select-sm .devui-dropdown-item{font-size:12px;font-size:var(--devui-font-size-sm, 12px);min-height:26px;line-height:14px}.devui-select-sm .devui-dropdown-item input[name=search]{font-size:12px;font-size:var(--devui-font-size-sm, 12px)}.devui-select-sm ::ng-deep .devui-select-checkbox label .checkbox-label{font-size:12px;font-size:var(--devui-font-size-sm, 12px);line-height:16px}.devui-select-sm ::ng-deep .devui-checkbox-material{width:12px;height:12px}.devui-select-sm ::ng-deep .devui-checkbox-material>svg{width:12px;height:12px}.devui-dropdown-menu-lg .devui-dropdown-item{font-size:14px;font-size:var(--devui-font-size-lg, 14px);min-height:40px;line-height:28px}.devui-dropdown-menu-lg .devui-dropdown-item input[name=search]{font-size:14px;font-size:var(--devui-font-size-lg, 14px)}.devui-dropdown-menu-lg ::ng-deep .devui-checkbox,.devui-dropdown-menu-lg ::ng-deep .devui-select-checkbox label .checkbox-label{font-size:14px;font-size:var(--devui-font-size-lg, 14px);line-height:28px}.devui-dropdown-menu-lg ::ng-deep .devui-checkbox-material{width:16px;height:16px}.devui-dropdown-menu-lg ::ng-deep .devui-checkbox-material>svg{width:16px;height:16px}.devui-dropdown-menu-sm .devui-dropdown-item{font-size:12px;font-size:var(--devui-font-size-sm, 12px);min-height:26px;line-height:14px}.devui-dropdown-menu-sm .devui-dropdown-item input[name=search]{font-size:12px;font-size:var(--devui-font-size-sm, 12px)}.devui-dropdown-menu-sm ::ng-deep .devui-select-checkbox label .checkbox-label{font-size:12px;font-size:var(--devui-font-size-sm, 12px);line-height:16px}.devui-dropdown-menu-sm ::ng-deep .devui-checkbox-material{width:12px;height:12px}div.devui-dropdown-menu{cursor:pointer;min-width:auto;box-shadow:0 2px 8px rgba(37,43,58,.2);box-shadow:var(--devui-shadow-connected-overlay, 0 2px 8px 0) var(--devui-shadow, rgba(37, 43, 58, .2))}div.devui-dropdown-menu .devui-select-list-unstyled li:hover:not(.active):not(.disabled),div.devui-dropdown-menu>ul.devui-select-list-unstyled li:hover:not(.active):not(.disabled){background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);color:#252b3a;color:var(--devui-list-item-hover-text, #252b3a)}div.devui-dropdown-menu .devui-select-list-unstyled li.selected,div.devui-dropdown-menu>ul.devui-select-list-unstyled li.selected{background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);color:#252b3a;color:var(--devui-list-item-hover-text, #252b3a)}div.devui-dropdown-menu:not(.devui-dropdown-menu-multiple) .devui-select-list-unstyled li.active,div.devui-dropdown-menu:not(.devui-dropdown-menu-multiple) .devui-select-list-unstyled li.active:hover,div.devui-dropdown-menu:not(.devui-dropdown-menu-multiple)>ul.devui-select-list-unstyled li.active,div.devui-dropdown-menu:not(.devui-dropdown-menu-multiple)>ul.devui-select-list-unstyled li.active:hover{background-color:#f2f5fc;background-color:var(--devui-list-item-active-bg, #f2f5fc);color:#252b3a;color:var(--devui-list-item-active-text, #252b3a)}:host ::ng-deep .devui-dropdown-menu.devui-dropdown-menu-multiple .devui-select-list-unstyled li:not(.disabled):hover .devui-checkbox>label,:host ::ng-deep .devui-dropdown-menu.devui-dropdown-menu-multiple>ul.devui-select-list-unstyled li:not(.disabled):hover .devui-checkbox>label{color:#252b3a;color:var(--devui-list-item-hover-text, #252b3a)}:host ::ng-deep .devui-dropdown-menu.devui-dropdown-menu-multiple .devui-select-list-unstyled li:not(.disabled):hover .devui-checkbox>label>.devui-checkbox-material,:host ::ng-deep .devui-dropdown-menu.devui-dropdown-menu-multiple>ul.devui-select-list-unstyled li:not(.disabled):hover .devui-checkbox>label>.devui-checkbox-material{border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0)}div.devui-dropdown-menu.devui-dropdown-menu-multiple .devui-select-list-unstyled li.active:not(.disabled),div.devui-dropdown-menu.devui-dropdown-menu-multiple>ul.devui-list-unstyled li.active:not(.disabled){background-color:transparent;color:#252b3a;color:var(--devui-text, #252b3a)}div.devui-dropdown-menu.devui-dropdown-menu-multiple .devui-select-list-unstyled li.active:not(.disabled):hover,div.devui-dropdown-menu.devui-dropdown-menu-multiple>ul.devui-list-unstyled li.active:not(.disabled):hover{background-color:#f2f2f3;background-color:var(--devui-list-item-hover-bg, #f2f2f3);color:#252b3a;color:var(--devui-list-item-hover-text, #252b3a)}.devui-has-feedback{z-index:1}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input{background-color:#f2f2f3;background-color:var(--devui-embed-search-bg, #f2f2f3)}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input:focus{background-color:#fff;background-color:var(--devui-form-control-bg, #ffffff);border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0)}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input:hover,.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input:hover:focus{background-color:#fff;background-color:var(--devui-form-control-bg, #ffffff);border-color:#5e7ce0;border-color:var(--devui-form-control-line-active, #5e7ce0)}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input::-moz-placeholder{color:#babbc0;color:var(--devui-placeholder, #babbc0)}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input:-ms-input-placeholder{color:#babbc0;color:var(--devui-placeholder, #babbc0)}.devui-dropdown-menu ul.devui-dropdown-menu-wrap .devui-form-group.devui-has-feedback>input.devui-form-control.devui-select-search.devui-select-input::placeholder{color:#babbc0;color:var(--devui-placeholder, #babbc0)}.devui-form-control,.devui-form-group .devui-form-control{border-radius:2px;border-radius:var(--devui-border-radius, 2px);box-shadow:none}.devui-select-underlined-border{border:0;border-bottom:1px solid #d7d8da;border-bottom:1px solid var(--devui-line, #d7d8da);border-radius:0}.devui-select-list-wrapper.devui-form-control{height:auto;margin:0;padding:0 30px 0 0}.devui-select-list-wrapper.devui-form-control+.devui-form-control-feedback{height:100%;padding:0;display:inline-flex;align-items:center;justify-content:center}.devui-form-control.devui-select-input{line-height:14px;height:26px;border-color:transparent;outline:none}.devui-form-control.devui-select-input+.devui-form-control-feedback{height:100%;padding:0;display:inline-flex;align-items:center;justify-content:center}.devui-form-control.devui-select-input-lg{line-height:32px}.devui-form-control.devui-select-input-sm{line-height:12px}.devui-select-list-wrapper .devui-select-selected-item-with-template{height:24px;line-height:24px;padding:0 10px;cursor:pointer}.devui-select-list-wrapper .devui-select-placeholder{height:24px;line-height:24px;color:#babbc0;color:var(--devui-placeholder, #babbc0);padding-left:10px}.devui-select-list-wrapper .devui-select-tag-list{height:26px;margin:0;padding:0;list-style-type:none;overflow:hidden}.devui-select-list-wrapper .devui-select-tag-list.normal{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.devui-select-list-wrapper .devui-select-tag-list.scroll-y{overflow-y:auto;overflow-x:hidden}.devui-select-list-wrapper .devui-select-tag-list.multiple-line{height:auto;overflow-y:auto;overflow-x:hidden;line-height:1.5;max-height:48px}.devui-select-list-wrapper .devui-select-tag-item{display:inline-block;margin:2px 0 0 2px}.devui-select-list-wrapper .devui-select-tag-item.disabled{background:#f5f5f5;background:var(--devui-disabled-bg, #f5f5f5);border-color:#f5f5f5;border-color:var(--devui-disabled-bg, #f5f5f5);cursor:not-allowed}.devui-select-list-wrapper .over-flow-ellipsis{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;height:20px;line-height:20px;vertical-align:middle}.devui-select-list-wrapper.devui-select-input-lg{line-height:1.5}.devui-select-list-wrapper.devui-select-input-lg .devui-select-selected-item-with-template,.devui-select-list-wrapper.devui-select-input-lg .devui-select-placeholder,.devui-select-list-wrapper.devui-select-input-lg .devui-select-tag-list{height:42px}.devui-select-list-wrapper.devui-select-input-lg .devui-select-selected-item-with-template.multiple-line,.devui-select-list-wrapper.devui-select-input-lg .devui-select-placeholder.multiple-line,.devui-select-list-wrapper.devui-select-input-lg .devui-select-tag-list.multiple-line{max-height:74px;height:unset}.devui-select-list-wrapper.devui-select-input-lg .devui-select-selected-item-with-template,.devui-select-list-wrapper.devui-select-input-lg .devui-select-placeholder{line-height:42px}.devui-select-list-wrapper.devui-select-input-sm{line-height:1.5}.devui-select-list-wrapper.devui-select-input-sm .devui-select-selected-item-with-template,.devui-select-list-wrapper.devui-select-input-sm .devui-select-placeholder,.devui-select-list-wrapper.devui-select-input-sm .devui-select-tag-list{height:24px}.devui-select-list-wrapper.devui-select-input-sm .devui-select-selected-item-with-template.multiple-line,.devui-select-list-wrapper.devui-select-input-sm .devui-select-placeholder.multiple-line,.devui-select-list-wrapper.devui-select-input-sm .devui-select-tag-list.multiple-line{max-height:48px;height:unset}.devui-select-list-wrapper.devui-select-input-sm .devui-select-selected-item-with-template,.devui-select-list-wrapper.devui-select-input-sm .devui-select-placeholder{line-height:22px}.disabled .devui-select-list-wrapper .devui-select-tag-item span{padding-right:0}.devui-dropdown-item.disabled,.devui-dropdown-item.disabled:hover,div.devui-dropdown-menu li.disabled:hover,div.devui-dropdown-menu .devui-select-list-unstyled li.disabled:hover,div.devui-dropdown-menu>ul.devui-select-list-unstyled li.disabled:hover{cursor:not-allowed;color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}div.devui-dropdown-menu .devui-select-list-unstyled li.active.disabled,div.devui-dropdown-menu>ul.devui-select-list-unstyled li.active.disabled,div.devui-dropdown-menu .devui-select-list-unstyled li.active.disabled:hover,div.devui-dropdown-menu>ul.devui-select-list-unstyled li.active.disabled:hover{background:#f5f5f5;background:var(--devui-disabled-bg, #f5f5f5);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}:host ::ng-deep li.disabled .devui-checkbox.disabled label,:host ::ng-deep .li.disabled .devui-checkbox.disabled label,li.disabled ::ng-deep .devui-checkbox.disabled label,li.disabled ::ng-deep .devui-checkbox.disabled label{color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-dropdown-origin.disabled,.devui-dropdown-origin.disabled:hover{cursor:not-allowed;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-color:#dfe1e6;border-color:var(--devui-disabled-line, #dfe1e6);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-dropdown-origin.disabled .devui-select-list-wrapper.devui-form-control,.devui-dropdown-origin.disabled .devui-form-control.devui-select-input,.devui-dropdown-origin.disabled:hover .devui-select-list-wrapper.devui-form-control,.devui-dropdown-origin.disabled:hover .devui-form-control.devui-select-input{cursor:not-allowed;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-dropdown-origin.disabled .devui-select-list-wrapper.devui-form-control.disabled,.devui-dropdown-origin.disabled:hover .devui-select-list-wrapper.devui-form-control.disabled{color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-dropdown-origin.disabled .devui-select-tag-list .devui-select-tag-item,.devui-dropdown-origin .devui-select-tag-list .devui-select-tag-item.disabled,.devui-dropdown-origin:hover.disabled .devui-select-tag-list .devui-select-tag-item,.devui-dropdown-origin:hover .devui-select-tag-list .devui-select-tag-item.disabled{background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);border-color:#dfe1e6;border-color:var(--devui-disabled-line, #dfe1e6)}.devui-dropdown-origin.disabled .devui-select-tag-list .devui-select-tag-item>span,.devui-dropdown-origin .devui-select-tag-list .devui-select-tag-item.disabled>span,.devui-dropdown-origin:hover.disabled .devui-select-tag-list .devui-select-tag-item>span,.devui-dropdown-origin:hover .devui-select-tag-list .devui-select-tag-item.disabled>span{color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3)}.devui-dropdown-origin.disabled .devui-select-tag-list .devui-select-tag-item>.devui-select-tag-remove-button,.devui-dropdown-origin .devui-select-tag-list .devui-select-tag-item.disabled>.devui-select-tag-remove-button,.devui-dropdown-origin:hover.disabled .devui-select-tag-list .devui-select-tag-item>.devui-select-tag-remove-button,.devui-dropdown-origin:hover .devui-select-tag-list .devui-select-tag-item.disabled>.devui-select-tag-remove-button{background-color:#dfe1e6;background-color:var(--devui-disabled-line, #dfe1e6)}.devui-select-list-wrapper.devui-form-control.disabled+.devui-form-control-feedback,.devui-form-control.devui-select-input:disabled+.devui-form-control-feedback{cursor:not-allowed;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5)}.devui-select-list-wrapper.devui-form-control.disabled+.devui-form-control-feedback .devui-select-clear-icon svg path,.devui-select-list-wrapper.devui-form-control.disabled+.devui-form-control-feedback .devui-select-chevron-icon svg path,.devui-form-control.devui-select-input:disabled+.devui-form-control-feedback .devui-select-clear-icon svg path,.devui-form-control.devui-select-input:disabled+.devui-form-control-feedback .devui-select-chevron-icon svg path{fill:#cfd0d3;fill:var(--devui-disabled-text, #cfd0d3)}.devui-select-custom-area:before{display:block;content:\"\";width:calc(100% - 20px);margin:0 10px;height:1px;border-top:1px solid #f2f2f3;border-top:1px solid var(--devui-dividing-line, #f2f2f3)}svg.svg-icon-search path{fill:#71757f;fill:var(--devui-icon-text, #71757f)}.open .devui-select-chevron-icon{transform:rotate(180deg)}.devui-select-chevron-icon{display:inline-flex;vertical-align:middle}.devui-select-chevron-icon-animation{transition:transform .3s cubic-bezier(.645,.045,.355,1);transition:transform var(--devui-animation-duration-slow, .3s) var(--devui-animation-ease-in-out-smooth, cubic-bezier(.645, .045, .355, 1))}.devui-select-chevron-icon svg path{fill:#71757f;fill:var(--devui-icon-text, #71757f)}.disabled .devui-select-chevron-icon svg path{fill:#cfd0d3;fill:var(--devui-disabled-text, #cfd0d3)}.devui-form-group.devui-has-feedback:hover .devui-form-control-feedback.devui-clear-icon-show .devui-select-chevron-icon{display:none}.devui-form-group.devui-has-feedback:hover .devui-form-control-feedback.devui-clear-icon-show .devui-select-clear-icon{display:inline-flex;vertical-align:middle}.devui-form-control-feedback.devui-search-clear{right:28px;cursor:pointer;pointer-events:initial}.devui-form-control-feedback.devui-search-clear>svg{vertical-align:middle}.devui-form-control-feedback.devui-search-clear>svg path{fill:#d7d8da;fill:var(--devui-shape-icon-fill, #d7d8da)}.devui-form-control-feedback.devui-search-clear:hover svg path{fill:#babbc0;fill:var(--devui-shape-icon-fill-active, #babbc0)}.devui-form-control-feedback.devui-search-clear:after{content:\"\";display:block;position:absolute;right:0;top:15%;height:70%;width:1px;border-left:1px solid #d7d8da;border-left:1px solid var(--devui-line, #d7d8da)}.devui-form-control-feedback.devui-search-clear.devui-search-clear-lg{right:30px;width:32px;height:44px;line-height:44px}.devui-form-control-feedback.devui-search-clear.devui-search-clear-sm{right:26px;width:24px;height:24px;line-height:24px}.devui-select-clear-icon{width:14px;height:14px;display:none;transition:transform .2s ease;pointer-events:auto;cursor:pointer}.devui-select-clear-icon:after,.devui-select-clear-icon:before{position:absolute;content:\"\";height:14px;width:2px;background-color:#71757f;background-color:var(--devui-icon-text, #71757f);left:50%}.devui-select-clear-icon:before{transform:rotate(45deg)}.devui-select-clear-icon:after{transform:rotate(-45deg)}.devui-form-control-feedback.devui-search-clear:hover g>g>polygon{fill:#252b3a;fill:var(--devui-icon-fill-active, #252b3a)}.devui-select-clear-icon:hover:before,.devui-select-clear-icon:hover:after{background-color:#252b3a;background-color:var(--devui-icon-fill-active, #252b3a)}input::-ms-clear{display:none}.devui-dropup .devui-dropdown-menu{top:auto;bottom:100%}.devui-dropdown{height:unset}:host ::ng-deep .devui-select-tag-item d-tag{width:100%}:host ::ng-deep .devui-select-tag-item d-tag .devui-tag-item>span{vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:inline-block;width:100%}:host ::ng-deep .devui-select-tag-item.disabled{line-height:18px}:host ::ng-deep .devui-select-tag-item.disabled d-tag .devui-tag-item{border:solid 1px #dfe1e6;border:solid 1px var(--devui-disabled-line, #dfe1e6);line-height:18px;background-color:#f5f5f5;background-color:var(--devui-disabled-bg, #f5f5f5);color:#cfd0d3;color:var(--devui-disabled-text, #cfd0d3);cursor:not-allowed}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i1.WindowRef }, { type: i0.ChangeDetectorRef }, { type: i2.I18nService }, { type: i0.NgZone }, { type: i3.DevConfigService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; }, propDecorators: { options: [{
                type: Input
            }], isSearch: [{
                type: Input
            }], toggleOnFocus: [{
                type: Input
            }], scrollHight: [{
                type: Input
            }], highlightItemClass: [{
                type: Input
            }], filterKey: [{
                type: Input
            }], multiple: [{
                type: Input
            }], isSelectAll: [{
                type: Input
            }], readonly: [{
                type: Input
            }], size: [{
                type: Input
            }], appendToBody: [{
                type: Input
            }], appendToBodyDirections: [{
                type: Input
            }], width: [{
                type: Input
            }], templateItemSize: [{
                type: Input
            }], disabled: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], searchPlaceholder: [{
                type: Input
            }], searchFn: [{
                type: Input
            }], valueParser: [{
                type: Input
            }], formatter: [{
                type: Input
            }], direction: [{
                type: Input
            }], overview: [{
                type: Input
            }], allowClear: [{
                type: Input
            }], color: [{
                type: Input
            }], enableLazyLoad: [{
                type: Input
            }], virtualScroll: [{
                type: Input
            }], inputItemTemplate: [{
                type: Input
            }], itemTemplate: [{
                type: ContentChild,
                args: [TemplateRef]
            }], valueChange: [{
                type: Output
            }], toggleChange: [{
                type: Output
            }], loadMore: [{
                type: Output
            }], extraConfig: [{
                type: Input
            }], optionDisabledKey: [{
                type: Input
            }], optionImmutableKey: [{
                type: Input
            }], noResultItemTemplate: [{
                type: Input
            }], keepMultipleOrder: [{
                type: Input
            }], customViewTemplate: [{
                type: Input
            }], customViewDirection: [{
                type: Input
            }], autoFocus: [{
                type: Input
            }], notAutoScroll: [{
                type: Input
            }], loadingTemplateRef: [{
                type: Input
            }], showAnimation: [{
                type: Input
            }], selectWrapper: [{
                type: ViewChild,
                args: ['selectWrapper', { static: true }]
            }], selectInputElement: [{
                type: ViewChild,
                args: ['selectInput']
            }], selectMenuElement: [{
                type: ViewChild,
                args: ['selectMenu']
            }], selectBoxElement: [{
                type: ViewChild,
                args: ['selectBox', { static: true }]
            }], selectInputWithTemplateElement: [{
                type: ViewChild,
                args: ['selectInputWithTemplate']
            }], selectInputWithLabelElement: [{
                type: ViewChild,
                args: ['selectInputWithLabel']
            }], filterInputElement: [{
                type: ViewChild,
                args: ['filterInput']
            }], dropdownUl: [{
                type: ViewChild,
                args: ['dropdownUl']
            }], connectedOverlay: [{
                type: ViewChild,
                args: [CdkConnectedOverlay]
            }], virtualScrollViewport: [{
                type: ViewChild,
                args: [CdkVirtualScrollViewport]
            }], setMouseEventTrue: [{
                type: HostListener,
                args: ['mousedown', ['$event']]
            }], setMouseEventFalse: [{
                type: HostListener,
                args: ['mouseup', ['$event']]
            }] } });

class SelectModule {
}
SelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: SelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: SelectModule, declarations: [SelectComponent], imports: [CommonModule,
        FormsModule,
        OverlayModule,
        ScrollingModule,
        CheckBoxModule,
        LoadingModule,
        LazyLoadModule,
        WindowRefModule,
        TagsModule], exports: [SelectComponent] });
SelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: SelectModule, imports: [[
            CommonModule,
            FormsModule,
            OverlayModule,
            ScrollingModule,
            CheckBoxModule,
            LoadingModule,
            LazyLoadModule,
            WindowRefModule,
            TagsModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: SelectModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        OverlayModule,
                        ScrollingModule,
                        CheckBoxModule,
                        LoadingModule,
                        LazyLoadModule,
                        WindowRefModule,
                        TagsModule,
                    ],
                    exports: [SelectComponent],
                    declarations: [SelectComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { SelectComponent, SelectModule };
//# sourceMappingURL=ng-devui-select.mjs.map
