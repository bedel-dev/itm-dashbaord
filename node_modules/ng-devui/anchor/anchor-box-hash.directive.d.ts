import { AfterViewInit, OnDestroy, OnInit } from '@angular/core';
import { ActivatedRoute, NavigationEnd, Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { AnchorBoxDirective } from './anchor-box.directive';
import { AnchorDirective } from './anchor.directive';
import * as i0 from "@angular/core";
export declare class AnchorBoxHashSupportDirective implements OnInit, AfterViewInit, OnDestroy {
    private box;
    private router;
    private route;
    updateUrlWhenAnchorActive: boolean;
    scrollToAnchorByHashOnlyInit: boolean;
    sub: Subscription;
    manual: boolean;
    constructor(box: AnchorBoxDirective, router: Router, route: ActivatedRoute);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    navigateToHash: (targetAnchor: AnchorDirective) => void;
    navigateToAnchor: (event: NavigationEnd) => void;
    scrollToFragment: (frag: string) => void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AnchorBoxHashSupportDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AnchorBoxHashSupportDirective, "[dAnchorBox][dAnchorHashSupport]", never, { "updateUrlWhenAnchorActive": "updateUrlWhenAnchorActive"; "scrollToAnchorByHashOnlyInit": "scrollToAnchorByHashOnlyInit"; }, {}, never>;
}
