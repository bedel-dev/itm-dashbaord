import { ElementRef, OnDestroy, OnInit } from '@angular/core';
import { I18nInterface, I18nService } from 'ng-devui/i18n';
import { Subject, Subscription } from 'rxjs';
import { DatepickerProService } from '../datepicker-pro.service';
import * as i0 from "@angular/core";
interface TimeObj {
    time: string;
    type?: string;
    active?: boolean;
    disabled?: boolean;
}
export declare class TimepickerPanelComponent implements OnInit, OnDestroy {
    private el;
    private pickSrv;
    protected i18n: I18nService;
    firstList: Array<TimeObj>;
    secondList: Array<TimeObj>;
    thirdList: Array<TimeObj>;
    hourIndex: any;
    minIndex: any;
    secIndex: any;
    typeList: string[];
    unsubscribe$: Subject<unknown>;
    i18nText: I18nInterface['datePickerPro'];
    i18nSubscription: Subscription;
    constructor(el: ElementRef, pickSrv: DatepickerProService, i18n: I18nService);
    ngOnInit(): void;
    setI18nText(): void;
    initObservable(): void;
    initDateList(justScroll?: boolean): void;
    chooseTime(type: string, index: number, handle?: boolean, justScroll?: boolean): void;
    setAllScroll(first: number, second: number, third: number, justScroll: boolean): void;
    setScroll(whichList: any, index: any, justScroll?: any): void;
    scrollTo(element: HTMLElement, to: number, duration: number): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TimepickerPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TimepickerPanelComponent, "d-timepicker-panel", never, {}, {}, never, never>;
}
export {};
