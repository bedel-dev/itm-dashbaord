import { AfterViewInit, ElementRef, EventEmitter, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { I18nService } from 'ng-devui/i18n';
import { DefaultDateConverter } from 'ng-devui/utils';
import { Subject } from 'rxjs';
import { DatepickerProService } from './datepicker-pro.service';
import * as i0 from "@angular/core";
export declare class DatepickerProCalendarComponent implements OnInit, AfterViewInit, OnDestroy {
    private pickerSrv;
    private i18n;
    set activeRangeType(type: 'start' | 'end');
    get curActiveDate(): Date;
    set currentActiveInput(value: 'start' | 'end');
    get currentActiveInput(): 'start' | 'end';
    get dateValue(): string[];
    set dateValue(value: string[]);
    get curFormat(): string;
    constructor(pickerSrv: DatepickerProService, i18n: I18nService);
    isRangeType: boolean;
    showTime: boolean;
    mode: 'year' | 'month' | 'date' | 'week';
    startIndexOfWeek: number;
    splitter: string;
    showRangeHeader: boolean;
    placeholder: string[];
    allowClear: boolean;
    set minDate(value: Date);
    set maxDate(value: Date);
    set markedRangeDateList(value: Date[][]);
    set markedDateList(value: Date[]);
    confirmEvent: EventEmitter<Date | Date[]>;
    cancelEvent: EventEmitter<void>;
    customTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    set markDateInfoTemplate(tmp: TemplateRef<any>);
    datepickerInputStart: ElementRef;
    datepickerInputEnd: ElementRef;
    strWidth: number;
    _dateValue: any[];
    i18nText: any;
    datepickerConvert: DefaultDateConverter;
    unsubscribe$: Subject<unknown>;
    private i18nLocale;
    private onChange;
    private onTouched;
    private setI18nText;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    updateCurPosition(): void;
    clear(event?: MouseEvent): void;
    private initSrvStatus;
    private formatDateToString;
    private initObservable;
    focusChange(type: 'start' | 'end'): void;
    isSameDateAndTimeWrong(): boolean;
    writeValue(value: Date | Date[]): void;
    writeRangeValue(value: Date[]): void;
    writeSingleValue(value: Date): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    ngOnDestroy(): void;
    getStrWidth(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DatepickerProCalendarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DatepickerProCalendarComponent, "d-datepicker-calendar", never, { "activeRangeType": "activeRangeType"; "isRangeType": "isRangeType"; "showTime": "showTime"; "mode": "mode"; "startIndexOfWeek": "startIndexOfWeek"; "splitter": "splitter"; "showRangeHeader": "showRangeHeader"; "placeholder": "placeholder"; "allowClear": "allowClear"; "minDate": "minDate"; "maxDate": "maxDate"; "markedRangeDateList": "markedRangeDateList"; "markedDateList": "markedDateList"; }, { "confirmEvent": "confirmEvent"; "cancelEvent": "cancelEvent"; }, ["customTemplate", "footerTemplate", "markDateInfoTemplate"], never>;
}
