import { AfterViewInit, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { FormDirective } from './form.directive';
import * as i0 from "@angular/core";
export declare class FormOperationComponent implements OnInit {
    constructor(elementRef: ElementRef, renderer: Renderer2);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<FormOperationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FormOperationComponent, "d-form-operation", never, {}, {}, never, ["*"]>;
}
export declare class DFormSubmitDirective implements AfterViewInit, OnDestroy {
    private elementRef;
    private _dForm;
    default: boolean;
    _eventName: string;
    set eventName(eventName: any);
    data: any;
    private destroy$;
    constructor(elementRef: ElementRef, _dForm: FormDirective);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    registerEvent(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DFormSubmitDirective, [null, { optional: true; host: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DFormSubmitDirective, "[dFormSubmit]", never, { "eventName": "dFormSubmit"; "data": "dFormSubmitData"; }, {}, never>;
}
export declare class DFormResetDirective implements AfterViewInit, OnDestroy {
    private elementRef;
    private _dForm;
    default: boolean;
    _eventName: string;
    set eventName(eventName: any);
    private destroy$;
    constructor(elementRef: ElementRef, _dForm: FormDirective);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    registerEvent(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DFormResetDirective, [null, { optional: true; host: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DFormResetDirective, "[dFormReset]", never, { "eventName": "dFormReset"; }, {}, never>;
}
