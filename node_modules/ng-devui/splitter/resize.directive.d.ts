import { ElementRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';
import * as i0 from "@angular/core";
export declare class ResizeDirective implements OnInit, OnDestroy {
    private el;
    private ngZone;
    enableResize: boolean;
    pressEvent: EventEmitter<any>;
    dragEvent: EventEmitter<any>;
    releaseEvent: EventEmitter<any>;
    constructor(el: ElementRef, ngZone: NgZone);
    ngOnInit(): void;
    ngOnDestroy(): void;
    bind: (el: any, event: any, callback: any) => any;
    unbind: (el: any, event: any, callback: any) => any;
    bindEvent(): void;
    mousedown: (e: any) => void;
    mousemove: (e: any) => void;
    mouseup: (e: any) => void;
    touchstart: (e: any) => void;
    touchmove: (e: any) => void;
    touchend: (e: any) => void;
    normalizeEvent(e: any): {
        pageX: any;
        pageY: any;
        clientX: any;
        clientY: any;
        type: any;
        originalEvent: any;
        isTouch: boolean;
        offsetX?: undefined;
        offsetY?: undefined;
    } | {
        pageX: any;
        pageY: any;
        clientX: any;
        clientY: any;
        offsetX: any;
        offsetY: any;
        type: any;
        originalEvent: any;
        isTouch?: undefined;
    };
    static ɵfac: i0.ɵɵFactoryDeclaration<ResizeDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ResizeDirective, "[dResize]", never, { "enableResize": "enableResize"; }, { "pressEvent": "pressEvent"; "dragEvent": "dragEvent"; "releaseEvent": "releaseEvent"; }, never>;
}
