import { AfterViewChecked, ElementRef, EventEmitter, OnChanges, Renderer2, SimpleChanges } from '@angular/core';
import { SplitterService } from './splitter.service';
import { CollapseDirection, SplitterOrientation } from './splitter.types';
import * as i0 from "@angular/core";
export declare class SplitterPaneComponent implements OnChanges, AfterViewChecked {
    private splitter;
    private el;
    private renderer;
    minSize: string;
    maxSize: string;
    resizable: boolean;
    collapsible: boolean;
    shrink: boolean;
    shrinkWidth: number;
    _collapsed: boolean;
    set collapsed(newCollapsed: boolean);
    get collapsed(): boolean;
    collapseDirection: CollapseDirection;
    widthBeforeShrink: any;
    _size: any;
    set size(newSize: any);
    get size(): any;
    sizeChange: EventEmitter<any>;
    collapsedChange: EventEmitter<any>;
    shrinkStatusChange: EventEmitter<boolean>;
    paneClass: boolean;
    orientation: SplitterOrientation;
    _order: number;
    element: any;
    set order(paneOrder: number);
    get order(): number;
    constructor(splitter: SplitterService, el: ElementRef, renderer: Renderer2);
    ngOnChanges(changes: SimpleChanges): void;
    setOrderStyles(): void;
    get computedSize(): any;
    toggleCollapseClass(): void;
    toggleNearPaneFlexGrow(collapsed: any): void;
    ngAfterViewChecked(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SplitterPaneComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SplitterPaneComponent, "d-splitter-pane", never, { "minSize": "minSize"; "maxSize": "maxSize"; "resizable": "resizable"; "collapsible": "collapsible"; "shrink": "shrink"; "shrinkWidth": "shrinkWidth"; "collapsed": "collapsed"; "collapseDirection": "collapseDirection"; "size": "size"; }, { "sizeChange": "sizeChange"; "collapsedChange": "collapsedChange"; "shrinkStatusChange": "shrinkStatusChange"; }, never, ["*"]>;
}
