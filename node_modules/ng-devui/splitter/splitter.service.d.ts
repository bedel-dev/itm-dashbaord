import { Subject } from 'rxjs';
import { SplitterPaneComponent } from './splitter-pane.component';
import * as i0 from "@angular/core";
export declare class SplitterService {
    panes: Array<SplitterPaneComponent>;
    private containerSize;
    paneCount: number;
    paneChangeSubject: Subject<unknown>;
    configPane({ panes, orientation, containerSize }: {
        panes: any;
        orientation: any;
        containerSize: any;
    }): void;
    dragState(splitbarIndex: any): {
        prev: {
            index: any;
            initialSize: any;
            minSize: number;
            maxSize: any;
        };
        next: {
            index: any;
            initialSize: any;
            minSize: number;
            maxSize: any;
        };
    };
    setSize(state: any, distance: any): void;
    clamp(minSize: any, maxSize: any, initialSize: any): number;
    resize(paneState: any, moveSize: any): void;
    isResizable(splitBarIndex: any): boolean;
    isStaticBar(splitBarIndex: any): boolean;
    getPane(index: any): SplitterPaneComponent;
    isPercent(size: any): boolean;
    toPixels(size: any): number;
    togglePane(paneIndex: any, nearPaneIndex: any, lockStatus?: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SplitterService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<SplitterService>;
}
