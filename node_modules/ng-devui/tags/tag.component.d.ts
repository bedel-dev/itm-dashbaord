import { EventEmitter, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
export declare type ITagMode = 'default' | 'checkable' | 'closeable';
export declare class TagComponent {
    /**
     * 【必选】记录输入的标签
     */
    tag: string;
    labelStyle: string;
    customColor: string;
    deletable: boolean;
    titleContent: string;
    mode: ITagMode;
    checked: boolean;
    maxWidth: any;
    customViewTemplate: TemplateRef<any>;
    /**
     * tag被删除后触发
     */
    tagDelete: EventEmitter<any>;
    checkedChange: EventEmitter<boolean>;
    deleteTag: boolean;
    colorMap: {
        'blue-w98': string;
        'aqua-w98': string;
        'olivine-w98': string;
        'green-w98': string;
        'yellow-w98': string;
        'orange-w98': string;
        'red-w98': string;
        'pink-w98': string;
        'purple-w98': string;
    };
    get isColorfulTag(): boolean;
    removeTag($event: any, tag: any): void;
    tagClick(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TagComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TagComponent, "d-tag", ["Tag"], { "tag": "tag"; "labelStyle": "labelStyle"; "customColor": "customColor"; "deletable": "deletable"; "titleContent": "titleContent"; "mode": "mode"; "checked": "checked"; "maxWidth": "maxWidth"; "customViewTemplate": "customViewTemplate"; }, { "tagDelete": "tagDelete"; "checkedChange": "checkedChange"; }, never, never>;
}
