import { AfterViewInit, ElementRef, EventEmitter, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { Subscription } from 'rxjs';
import * as i0 from "@angular/core";
export declare class LazyLoadDirective implements OnDestroy, OnChanges, AfterViewInit {
    private el;
    enableLazyLoad: boolean;
    contentMode: 'img' | 'list';
    target: HTMLElement | Window;
    imgLoadSrc: string;
    loadMore: EventEmitter<any>;
    scrollSubscription: Subscription;
    loadFactor: number;
    constructor(el: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    scrollList(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LazyLoadDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LazyLoadDirective, "[dLazyLoad]", never, { "enableLazyLoad": "enableLazyLoad"; "contentMode": "contentMode"; "target": "target"; "imgLoadSrc": "imgLoadSrc"; }, { "loadMore": "loadMore"; }, never>;
}
