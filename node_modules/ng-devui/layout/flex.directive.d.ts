import { ElementRef, OnChanges, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { DAlign, DAlignSelf, DJustify, DResponseParameter } from './layout.types';
import { DScreenMediaQueryService } from './screen-media-query.service';
import * as i0 from "@angular/core";
export declare class DFlexDirective implements OnInit, OnChanges, OnDestroy {
    private elementRef;
    private renderer;
    private screenQueryService;
    get flexRow(): boolean;
    get flexColumn(): boolean;
    get flex(): boolean;
    dFlex: DResponseParameter<number | string>;
    dFlexContainer: 'row' | 'column';
    dOrder: DResponseParameter<number>;
    dAlign: DResponseParameter<DAlign>;
    dAlignSelf: DResponseParameter<DAlignSelf>;
    dJustify: DResponseParameter<DJustify>;
    dFlexWrap: DResponseParameter<string>;
    private destroy$;
    constructor(elementRef: ElementRef, renderer: Renderer2, screenQueryService: DScreenMediaQueryService);
    parseFlex(flex: any): string;
    updateFlex(currentPoint: any): void;
    ngOnInit(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DFlexDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DFlexDirective, "[dFlex], d-row, d-col", never, { "dFlex": "dFlex"; "dFlexContainer": "dFlexContainer"; "dOrder": "dOrder"; "dAlign": "dAlign"; "dAlignSelf": "dAlignSelf"; "dJustify": "dJustify"; "dFlexWrap": "dFlexWrap"; }, {}, never>;
}
