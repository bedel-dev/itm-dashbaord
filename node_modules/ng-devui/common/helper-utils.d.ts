import { HttpClient } from '@angular/common/http';
import * as i0 from "@angular/core";
declare const enum Browser {
    IE = "IE",
    ClassicEdge = "ClassicEdge",
    Firefox = "Firefox",
    Opera = "Opera",
    Edge = "Edge",
    Chrome = "Chrome",
    Safari = "Safari",
    Other = "Other"
}
export declare class HelperUtils {
    private static _browserName;
    private static _browserVersion;
    static getBrowserName(): Browser;
    static getBrowserVersion(): any;
    private static getBrowserInfo;
    static jumpOuterUrl(url: any, target?: string): void;
    static downloadFile(url: string, option?: {
        method?: 'POST' | 'GET' | 'post' | 'get';
        params?: {
            [property: string]: string;
        };
        enctype?: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain';
        iframename?: string;
    }, onError?: (response: any) => void): void;
    static downloadFileByHttpClient(httpClient: HttpClient, url: string, option?: {
        method?: 'POST' | 'GET' | 'post' | 'get';
        params?: {
            [property: string]: string;
        };
        enctype?: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain';
        header?: {
            [header: string]: string | string[];
        };
        responseOption?: 'response' | 'body' | 'json';
        reportProgress?: boolean;
        filename?: string;
        withCredentials?: boolean;
        downloadWithoutDispositionHeader?: boolean;
    }, onError?: (response: any) => void, onSuccess?: (response: any) => void, onProgress?: (response: any) => void): void;
    private static utf8ArrayToStr;
}
export declare class SimulateATagDirective {
    href: string;
    target: '_blank' | '_self' | '_parent' | '_top' | string;
    constructor();
    onClick(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SimulateATagDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SimulateATagDirective, "[dSimulateATag]", never, { "href": "href"; "target": "target"; }, {}, never>;
}
export {};
