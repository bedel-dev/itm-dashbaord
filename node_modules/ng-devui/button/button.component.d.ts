import { AfterContentChecked, ChangeDetectorRef, ElementRef, EventEmitter, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
export declare type IButtonType = 'button' | 'submit' | 'reset';
/**
 * 类型中text-dark参数废弃
 */
export declare type IButtonStyle = 'common' | 'primary' | 'text' | 'text-dark' | 'danger' | 'success' | 'warning';
export declare type IButtonPosition = 'left' | 'right' | 'default';
export declare type IButtonSize = 'lg' | 'md' | 'sm' | 'xs';
export declare class ButtonComponent implements AfterContentChecked {
    private cd;
    id: string;
    type: IButtonType;
    bsStyle: IButtonStyle;
    shape: 'circle';
    bsSize: IButtonSize;
    /**
     * @deprecated
     * 原左右按钮用按钮组实现
     */
    bsPosition: IButtonPosition;
    bordered: boolean;
    icon: string;
    disabled: boolean;
    showLoading: boolean;
    width?: string;
    autofocus: boolean;
    loadingTemplateRef: TemplateRef<any>;
    btnClick: EventEmitter<MouseEvent>;
    buttonContent: ElementRef;
    handleDisabled($event: Event): void;
    constructor(cd: ChangeDetectorRef);
    onClick(event: any): void;
    ngAfterContentChecked(): void;
    hasContent(): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<ButtonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ButtonComponent, "d-button", never, { "id": "id"; "type": "type"; "bsStyle": "bsStyle"; "shape": "shape"; "bsSize": "bsSize"; "bsPosition": "bsPosition"; "bordered": "bordered"; "icon": "icon"; "disabled": "disabled"; "showLoading": "showLoading"; "width": "width"; "autofocus": "autofocus"; "loadingTemplateRef": "loadingTemplateRef"; }, { "btnClick": "btnClick"; }, never, ["*"]>;
}
