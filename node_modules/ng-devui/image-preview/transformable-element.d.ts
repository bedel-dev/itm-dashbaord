export declare class TransformableElement {
    private _element;
    private _mouseDown;
    private _originMouseX;
    private _originMouseY;
    private _originTranslateX;
    private _originTranslateY;
    get element(): HTMLElement;
    set element(ele: HTMLElement);
    private zoom;
    private turn;
    private translateX;
    private translateY;
    private eventSub;
    private zoomSub;
    MIN_SCALE: number;
    MAX_SCALE: number;
    constructor(element: HTMLElement, { zoom, turn, translateX, translateY }: {
        zoom?: number;
        turn?: number;
        translateX?: number;
        translateY?: number;
    });
    setElementListener(): void;
    removeElementListener(): void;
    mouseZoom($event: any): void;
    mouseDown($event: any): void;
    mouseMove($event: any): void;
    mouseUp($event: any): void;
    zoomOut(step?: number): void;
    zoomIn(step?: number): void;
    rotate(): void;
    setOriginalScale(): void;
    setBestScale(): void;
    resetTransformProperties(): void;
    setElementTransform(target?: any, zoom?: number, translateX?: number, translateY?: number, turn?: number): void;
}
