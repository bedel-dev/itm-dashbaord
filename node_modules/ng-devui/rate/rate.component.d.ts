import { ChangeDetectorRef, OnInit, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class RateComponent implements OnInit, ControlValueAccessor {
    private cdr;
    /**
     * @deprecated
     * 用readonly替代
    */
    set read(value: any);
    readonly: boolean;
    count: number;
    color: string;
    /**
     * @deprecated
     * 用character替代
    */
    icon: string;
    character: string | TemplateRef<any>;
    /**
     * @deprecated
     * 用color替代
    */
    set type(value: any);
    allowHalf: boolean;
    allowClear: boolean;
    totalLevel_array: any[];
    chooseValue: number;
    width: string;
    onChange: (value: number) => void;
    onTouched: () => void;
    constructor(cdr: ChangeDetectorRef);
    ngOnInit(): void;
    get isCharacterTemplate(): boolean;
    get characterTemplate(): TemplateRef<any>;
    setStaticRating(): void;
    setDynamicRating(): void;
    hoverToggle(event: any, index?: number, reset?: boolean): void;
    setChange(start: any, end: any, width: any): void;
    selectValue(event: any, index: any): void;
    registerOnChange(fn: (_: number) => void): void;
    registerOnTouched(fn: () => void): void;
    writeValue(value: number | null): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RateComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RateComponent, "d-rate", never, { "read": "read"; "readonly": "readonly"; "count": "count"; "color": "color"; "icon": "icon"; "character": "character"; "type": "type"; "allowHalf": "allowHalf"; "allowClear": "allowClear"; }, {}, never, never>;
}
